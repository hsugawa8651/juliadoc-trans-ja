<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tmx SYSTEM "tmx11.dtd">
<tmx version="1.1">
  <header creationtool="OmegaT" o-tmf="OmegaT TMX" adminlang="EN-US" datatype="plaintext" creationtoolversion="3.6.0_10_r10436" segtype="sentence" srclang="EN-US"/>
  <body>
<!-- Default translations -->
    <tu>
      <tuv lang="EN-US">
        <seg>!&lt;x1/&gt; indicates that it will mutate or destroy the
value of one or more of its arguments (compare, for example, &lt;x2/&gt;`sort`&lt;x3/&gt; and &lt;x4/&gt;`sort!`&lt;x5/&gt;).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154213Z" creationid="hsugawa8651" creationdate="20181109T154213Z">
        <seg>&lt;x1/&gt;は、それが突然変異または破壊されることを示しています。 一つ以上の引数の値(例えば、&lt;x2/&gt;`sort'&lt;x3/&gt;、&lt;x4/&gt;`sort!"&lt;x5/&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>", ["First", "Second", "Third"])
3-element Array{String,1}:
 "1.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160149Z" creationid="hsugawa8651" creationdate="20181109T160147Z">
        <seg>1", ["First", "Second", "Third"])
3-element Array{String,1}:
 "1.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"less than" : "not less than")
less than

julia&gt; x = 1; y = 0;

julia&gt; println(x &lt; y ?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230126Z" creationid="hsugawa8651" creationdate="20181109T230126Z">
        <seg>"less than" : "not less than")
less than

julia&gt; x = 1; y = 0;

julia&gt; println(x &lt; y ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"less than" : "not less than")
not less than</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230129Z" creationid="hsugawa8651" creationdate="20181109T230129Z">
        <seg>"less than" : "not less than")
not less than</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"x is greater than y" : "x is equal to y")
test (generic function with 1 method)

julia&gt; test(1, 2)
x is less than y

julia&gt; test(2, 1)
x is greater than y

julia&gt; test(1, 1)
x is equal to y</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230146Z" creationid="hsugawa8651" creationdate="20181109T230146Z">
        <seg>"x is greater than y" : "x is equal to y")
test (generic function with 1 method)

julia&gt; test(1, 2)
x is less than y

julia&gt; test(2, 1)
x is greater than y

julia&gt; test(1, 1)
x is equal to y</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>"x is less than y"    :
                            x &gt; y ?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230144Z" creationid="hsugawa8651" creationdate="20181109T230144Z">
        <seg>"x is less than y"    :
                            x &gt; y ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$ echo 'println("Greetings!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224456Z" creationid="hsugawa8651" creationdate="20181109T224456Z">
        <seg>$ echo 'println("Greetings!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$ echo 'println(PROGRAM_FILE); for x in ARGS; println(x); end' &gt; script.jl
$ julia script.jl foo bar
script.jl
foo
bar</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224352Z" creationid="hsugawa8651" creationdate="20181109T224352Z">
        <seg>$ echo 'println(PROGRAM_FILE); for x in ARGS; println(x); end' &gt; script.jl
$ julia script.jl foo bar
script.jl
foo
bar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$ julia --color=yes -O -- foo.jl arg1 arg2..</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224359Z" creationid="hsugawa8651" creationdate="20181109T224359Z">
        <seg>$ julia --color=yes -O -- foo.jl arg1 arg2..</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$ julia -e 'println(PROGRAM_FILE); for x in ARGS; println(x); end' foo bar

foo
bar</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224343Z" creationid="hsugawa8651" creationdate="20181109T224343Z">
        <seg>$ julia -e 'println(PROGRAM_FILE); for x in ARGS; println(x); end' foo bar

foo
bar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>$ julia script.jl arg1 arg2...</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224325Z" creationid="hsugawa8651" creationdate="20181109T224325Z">
        <seg>$ julia script.jl arg1 arg2...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(@id man-anonymous-functions)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025951Z" creationid="hsugawa8651" creationdate="20181110T025951Z">
        <seg>(@id man-anonymous-functions)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(@id man-array-indexing)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155105Z" creationid="hsugawa8651" creationdate="20181109T155105Z">
        <seg>(@id man-array-indexing)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(@id man-conditional-evaluation)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225826Z" creationid="hsugawa8651" creationdate="20181109T225826Z">
        <seg>(@id man-conditional-evaluation)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(@id man-loops)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230921Z" creationid="hsugawa8651" creationdate="20181109T230921Z">
        <seg>(@id man-loops)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(@ref Base.EnvDict)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041814Z" creationid="hsugawa8651" creationdate="20181112T041814Z">
        <seg>(@ref Base.EnvDict)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(@ref Base.ImmutableDict)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041818Z" creationid="hsugawa8651" creationdate="20181112T041818Z">
        <seg>(@ref Base.ImmutableDict)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(@ref Base.getproperty)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025921Z" creationid="hsugawa8651" creationdate="20181110T025921Z">
        <seg>(@ref Base.getproperty)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(@ref man-conditional-evaluation): &lt;x1/&gt;if&lt;x2/&gt;-&lt;x3/&gt;elseif&lt;x4/&gt;-&lt;x5/&gt;else&lt;x6/&gt; and &lt;x7/&gt;?:&lt;x8/&gt; (ternary operator).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225720Z" creationid="hsugawa8651" creationdate="20181109T225720Z">
        <seg>(@ref man条件付き評価):&lt;x1/&gt;-&lt;x2/&gt;-&lt;x3/&gt;else&lt;x4/&gt;-&lt;x5/&gt;else&lt;x6/&gt;および&lt;x7/&gt;?:&lt;x8/&gt;(三元演算子):&lt;x8/&gt;&lt;x8/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(For comparison
operations like &lt;x5/&gt;&lt;&lt;x6/&gt;, &lt;x7/&gt;only&lt;x8/&gt; the elementwise &lt;x9/&gt;.&lt;&lt;x10/&gt; version is applicable to arrays.)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160021Z" creationid="hsugawa8651" creationdate="20181109T160021Z">
        <seg>(比較のために &lt;x5/&gt;&lt;x6/&gt;のような操作、&lt;x7/&gt;&lt;x6/&gt;&lt;x8/&gt;&lt;x10/&gt;&lt;x8/&gt;&lt;x10/&gt;は、配列に適用されます。)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(Non-library function calls in both C and Julia can
be inlined and thus may have even less overhead than calls to shared library functions.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160555Z" creationid="hsugawa8651" creationdate="20181109T160555Z">
        <seg>(CとJuliaの両方での非ライブラリ関数呼び出しは 共有ライブラリ関数への呼び出しよりも、インライン化されているため、オーバーヘッドが少なくて済みます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(The above expression uses several features that have yet to be introduced, including &lt;x5/&gt;&lt;x6/&gt;&lt;x7/&gt;(@ref man-loops),
&lt;x8/&gt;&lt;x9/&gt;&lt;x10/&gt;(@ref man-strings), and &lt;x11/&gt;Interpolation&lt;x12/&gt;, but should be easy enough to understand for users
with some existing programming experience.)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225610Z" creationid="hsugawa8651" creationdate="20181109T225610Z">
        <seg>(上記の式では、&lt;x5/&gt;&lt;x6/&gt;&lt;x7/&gt;(@ref man loops)など、まだ導入されていないいくつかの機能を使用しています。 &lt;x8/&gt;&lt;x9/&gt;&lt;x10/&gt;(@ref manストリング)、&lt;x11/&gt;補間&lt;x12/&gt;は、ユーザが理解するのに十分な大きさである必要があります。 既存のプログラミング経験があります)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(generic function with 1 method)

julia&gt; change_array!(x)
5

julia&gt; x
3-element Array{Int64,1}:
 5
 2
 3</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025053Z" creationid="hsugawa8651" creationdate="20181110T025053Z">
        <seg>(generic function with 1 method)

julia&gt; change_array!(x)
5

julia&gt; x
3-element Array{Int64,1}:
 5
 2
 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(generic function with 1 method)

julia&gt; change_value!(x)
17

julia&gt; x &lt;x1/&gt; x is unchanged!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025006Z" creationid="hsugawa8651" creationdate="20181110T025006Z">
        <seg>(generic function with 1 method)

julia&gt; change_value!(x)
17

julia&gt; x &lt;x1/&gt; x is unchanged!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>(y, x) : (x, y)

julia&gt; range((min, max)) = max - min

julia&gt; range(minmax(10, 2))
8</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030043Z" creationid="hsugawa8651" creationdate="20181110T030043Z">
        <seg>(y, x) : (x, y)

julia&gt; range((min, max)) = max - min

julia&gt; range(minmax(10, 2))
8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>-v&lt;x1/&gt;, &lt;x2/&gt;--version&lt;x3/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224601Z" creationid="hsugawa8651" creationdate="20181109T224549Z">
        <seg>-v&lt;x1/&gt;, &lt;x2/&gt;--version&lt;x3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>...</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224510Z" creationid="hsugawa8651" creationdate="20181109T224510Z">
        <seg>...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>10</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025013Z" creationid="hsugawa8651" creationdate="20181110T025013Z">
        <seg>10</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:a : (@static Sys.isapple() ?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225018Z" creationid="hsugawa8651" creationdate="20181109T225018Z">
        <seg>:a : (@static Sys.isapple() ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>:b : :c)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225020Z" creationid="hsugawa8651" creationdate="20181109T225020Z">
        <seg>:b : :c)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x1/&gt; 32-bit or 64-bit system:
julia&gt; typeof(3000000000)
Int64</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225311Z" creationid="hsugawa8651" creationdate="20181109T225311Z">
        <seg>&lt;x1/&gt; 32-bit or 64-bit system:
julia&gt; typeof(3000000000)
Int64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x1/&gt; 32-bit system:
julia&gt; typeof(1)
Int32

&lt;x2/&gt; 64-bit system:
julia&gt; typeof(1)
Int64</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225233Z" creationid="hsugawa8651" creationdate="20181109T225233Z">
        <seg>&lt;x1/&gt; 32-bit system:
julia&gt; typeof(1)
Int32

&lt;x2/&gt; 64-bit system:
julia&gt; typeof(1)
Int64</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x1/&gt;!/bin/bash
&lt;x2/&gt;=
exec julia --color=yes --startup-file=no -e 'include(popfirst!(ARGS))' \
    "${BASH_SOURCE[0]}" "$@"
=&lt;x3/&gt;

@show ARGS  &lt;x4/&gt; put any Julia code here</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024929Z" creationid="hsugawa8651" creationdate="20181110T024929Z">
        <seg>&lt;x1/&gt;!/bin/bash
&lt;x2/&gt;=
exec julia --color=yes --startup-file=no -e 'include(popfirst!(ARGS))' \
    "${BASH_SOURCE[0]}" "$@"
=&lt;x3/&gt;

@show ARGS  &lt;x4/&gt; put any Julia code here</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x1/&gt;`CartesianIndex` and arrays of `CartesianIndex` are not compatible with the&lt;x2/&gt;&lt;x3/&gt;`end` keyword to represent the last index of a dimension.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155752Z" creationid="hsugawa8651" creationdate="20181109T155752Z">
        <seg>&lt;x1/&gt;`CartesianIndex'と「CartesianIndex」の配列は、次元の最後のインデックスを表すために、&lt;x2/&gt;&lt;x3/&gt;'end"キーワードと互換性がない。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x1/&gt;`Task`&lt;x2/&gt;s
are not so standard: they provide non-local control flow, making it possible to switch between
temporarily-suspended computations.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225746Z" creationid="hsugawa8651" creationdate="20181109T225746Z">
        <seg>&lt;x1/&gt;`タスク`&lt;x2/&gt;s はあまり標準的ではないため、ローカルではない制御フローを提供することができます。 一時的に中断された計算です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x12/&gt;user&lt;x13/&gt; defaults to current user,
&lt;x14/&gt;port&lt;x15/&gt; to the standard ssh port.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224441Z" creationid="hsugawa8651" creationdate="20181109T224441Z">
        <seg>&lt;x12/&gt;ユーザ&lt;x13/&gt;デフォルトは現在のユーザになります。 &lt;x14/&gt;ポート&lt;x15/&gt;は、標準的なsshポートに対して設定されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x16/&gt;count&lt;x17/&gt; is the number of workers to spawn on the node, and defaults
to 1.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224446Z" creationid="hsugawa8651" creationdate="20181109T224446Z">
        <seg>&lt;x16/&gt;count&lt;x17/&gt;は、ノード上でスポーンするワーカーの数です。デフォルトは 1です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x21/&gt;DenseArray&lt;x22/&gt; is a
very specific example of a strided array where the elements are arranged contiguously, thus it
provides its subtypes with the appropriate definition of &lt;x23/&gt;strides&lt;x24/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160511Z" creationid="hsugawa8651" creationdate="20181109T160511Z">
        <seg>&lt;X21/&gt;DenseArray&lt;x22/&gt;は エレメントが隣接して配置されたストローブ配列の非常に特異的な例であり、したがって は、&lt;x23/&gt;の拡張&lt;x24/&gt;の適切な定義を使用してサブタイプを提供します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x28/&gt;`StridedVector`&lt;x29/&gt; and &lt;x30/&gt;`StridedMatrix`&lt;x31/&gt; are convenient aliases for many of the builtin array types that
are considered strided arrays, allowing them to dispatch to select specialized implementations that
call highly tuned and optimized BLAS and LAPACK functions using just the pointer and strides.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160519Z" creationid="hsugawa8651" creationdate="20181109T160519Z">
        <seg>&lt;x28/&gt;「StridedVector」&lt;x29/&gt;および&lt;x30/&gt;「StridedMatrix」&lt;x31/&gt;は、組み込み型の配列タイプの多くにとって便利なエイリアスです。 は、ストレーテッド・アレイとみなされ、選択された特殊な実装にディスパッチできるようになります。 ポインタと前進だけを使って、BLASとLAPACK関数を高度に調整し、最適化することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x5/&gt;-p n&lt;x6/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224412Z" creationid="hsugawa8651" creationdate="20181109T224412Z">
        <seg>&lt;x5/&gt;-p n&lt;x6/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>&lt;x8/&gt;`view`&lt;x9/&gt; stores the input index vectors in a
&lt;x10/&gt;SubArray&lt;x11/&gt; object, which can later be used to index the original array
indirectly.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160440Z" creationid="hsugawa8651" creationdate="20181109T160440Z">
        <seg>&lt;x8/&gt;'view'&lt;x9/&gt;は、入力インデックスベクトルを &lt;x10/&gt;サブアレイ&lt;x11/&gt;オブジェクトで、後でオリジナルの配列をインデックス化するために使用できます。 間接的に。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>=&lt;x1/&gt;&lt;x2/&gt; is ignored by &lt;x3/&gt;bash&lt;x4/&gt; since it stops
parsing the file once it reaches to the &lt;x5/&gt;exec&lt;x6/&gt; statement.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024947Z" creationid="hsugawa8651" creationdate="20181110T024947Z">
        <seg>=&lt;x1/&gt;&lt;x2/&gt;は、&lt;x3/&gt;bash&lt;x4/&gt;によって無視されます。なぜならば、それは停止するからです。 &lt;x5/&gt;exec&lt;x6/&gt;ステートメントに到達したファイルを解析します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@static Sys.iswindows() ?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225012Z" creationid="hsugawa8651" creationdate="20181109T225012Z">
        <seg>@static Sys.iswindows() ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>@static if Sys.islinux()
    linux_specific_thing(a)
else
    generic_thing(a)
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224958Z" creationid="hsugawa8651" creationdate="20181109T224958Z">
        <seg>@static if Sys.islinux()
    linux_specific_thing(a)
else
    generic_thing(a)
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A "strided" array is stored in memory with elements laid out in regular offsets such that
an instance with a supported &lt;x1/&gt;isbits&lt;x2/&gt; element type can be passed to
external C and Fortran functions that expect this memory layout.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160455Z" creationid="hsugawa8651" creationdate="20181109T160455Z">
        <seg>"stried"配列は、規則的なオフセットに配置された要素を含むメモリに格納されます。 サポートされる&lt;x1/&gt;イスビトス&lt;x2/&gt;エレメントタイプを持つインスタンスは このメモリレイアウトを期待する外部CとFortranの関数です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A &lt;x1/&gt;(:function, "library")&lt;x2/&gt; pair, which must be written as a literal constant,</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223837Z" creationid="hsugawa8651" creationdate="20181109T223837Z">
        <seg>&lt;x1/&gt;(:関数、"ライブラリ")&lt;x2/&gt;ペアで、リテラル定数として記述される必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A curated list of useful learning resources to help new users get started can be found on the &lt;x1/&gt;learning&lt;x2/&gt; page of the main Julia web site.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224812Z" creationid="hsugawa8651" creationdate="20181109T224812Z">
        <seg>新しいユーザを支援するための有用な学習リソースのリストは、Julia Webサイトの&lt;x1/&gt;学習&lt;x2/&gt;ページに掲載されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A function is called using the traditional parenthesis syntax:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025625Z" creationid="hsugawa8651" creationdate="20181110T025625Z">
        <seg>関数は、従来の括弧構文を使用して呼び出されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A function name may be used alone in place of the tuple (just &lt;x1/&gt;:function&lt;x2/&gt; or &lt;x3/&gt;"function"&lt;x4/&gt;).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223757Z" creationid="hsugawa8651" creationdate="20181109T223757Z">
        <seg>関数の関数名はタプルの代わりに単独で使用することができる(単に&lt;x1/&gt;:関数&lt;x2/&gt;または&lt;x3/&gt;"関数&lt;x4/&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A logical index
must be a vector of the same length as the dimension it indexes into, or it
must be the only index provided and match the size and dimensionality of the
array it indexes into.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155807Z" creationid="hsugawa8651" creationdate="20181109T155807Z">
        <seg>論理インデックス は、インデックスを作成する寸法と同じ長さのベクトルである必要があります。また 指定された唯一のインデックスであり にインデックスを作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A tuple of input types.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223952Z" creationid="hsugawa8651" creationdate="20181109T223952Z">
        <seg>入力タイプのタプル。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A way to determine that a file is run in
this fashion is to check if &lt;x3/&gt;abspath(PROGRAM_FILE) == @__FILE__&lt;x4/&gt; is &lt;x5/&gt;true&lt;x6/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024900Z" creationid="hsugawa8651" creationdate="20181110T024900Z">
        <seg>ファイルが実行されることを判別する方法 この方法は、&lt;x3/&gt;アブスパス(PROGRAM_FILE)==@_FILE__&lt;x4/&gt;が&lt;x6/&gt;真&lt;x6/&gt;であるかどうかをチェックすることです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A'&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025859Z" creationid="hsugawa8651" creationdate="20181110T025859Z">
        <seg>A'&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A.n = x&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025934Z" creationid="hsugawa8651" creationdate="20181110T025934Z">
        <seg>A.n = x&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A.n&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025918Z" creationid="hsugawa8651" creationdate="20181110T025918Z">
        <seg>A.n&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A&lt;x1/&gt; is overwritten with the value &lt;x2/&gt;X[i_1, i_2, ..., i_n]&lt;x3/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155417Z" creationid="hsugawa8651" creationdate="20181109T155417Z">
        <seg>&lt;x1/&gt;は、&lt;x2/&gt;X[i_1,i_2,…,i_n]&lt;x3/&gt;の値で上書きされる。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A[i] = x&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025915Z" creationid="hsugawa8651" creationdate="20181110T025915Z">
        <seg>A[i] = x&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>A[i]&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025906Z" creationid="hsugawa8651" creationdate="20181110T025906Z">
        <seg>A[i]&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>AbstractString&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041613Z" creationid="hsugawa8651" creationdate="20181112T041613Z">
        <seg>AbstractString&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Adding parentheses lets
us add a third argument to &lt;x3/&gt;`map`&lt;x4/&gt;:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154956Z" creationid="hsugawa8651" creationdate="20181109T154956Z">
        <seg>括弧を追加すると &lt;x3/&gt;'map`&lt;x4/&gt;:に3番目の引数を追加します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additional functionality is available from a growing collection of available packages.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041650Z" creationid="hsugawa8651" creationdate="20181110T041650Z">
        <seg>Additional functionality is available from a growing collection of available packages.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally,
there is a macro &lt;x7/&gt;@static&lt;x8/&gt; which makes it possible to use these functions to conditionally hide
invalid code, as demonstrated in the following examples.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224947Z" creationid="hsugawa8651" creationdate="20181109T224947Z">
        <seg>さらに マクロ&lt;x7/&gt;@static&lt;x8/&gt;があるため、これらの関数を使用して条件付きで非表示にすることができます。 次の例で示されているように、無効なコードです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, &lt;x1/&gt;`broadcast`&lt;x2/&gt; is not limited to arrays (see the function documentation),
it also handles tuples and treats any argument that is not an array, tuple or &lt;x3/&gt;`Ref`&lt;x4/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160134Z" creationid="hsugawa8651" creationdate="20181109T160134Z">
        <seg>さらに、&lt;x1/&gt;`broadcast'&lt;x2/&gt;は配列に限定されるものではありません(関数の文書を参照してください)。 また、タプルや、配列ではない引数、タプル、&lt;x3/&gt;`Ref"&lt;x4/&gt;を処理することもできません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, Julia provides
software support for &lt;x1/&gt;Arbitrary Precision Arithmetic&lt;x2/&gt;, which can handle operations on numeric
values that cannot be represented effectively in native hardware representations, but at the cost
of relatively slower performance.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225054Z" creationid="hsugawa8651" creationdate="20181109T225054Z">
        <seg>さらに、ジュリアは &lt;x1/&gt;任意精度算術演算&lt;x2/&gt;のソフトウェアサポートで、数値の操作を処理できます。 ネイティブのハードウェア表現では効果的に表現できないが、コストでは効果的に表現できない値 比較的遅いパフォーマンスです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Additionally, full support for &lt;x1/&gt;Complex and Rational Numbers&lt;x2/&gt; is built on top of these primitive
numeric types.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225152Z" creationid="hsugawa8651" creationdate="20181109T225152Z">
        <seg>さらに、&lt;x1/&gt;ComplexおよびRational Numbers&lt;x2/&gt;の完全なサポートは、これらのプリミティブに基づいて構築されています。 数値型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All comma-separated expressions after &lt;x1/&gt;for&lt;x2/&gt; are interpreted as ranges.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154952Z" creationid="hsugawa8651" creationdate="20181109T154948Z">
        <seg>&lt;x2/&gt;のために&lt;x1/&gt;の後にコンマで区切られたすべての式は、範囲として解釈されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>All numeric types interoperate naturally without explicit casting, thanks to a
flexible, user-extensible &lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref conversion-and-promotion).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225156Z" creationid="hsugawa8651" creationdate="20181109T225156Z">
        <seg>すべての数値型は、明示的なキャストなしで自然に相互運用されます。 柔軟なユーザー拡張可能な&lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref変換とプロモーション)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also &lt;x3/&gt;in&lt;x4/&gt; and &lt;x5/&gt;isa&lt;x6/&gt; are parsed as infix operators.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041805Z" creationid="hsugawa8651" creationdate="20181110T041805Z">
        <seg>&lt;x4/&gt;では&lt;x3/&gt;、&lt;x5/&gt;では&lt;x6/&gt;である&lt;x6/&gt;は、インフィックス演算子として解析されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also notice the difference between &lt;x1/&gt;max.(a,b)&lt;x2/&gt;, which &lt;x3/&gt;`broadcast`&lt;x4/&gt;s &lt;x5/&gt;`max`&lt;x6/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160027Z" creationid="hsugawa8651" creationdate="20181109T160027Z">
        <seg>また、&lt;x1/&gt;の最大値(a,b)&lt;x2/&gt;は、&lt;x3/&gt;"ブロードキャスト"&lt;x4/&gt;"max"&lt;x6/&gt;"max'&lt;x6/&gt;の差があることに注意してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, &lt;x1/&gt;every&lt;x2/&gt; binary operator supports a &lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref man-dot-operators)
that can be applied to arrays (and combinations of arrays and scalars) in such
&lt;x6/&gt;&lt;x7/&gt;&lt;x8/&gt;(@ref man-vectorized), e.g. &lt;x9/&gt;z .== sin.(x .* y)&lt;x10/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160010Z" creationid="hsugawa8651" creationdate="20181109T160010Z">
        <seg>また、&lt;x2/&gt;バイナリ演算子の&lt;x1/&gt;は、&lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref man dot演算子)をサポートします。 は、配列(および配列とスカラーの組み合わせ)に適用することができます。 &lt;x6/&gt;&lt;x7/&gt;&lt;x8/&gt;(@ref manベクトル化)、例えば&lt;x9/&gt;z.=sin.(x .* y)&lt;x10/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Also, when calling a Fortran function, all inputs must be passed as
pointers to allocated values on the heap or stack.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223810Z" creationid="hsugawa8651" creationdate="20181109T223810Z">
        <seg>また、Fortran関数を呼び出す場合は、すべての入力を次のように指定する必要があります。 ヒープまたはスタック上の割り当てられた値へのポインタ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, &lt;x1/&gt;using Module&lt;x2/&gt; will import all exported &lt;x3/&gt;Module&lt;x4/&gt; functions into the current namespace.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041717Z" creationid="hsugawa8651" creationdate="20181110T041717Z">
        <seg>あるいは、モジュール&lt;x2/&gt;を使用する&lt;x1/&gt;は、エクスポートされたすべての&lt;x3/&gt;モジュール&lt;x4/&gt;関数を現在の名前空間にインポートします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Alternatively, you can use &lt;x7/&gt;julia -e 'include(popfirst!(ARGS))'
file.jl&lt;x8/&gt; to execute a script while being able to catch
&lt;x9/&gt;InterruptException&lt;x10/&gt; in the &lt;x11/&gt;`try`&lt;x12/&gt; block.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024913Z" creationid="hsugawa8651" creationdate="20181110T024913Z">
        <seg>または、&lt;x7/&gt;julia-e'include(ポプファースト!(ARGS))'を使用することもできます。 ファイル.jl&lt;x8/&gt;を実行すると、スクリプトをキャッチしながらスクリプトを実行することができます。 &lt;x11/&gt;'try'&lt;x12/&gt;ブロックで&lt;x9/&gt;InterruptException&lt;x10/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Although it is typical, there is no requirement that &lt;x3/&gt;begin&lt;x4/&gt; blocks be multiline
or that &lt;x5/&gt;(;)&lt;x6/&gt; chains be single-line:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225821Z" creationid="hsugawa8651" creationdate="20181109T225821Z">
        <seg>典型的なものではあるが、&lt;x3/&gt;が&lt;x4/&gt;ブロックがマルチラインである必要はない。 または&lt;x5/&gt;(;)&lt;x6/&gt;鎖は単一行である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An array is a collection of objects stored in a multi-dimensional grid.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154138Z" creationid="hsugawa8651" creationdate="20181109T154138Z">
        <seg>配列は、多次元グリッドに格納されたオブジェクトの集合です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An array of scalar indices.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155517Z" creationid="hsugawa8651" creationdate="20181109T155517Z">
        <seg>スカラー・インデックスの配列です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An array with a specific element type can be constructed using the syntax &lt;x1/&gt;T[A, B, C, ...]&lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154659Z" creationid="hsugawa8651" creationdate="20181109T154659Z">
        <seg>特定の要素タイプを持つ配列は、構文&lt;x1/&gt;T[A,B,C,…]&lt;x2/&gt;を使用して構築することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An inefficient way to do this would
be to replicate the vector to the size of the matrix:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160043Z" creationid="hsugawa8651" creationdate="20181109T160043Z">
        <seg>非効率的な方法は ベクトルをマトリックスのサイズに複製することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>An object that represents an array of scalar indices and can be converted to such by &lt;x1/&gt;`to_indices`&lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155534Z" creationid="hsugawa8651" creationdate="20181109T155534Z">
        <seg>スカラーインデックスの配列を表すオブジェクトであって、&lt;x1/&gt;"to_indices"&lt;x2/&gt;によって変換されることが可能である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Any custom array of scalar indices that is a subtype of &lt;x1/&gt;AbstractArray&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155529Z" creationid="hsugawa8651" creationdate="20181109T155529Z">
        <seg>&lt;x1/&gt;AbstractArray&lt;x2/&gt;のサブタイプであるスカラーインデックスの任意のカスタム配列</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arguments
to &lt;x3/&gt;`ccall`&lt;x4/&gt; are as follows:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223834Z" creationid="hsugawa8651" creationdate="20181109T223834Z">
        <seg>引数 &lt;x3/&gt;'ccall'&lt;x4/&gt;は次のようになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arguments to &lt;x3/&gt;`@cfunction`&lt;x4/&gt; are as follows:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153935Z" creationid="hsugawa8651" creationdate="20181109T153935Z">
        <seg>&lt;x3/&gt;`@cfunction`&lt;x4/&gt;への引数は次のとおりです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arrays can be constructed and also concatenated using the following functions:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154543Z" creationid="hsugawa8651" creationdate="20181109T154543Z">
        <seg>配列は、次の関数を使用して構成したり、連結することもできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arrays of &lt;x1/&gt;CartesianIndex{N}&lt;x2/&gt; (see below for more details)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155531Z" creationid="hsugawa8651" creationdate="20181109T155531Z">
        <seg>&lt;x1/&gt;CartesianIndex{N}&lt;x2/&gt;(詳細については以下を参照)のアレイ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Arrays of booleans, which select elements at their &lt;x1/&gt;true&lt;x2/&gt; indices (see below for more details)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155544Z" creationid="hsugawa8651" creationdate="20181109T155544Z">
        <seg>ブール値の配列で、&lt;x1/&gt;真の&lt;x2/&gt;インデックスで要素を選択します(詳細については、以下を参照)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a complete but simple example, the following calls the &lt;x1/&gt;clock&lt;x2/&gt; function from the standard C
library:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224014Z" creationid="hsugawa8651" creationdate="20181109T224014Z">
        <seg>完全ではあるが単純な例として、以下の呼び出しは標準Cから&lt;x1/&gt;クロック&lt;x2/&gt;関数を呼び出します。 ライブラリ:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As a special part of this syntax, the &lt;x1/&gt;end&lt;x2/&gt; keyword may be used to represent the last index of
each dimension within the indexing brackets, as determined by the size of the innermost array
being indexed.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155252Z" creationid="hsugawa8651" creationdate="20181109T155252Z">
        <seg>この構文の特殊な部分として、&lt;x1/&gt;end&lt;x2/&gt;キーワードを使用して、最後のインデックスを表すことができます。 最も内側の配列のサイズによって決定される、索引付けブラケット内の各寸法 インデックス化されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As for hexadecimal literals, binary and octal literals produce unsigned integer types.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225505Z" creationid="hsugawa8651" creationdate="20181109T225505Z">
        <seg>16進数のリテラルに関しては、バイナリと8進数のリテラルは符号なしの整数型を生成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As in C and most other imperative
or functional languages, the &lt;x5/&gt;return&lt;x6/&gt; keyword causes a function to return immediately, providing
an expression whose value is returned:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025731Z" creationid="hsugawa8651" creationdate="20181110T025731Z">
        <seg>Cとその他のほとんどの命令 または関数を使用すると、&lt;x5/&gt;return&lt;x6/&gt;キーワードによって関数が即座に返され、次の関数が返されます。 値が返される式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As such, it's also possible to define custom array types by inheriting
from &lt;x1/&gt;`AbstractArray`&lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154132Z" creationid="hsugawa8651" creationdate="20181109T154132Z">
        <seg>このように、カスタム配列タイプを継承することによって、カスタム配列タイプを定義することも可能です。 &lt;x1/&gt;'AbstractArray'&lt;x2/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>As the example implies, the following command-line arguments to &lt;x1/&gt;julia&lt;x2/&gt; are interpreted as
command-line arguments to the program &lt;x3/&gt;script.jl&lt;x4/&gt;, passed in the global constant &lt;x5/&gt;ARGS&lt;x6/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224332Z" creationid="hsugawa8651" creationdate="20181109T224332Z">
        <seg>この例が示すように、&lt;x1/&gt;julia&lt;x2/&gt;への次のコマンドライン引数は、以下のように解釈されます。 グローバル定数&lt;x5/&gt;ARGS&lt;x6/&gt;で渡されたプログラム&lt;x3/&gt;スクリプト.jl&lt;x4/&gt;へのコマンドライン引数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.AbstractRange
Base.OrdinalRange
Base.AbstractUnitRange
Base.StepRange
Base.UnitRange
Base.LinRange</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041618Z" creationid="hsugawa8651" creationdate="20181112T041618Z">
        <seg>Base.AbstractRange
Base.OrdinalRange
Base.AbstractUnitRange
Base.StepRange
Base.UnitRange
Base.LinRange</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.Base
Base.Broadcast
Base.Docs
Base.Iterators
Base.Libc
Base.Meta
Base.StackTraces
Base.Sys
Base.Threads
Base.GC</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041817Z" creationid="hsugawa8651" creationdate="20181110T041817Z">
        <seg>Base.Base
Base.Broadcast
Base.Docs
Base.Iterators
Base.Libc
Base.Meta
Base.StackTraces
Base.Sys
Base.Threads
Base.GC</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.Dict
Base.IdDict
Base.WeakKeyDict
Base.ImmutableDict
Base.haskey
Base.get(::Any, ::Any, ::Any)
Base.get
Base.get!(::Any, ::Any, ::Any)
Base.get!(::Function, ::Any, ::Any)
Base.getkey
Base.delete!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041800Z" creationid="hsugawa8651" creationdate="20181112T041800Z">
        <seg>Base.Dict
Base.IdDict
Base.WeakKeyDict
Base.ImmutableDict
Base.haskey
Base.get(::Any, ::Any, ::Any)
Base.get
Base.get!(::Any, ::Any, ::Any)
Base.get!(::Function, ::Any, ::Any)
Base.getkey
Base.delete!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.GC.gc
Base.GC.enable
Base.GC.@preserve
Meta.lower
Meta.@lower
Meta.parse(::AbstractString, ::Int)
Meta.parse(::AbstractString)
Meta.ParseError
Base.macroexpand
Base.@macroexpand
Base.@macroexpand1
Base.code_lowered
Base.code_typed
Base.precompile</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042021Z" creationid="hsugawa8651" creationdate="20181110T042021Z">
        <seg>Base.GC.gc
Base.GC.enable
Base.GC.@preserve
Meta.lower
Meta.@lower
Meta.parse(::AbstractString, ::Int)
Meta.parse(::AbstractString)
Meta.ParseError
Base.macroexpand
Base.@macroexpand
Base.@macroexpand1
Base.code_lowered
Base.code_typed
Base.precompile</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.IndexStyle(::Type{&lt;:MyArray}) = IndexLinear()</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155911Z" creationid="hsugawa8651" creationdate="20181109T155911Z">
        <seg>Base.IndexStyle(::Type{&lt;:MyArray}) = IndexLinear()</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.Missing
Base.missing
Base.coalesce
Base.ismissing
Base.skipmissing</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041934Z" creationid="hsugawa8651" creationdate="20181110T041934Z">
        <seg>Base.Missing
Base.missing
Base.coalesce
Base.ismissing
Base.skipmissing</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.Set
Base.BitSet
Base.union
Base.union!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041821Z" creationid="hsugawa8651" creationdate="20181112T041821Z">
        <seg>Base.Set
Base.BitSet
Base.union
Base.union!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.Timer(::Function, ::Real)
Base.Timer
Base.AsyncCondition
Base.AsyncCondition(::Function)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042015Z" creationid="hsugawa8651" creationdate="20181110T042015Z">
        <seg>Base.Timer(::Function, ::Real)
Base.Timer
Base.AsyncCondition
Base.AsyncCondition(::Function)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.VersionNumber
Base.@v_str</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041945Z" creationid="hsugawa8651" creationdate="20181110T041945Z">
        <seg>Base.VersionNumber
Base.@v_str</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.accumulate
Base.accumulate!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041610Z" creationid="hsugawa8651" creationdate="20181110T041610Z">
        <seg>Base.accumulate
Base.accumulate!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.all(::Any)
Base.all(::AbstractArray, ::Any)
Base.all!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041641Z" creationid="hsugawa8651" creationdate="20181112T041641Z">
        <seg>Base.all(::Any)
Base.all(::AbstractArray, ::Any)
Base.all!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.allunique
Base.reduce(::Any, ::Any)
Base.foldl(::Any, ::Any)
Base.foldr(::Any, ::Any)
Base.maximum
Base.maximum!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041633Z" creationid="hsugawa8651" creationdate="20181112T041633Z">
        <seg>Base.allunique
Base.reduce(::Any, ::Any)
Base.foldl(::Any, ::Any)
Base.foldr(::Any, ::Any)
Base.maximum
Base.maximum!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.any(::Any)
Base.any(::AbstractArray, ::Any)
Base.any!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041640Z" creationid="hsugawa8651" creationdate="20181112T041640Z">
        <seg>Base.any(::Any)
Base.any(::AbstractArray, ::Any)
Base.any!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.append!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041923Z" creationid="hsugawa8651" creationdate="20181112T041923Z">
        <seg>Base.append!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.count
Base.any(::Any, ::Any)
Base.all(::Any, ::Any)
Base.foreach
Base.map
Base.map!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041642Z" creationid="hsugawa8651" creationdate="20181112T041642Z">
        <seg>Base.count
Base.any(::Any, ::Any)
Base.all(::Any, ::Any)
Base.foreach
Base.map
Base.map!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.cumprod
Base.cumprod!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041615Z" creationid="hsugawa8651" creationdate="20181110T041615Z">
        <seg>Base.cumprod
Base.cumprod!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.cumsum
Base.cumsum!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041619Z" creationid="hsugawa8651" creationdate="20181110T041619Z">
        <seg>Base.cumsum
Base.cumsum!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.deleteat!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041920Z" creationid="hsugawa8651" creationdate="20181112T041920Z">
        <seg>Base.deleteat!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.diff
Base.repeat
Base.rot180
Base.rotl90
Base.rotr90
Base.mapslices</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041623Z" creationid="hsugawa8651" creationdate="20181110T041623Z">
        <seg>Base.diff
Base.repeat
Base.rot180
Base.rotl90
Base.rotr90
Base.mapslices</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.error
Core.throw
Base.rethrow
Base.backtrace
Base.catch_backtrace
Base.catch_stack
Base.@assert
Base.ArgumentError
Base.AssertionError
Core.BoundsError
Base.CompositeException
Base.DimensionMismatch
Core.DivideError
Core.DomainError
Base.EOFError
Core.ErrorException
Core.InexactError
Core.InterruptException
Base.KeyError
Base.LoadError
Base.MethodError
Base.MissingException
Core.OutOfMemoryError
Core.ReadOnlyMemoryError
Core.OverflowError
Core.StackOverflowError
Base.SystemError
Core.TypeError
Core.UndefKeywordError
Core.UndefRefError
Core.UndefVarError
Base.StringIndexError
Base.InitError
Base.retry
Base.ExponentialBackOff</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042002Z" creationid="hsugawa8651" creationdate="20181110T042002Z">
        <seg>Base.error
Core.throw
Base.rethrow
Base.backtrace
Base.catch_backtrace
Base.catch_stack
Base.@assert
Base.ArgumentError
Base.AssertionError
Core.BoundsError
Base.CompositeException
Base.DimensionMismatch
Core.DivideError
Core.DomainError
Base.EOFError
Core.ErrorException
Core.InexactError
Core.InterruptException
Base.KeyError
Base.LoadError
Base.MethodError
Base.MissingException
Core.OutOfMemoryError
Core.ReadOnlyMemoryError
Core.OverflowError
Core.StackOverflowError
Base.SystemError
Core.TypeError
Core.UndefKeywordError
Core.UndefRefError
Core.UndefVarError
Base.StringIndexError
Base.InitError
Base.retry
Base.ExponentialBackOff</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.exit
Base.atexit
Base.isinteractive
Base.summarysize
Base.require
Base.compilecache
Base.__precompile__
Base.include
Base.MainInclude.include
Base.include_string
Base.include_dependency
Base.which(::Any, ::Any)
Base.methods
Base.@show
ans</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041730Z" creationid="hsugawa8651" creationdate="20181110T041730Z">
        <seg>Base.exit
Base.atexit
Base.isinteractive
Base.summarysize
Base.require
Base.compilecache
Base.__precompile__
Base.include
Base.MainInclude.include
Base.include_string
Base.include_dependency
Base.which(::Any, ::Any)
Base.methods
Base.@show
ans</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.extrema
Base.argmax
Base.argmin
Base.findmax
Base.findmin
Base.findmax!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041635Z" creationid="hsugawa8651" creationdate="20181112T041635Z">
        <seg>Base.extrema
Base.argmax
Base.argmin
Base.findmax
Base.findmin
Base.findmax!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.findmin!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041636Z" creationid="hsugawa8651" creationdate="20181112T041636Z">
        <seg>Base.findmin!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.firstindex
Base.lastindex</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041648Z" creationid="hsugawa8651" creationdate="20181112T041648Z">
        <seg>Base.firstindex
Base.lastindex</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.getindex
Base.setindex!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041647Z" creationid="hsugawa8651" creationdate="20181112T041647Z">
        <seg>Base.getindex
Base.setindex!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.in
Base.:∉
Base.eltype
Base.indexin
Base.unique
Base.unique!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041632Z" creationid="hsugawa8651" creationdate="20181112T041632Z">
        <seg>Base.in
Base.:∉
Base.eltype
Base.indexin
Base.unique
Base.unique!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.insert!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041919Z" creationid="hsugawa8651" creationdate="20181112T041919Z">
        <seg>Base.insert!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.intersect
Base.setdiff
Base.setdiff!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041822Z" creationid="hsugawa8651" creationdate="20181112T041822Z">
        <seg>Base.intersect
Base.setdiff
Base.setdiff!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.intersect!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041825Z" creationid="hsugawa8651" creationdate="20181112T041825Z">
        <seg>Base.intersect!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.invperm
Base.isperm
Base.permute!(::Any, ::AbstractVector)
Base.invpermute!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041628Z" creationid="hsugawa8651" creationdate="20181110T041628Z">
        <seg>Base.invperm
Base.isperm
Base.permute!(::Any, ::AbstractVector)
Base.invpermute!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.isempty
Base.empty!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041622Z" creationid="hsugawa8651" creationdate="20181112T041622Z">
        <seg>Base.isempty
Base.empty!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.isimmutable
Base.isabstracttype
Base.isprimitivetype
Base.isstructtype
Base.nameof(::DataType)
Base.fieldnames
Base.fieldname</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041848Z" creationid="hsugawa8651" creationdate="20181110T041848Z">
        <seg>Base.isimmutable
Base.isabstracttype
Base.isprimitivetype
Base.isstructtype
Base.nameof(::DataType)
Base.fieldnames
Base.fieldname</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.issubset
Base.:⊈
Base.:⊊
Base.issetequal</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041826Z" creationid="hsugawa8651" creationdate="20181112T041826Z">
        <seg>Base.issubset
Base.:⊈
Base.:⊊
Base.issetequal</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.iterate
Base.IteratorSize
Base.IteratorEltype</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041553Z" creationid="hsugawa8651" creationdate="20181112T041553Z">
        <seg>Base.iterate
Base.IteratorSize
Base.IteratorEltype</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.keytype
Base.valtype</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041804Z" creationid="hsugawa8651" creationdate="20181112T041804Z">
        <seg>Base.keytype
Base.valtype</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.length</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041623Z" creationid="hsugawa8651" creationdate="20181112T041623Z">
        <seg>Base.length</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.mapreduce(::Any, ::Any, ::Any)
Base.mapfoldl(::Any, ::Any, ::Any)
Base.mapfoldr(::Any, ::Any, ::Any)
Base.first
Base.last
Base.step
Base.collect(::Any)
Base.collect(::Type, ::Any)
Base.filter
Base.filter!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041643Z" creationid="hsugawa8651" creationdate="20181112T041643Z">
        <seg>Base.mapreduce(::Any, ::Any, ::Any)
Base.mapfoldl(::Any, ::Any, ::Any)
Base.mapfoldr(::Any, ::Any, ::Any)
Base.first
Base.last
Base.step
Base.collect(::Any)
Base.collect(::Type, ::Any)
Base.filter
Base.filter!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.minimum
Base.minimum!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041634Z" creationid="hsugawa8651" creationdate="20181112T041634Z">
        <seg>Base.minimum
Base.minimum!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.nameof(::Module)
Base.parentmodule
Base.pathof(::Module)
Base.moduleroot
Base.@__MODULE__
Base.fullname
Base.names
Core.nfields
Base.isconst
Base.nameof(::Function)
Base.functionloc(::Any, ::Any)
Base.functionloc(::Method)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042018Z" creationid="hsugawa8651" creationdate="20181110T042018Z">
        <seg>Base.nameof(::Module)
Base.parentmodule
Base.pathof(::Module)
Base.moduleroot
Base.@__MODULE__
Base.fullname
Base.names
Core.nfields
Base.isconst
Base.nameof(::Function)
Base.functionloc(::Any, ::Any)
Base.functionloc(::Method)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.ndims
Base.size
Base.axes(::Any)
Base.axes(::AbstractArray, ::Any)
Base.length(::AbstractArray)
Base.eachindex
Base.IndexStyle
Base.IndexLinear
Base.IndexCartesian
Base.conj!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T033608Z" creationid="hsugawa8651" creationdate="20181110T033608Z">
        <seg>Base.ndims
Base.size
Base.axes(::Any)
Base.axes(::AbstractArray, ::Any)
Base.length(::AbstractArray)
Base.eachindex
Base.IndexStyle
Base.IndexLinear
Base.IndexCartesian
Base.conj!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.pointer
Base.unsafe_wrap{T,N}(::Union{Type{Array},Type{Array{T}},Type{Array{T,N}}}, ::Ptr{T}, ::NTuple{N,Int})
Base.pointer_from_objref
Base.unsafe_pointer_to_objref
Base.disable_sigint
Base.reenable_sigint
Base.systemerror
Core.Ptr
Core.Ref
Base.Cchar
Base.Cuchar
Base.Cshort
Base.Cstring
Base.Cushort
Base.Cint
Base.Cuint
Base.Clong
Base.Culong
Base.Clonglong
Base.Culonglong
Base.Cintmax_t
Base.Cuintmax_t
Base.Csize_t
Base.Cssize_t
Base.Cptrdiff_t
Base.Cwchar_t
Base.Cwstring
Base.Cfloat
Base.Cdouble</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042028Z" creationid="hsugawa8651" creationdate="20181110T042028Z">
        <seg>Base.pointer
Base.unsafe_wrap{T,N}(::Union{Type{Array},Type{Array{T}},Type{Array{T,N}}}, ::Ptr{T}, ::NTuple{N,Int})
Base.pointer_from_objref
Base.unsafe_pointer_to_objref
Base.disable_sigint
Base.reenable_sigint
Base.systemerror
Core.Ptr
Core.Ref
Base.Cchar
Base.Cuchar
Base.Cshort
Base.Cstring
Base.Cushort
Base.Cint
Base.Cuint
Base.Clong
Base.Culong
Base.Clonglong
Base.Culonglong
Base.Cintmax_t
Base.Cuintmax_t
Base.Csize_t
Base.Cssize_t
Base.Cptrdiff_t
Base.Cwchar_t
Base.Cwstring
Base.Cfloat
Base.Cdouble</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.pop!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041834Z" creationid="hsugawa8651" creationdate="20181112T041834Z">
        <seg>Base.pop!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.pop!(::Any, ::Any, ::Any)
Base.keys
Base.values
Base.pairs
Base.merge
Base.merge!(::AbstractDict, ::AbstractDict...)
Base.merge!(::Function, ::AbstractDict, ::AbstractDict...)
Base.sizehint!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041802Z" creationid="hsugawa8651" creationdate="20181112T041802Z">
        <seg>Base.pop!(::Any, ::Any, ::Any)
Base.keys
Base.values
Base.pairs
Base.merge
Base.merge!(::AbstractDict, ::AbstractDict...)
Base.merge!(::Function, ::AbstractDict, ::AbstractDict...)
Base.sizehint!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.popfirst!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041918Z" creationid="hsugawa8651" creationdate="20181112T041918Z">
        <seg>Base.popfirst!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.prepend!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041924Z" creationid="hsugawa8651" creationdate="20181112T041924Z">
        <seg>Base.prepend!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.prod
Base.prod!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041639Z" creationid="hsugawa8651" creationdate="20181112T041639Z">
        <seg>Base.prod
Base.prod!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.propertynames
Core.getfield
Core.setfield!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041828Z" creationid="hsugawa8651" creationdate="20181110T041828Z">
        <seg>Base.propertynames
Core.getfield
Core.setfield!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.push!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041833Z" creationid="hsugawa8651" creationdate="20181112T041833Z">
        <seg>Base.push!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.pushfirst!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041917Z" creationid="hsugawa8651" creationdate="20181112T041917Z">
        <seg>Base.pushfirst!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.replace(::Any, ::Pair...)
Base.replace(::Base.Callable, ::Any)
Base.replace!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041644Z" creationid="hsugawa8651" creationdate="20181112T041644Z">
        <seg>Base.replace(::Any, ::Pair...)
Base.replace(::Base.Callable, ::Any)
Base.replace!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.resize!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041922Z" creationid="hsugawa8651" creationdate="20181112T041922Z">
        <seg>Base.resize!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.reverse(::AbstractVector; kwargs...)
Base.reverseind
Base.reverse!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041634Z" creationid="hsugawa8651" creationdate="20181110T041634Z">
        <seg>Base.reverse(::AbstractVector;クワークス.) Base.レヴェルセイント ベース.リバース!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.run
Base.devnull
Base.success
Base.process_running
Base.process_exited
Base.kill(::Base.Process, ::Integer)
Base.Sys.set_process_title
Base.Sys.get_process_title
Base.ignorestatus
Base.detach
Base.Cmd
Base.setenv
Base.withenv
Base.pipeline(::Any, ::Any, ::Any, ::Any...)
Base.pipeline(::Base.AbstractCmd)
Base.Libc.gethostname
Base.Libc.getpid
Base.Libc.time()
Base.time_ns
Base.@time
Base.@timev
Base.@timed
Base.@elapsed
Base.@allocated
Base.EnvDict
Base.ENV
Base.Sys.isunix
Base.Sys.isapple
Base.Sys.islinux
Base.Sys.isbsd
Base.Sys.iswindows
Base.Sys.windows_version
Base.@static</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041940Z" creationid="hsugawa8651" creationdate="20181110T041940Z">
        <seg>Base.run
Base.devnull
Base.success
Base.process_running
Base.process_exited
Base.kill(::Base.Process, ::Integer)
Base.Sys.set_process_title
Base.Sys.get_process_title
Base.ignorestatus
Base.detach
Base.Cmd
Base.setenv
Base.withenv
Base.pipeline(::Any, ::Any, ::Any, ::Any...)
Base.pipeline(::Base.AbstractCmd)
Base.Libc.gethostname
Base.Libc.getpid
Base.Libc.time()
Base.time_ns
Base.@time
Base.@timev
Base.@timed
Base.@elapsed
Base.@allocated
Base.EnvDict
Base.ENV
Base.Sys.isunix
Base.Sys.isapple
Base.Sys.islinux
Base.Sys.isbsd
Base.Sys.iswindows
Base.Sys.windows_version
Base.@static</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.sizeof(::Type)
Base.isconcretetype
Base.isbits
Base.isbitstype
Core.fieldtype
Base.fieldtypes
Base.fieldcount
Base.fieldoffset
Base.datatype_alignment
Base.datatype_haspadding
Base.datatype_pointerfree</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041856Z" creationid="hsugawa8651" creationdate="20181110T041856Z">
        <seg>Base.sizeof(::Type)
Base.isconcretetype
Base.isbits
Base.isbitstype
Core.fieldtype
Base.fieldtypes
Base.fieldcount
Base.fieldoffset
Base.datatype_alignment
Base.datatype_haspadding
Base.datatype_pointerfree</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.splice!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041921Z" creationid="hsugawa8651" creationdate="20181112T041921Z">
        <seg>Base.splice!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.stride
Base.strides</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T033616Z" creationid="hsugawa8651" creationdate="20181110T033616Z">
        <seg>Base.stride
Base.strides</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.sum
Base.sum!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041638Z" creationid="hsugawa8651" creationdate="20181112T041638Z">
        <seg>Base.sum
Base.sum!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.supertype
Core.:(&lt;:)
Base.:(&gt;:)
Base.typejoin
Base.typeintersect
Base.promote_type
Base.promote_rule
Base.isdispatchtuple</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041843Z" creationid="hsugawa8651" creationdate="20181110T041843Z">
        <seg>Base.supertype
Core.:(&lt;:)
Base.:(&gt;:)
Base.typejoin
Base.typeintersect
Base.promote_type
Base.promote_rule
Base.isdispatchtuple</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.symdiff
Base.symdiff!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041824Z" creationid="hsugawa8651" creationdate="20181112T041824Z">
        <seg>Base.symdiff
Base.symdiff!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.typemin
Base.typemax
Base.floatmin
Base.floatmax
Base.maxintfloat
Base.eps(::Type{&lt;:AbstractFloat})
Base.eps(::AbstractFloat)
Base.instances</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041908Z" creationid="hsugawa8651" creationdate="20181110T041908Z">
        <seg>Base.typemin
Base.typemax
Base.floatmin
Base.floatmax
Base.maxintfloat
Base.eps(::Type{&lt;:AbstractFloat})
Base.eps(::AbstractFloat)
Base.instances</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Base.unsafe_copyto!{T}(::Ptr{T}, ::Ptr{T}, ::Any)
Base.unsafe_copyto!{T}(::Array{T}, ::Any, ::Array{T}, ::Any, ::Any)
Base.copyto!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042026Z" creationid="hsugawa8651" creationdate="20181110T042026Z">
        <seg>Base.unsafe_copyto!{T}(::Ptr{T}, ::Ptr{T}, ::Any)
Base.unsafe_copyto!{T}(::Array{T}, ::Any, ::Array{T}, ::Any, ::Any)
Base.copyto!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Binary and octal literals are also supported:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225352Z" creationid="hsugawa8651" creationdate="20181109T225352Z">
        <seg>バイナリリテラルと8進数リテラルもサポートされています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Binary, octal, and hexadecimal literals may be signed by a &lt;x1/&gt;-&lt;x2/&gt; immediately preceding the
unsigned literal.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225514Z" creationid="hsugawa8651" creationdate="20181109T225514Z">
        <seg>バイナリ、8進数、および16進数のリテラルは 署名されていないリテラル。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Boolean operations &lt;x1/&gt;without&lt;x2/&gt; short-circuit evaluation can be done with the bitwise boolean operators
introduced in &lt;x3/&gt;Mathematical Operations and Elementary Functions&lt;x4/&gt;: &lt;x5/&gt;&amp;&lt;x6/&gt; and &lt;x7/&gt;|&lt;x8/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230550Z" creationid="hsugawa8651" creationdate="20181109T230550Z">
        <seg>&lt;x2/&gt;短絡評価なしのブール演算&lt;x1/&gt;は、ビット単位のブール演算子で実行できます。 &lt;x3/&gt;演算と基本関数&lt;x4/&gt;:&lt;x5/&gt;&amp;&lt;x6/&gt;&lt;x6/&gt;&lt;x8/&gt;と&lt;x6/&gt;&lt;x8/&gt;で導入されました。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Both &lt;x19/&gt;&amp;&amp;&lt;x20/&gt; and &lt;x21/&gt;||&lt;x22/&gt; associate to the right, but &lt;x23/&gt;&amp;&amp;&lt;x24/&gt; has higher precedence than &lt;x25/&gt;||&lt;x26/&gt; does.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230244Z" creationid="hsugawa8651" creationdate="20181109T230244Z">
        <seg>&lt;x19/&gt;&amp;&amp;&lt;x20/&gt;と&lt;X21/&gt;&lt;x22/&gt;の両方が右側に関連付けられますが、&lt;x23/&gt;&amp;&amp;&lt;x24/&gt;は&lt;x25/&gt;&lt;x26/&gt;よりも優先順位が高くなります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Built-in representations of such values are called numeric primitives, while representations of
integers and floating-point numbers as immediate values in code are known as numeric literals.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225037Z" creationid="hsugawa8651" creationdate="20181109T225037Z">
        <seg>このような値の組み込み表現は、数値プリミティブと呼ばれますが、表現は次のようになります。 整数と浮動小数点数は、コードの即時値として知られており、数値リテラルと呼ばれます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>But here is a thing you should pay attention to: suppose &lt;x1/&gt;x&lt;x2/&gt; is bound to an object of type &lt;x3/&gt;Array&lt;x4/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025034Z" creationid="hsugawa8651" creationdate="20181110T025034Z">
        <seg>しかし、ここで注意すべき点は、&lt;x1/&gt;x&lt;x2/&gt;が&lt;x3/&gt;配列&lt;x4/&gt;型のオブジェクトにバインドされていると仮定することです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By convention, function names ending with an exclamation point (&lt;x1/&gt;!&lt;x2/&gt;) modify their arguments.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041720Z" creationid="hsugawa8651" creationdate="20181110T041720Z">
        <seg>慣例によっては、感嘆符(&lt;x1/&gt;!&lt;x2/&gt;)で終わる関数名は、引数を変更します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default this includes:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155509Z" creationid="hsugawa8651" creationdate="20181109T155509Z">
        <seg>デフォルトでは、次の内容が含まれます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By default, Fortran compilers &lt;x1/&gt;generate mangled
names&lt;x2/&gt; (for example,
converting function names to lowercase or uppercase, often appending an
underscore), and so to call a Fortran function via &lt;x3/&gt;`ccall`&lt;x4/&gt; you must pass
the mangled identifier corresponding to the rule followed by your Fortran
compiler.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223808Z" creationid="hsugawa8651" creationdate="20181109T223808Z">
        <seg>デフォルトでは、Fortranコンパイラ&lt;x1/&gt;はmangledを生成します。 名前&lt;x2/&gt;(例: 関数名を小文字または大文字に変換し、通常は アンダースコア)は、Fortran関数を&lt;x3/&gt;`ccall`&lt;x4/&gt;経由で呼び出す必要があります。 ルールに従うルールに従って、ルールに対応するマクロ識別子を指定します。 コンパイラー。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>By putting the &lt;x12/&gt;`@views`&lt;x13/&gt; macro in front of an expression or
block of code, any &lt;x14/&gt;array[...]&lt;x15/&gt; slice in that expression will be converted to
create a &lt;x16/&gt;SubArray&lt;x17/&gt; view instead.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160443Z" creationid="hsugawa8651" creationdate="20181109T160443Z">
        <seg>&lt;x12/&gt;`@views'&lt;x13/&gt;マクロを式の前に置くか コードのブロック、任意の&lt;x14/&gt;配列[.]&lt;x15/&gt;スライスは、その式の中に変換されます。 代わりに&lt;x16/&gt;サブアレイを作成&lt;x17/&gt;ビューを作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>C Interface</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042024Z" creationid="hsugawa8651" creationdate="20181110T042024Z">
        <seg>C Interface</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Callees must make explicit copies to ensure that they don't modify inputs that
they don't intend to change.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154219Z" creationid="hsugawa8651" creationdate="20181109T154219Z">
        <seg>呼び出し側は、入力を変更しないことを確実にするために、明示的なコピーを作成する必要があります。 変化するつもりはありません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Can I use &lt;x1/&gt;using&lt;x2/&gt; or &lt;x3/&gt;import&lt;x4/&gt; inside a function?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025127Z" creationid="hsugawa8651" creationdate="20181110T025127Z">
        <seg>関数の中で&lt;x2/&gt;または&lt;x3/&gt;インポート&lt;x4/&gt;を使用して、&lt;x1/&gt;を使用することはできますか?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Change something in "mynewcode.jl"
include("mynewcode.jl")              &lt;x3/&gt; reload the module
obj1 = MyModule.ObjConstructor(a, b) &lt;x4/&gt; old objects are no longer valid, must reconstruct
obj2 = MyModule.somefunction(obj1)   &lt;x5/&gt; this time it worked!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024757Z" creationid="hsugawa8651" creationdate="20181110T024757Z">
        <seg>Change something in "mynewcode.jl"
include("mynewcode.jl")              &lt;x3/&gt; reload the module
obj1 = MyModule.ObjConstructor(a, b) &lt;x4/&gt; old objects are no longer valid, must reconstruct
obj2 = MyModule.somefunction(obj1)   &lt;x5/&gt; this time it worked!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comprehension syntax is
similar to set construction notation in mathematics:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154804Z" creationid="hsugawa8651" creationdate="20181109T154804Z">
        <seg>理解の構文は次のとおりです。 数学で設定された建設表記法に似ています</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Comprehensions can also be written without the enclosing square brackets, producing an object
known as a generator.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154923Z" creationid="hsugawa8651" creationdate="20181109T154923Z">
        <seg>包含は、囲まれた角括弧なしで書くこともでき、オブジェクトを生成することができます。 ジェネレータと呼ばれます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Concatenation syntax can similarly be prefixed with a type to specify the element type of the
result.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154707Z" creationid="hsugawa8651" creationdate="20181109T154707Z">
        <seg>連結構文には、同じように 結果。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Concrete types should also typically provide a &lt;x16/&gt;`similar(A,T=eltype(A),dims=size(A))`&lt;x17/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160350Z" creationid="hsugawa8651" creationdate="20181109T160350Z">
        <seg>具体的には、典型的には、&lt;x16/&gt;'類似の(A,T=エルテープ(A),dims=size(A))`&lt;x17/&gt;を提供する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Conditional evaluation allows portions of code to be evaluated or not evaluated depending on the
value of a boolean expression.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225833Z" creationid="hsugawa8651" creationdate="20181109T225833Z">
        <seg>条件付き評価は、コードの一部を評価することができます。 ブール式の値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Consider these examples of this syntax:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154648Z" creationid="hsugawa8651" creationdate="20181109T154648Z">
        <seg>この構文の例を次に示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Considered alone, this may seem relatively trivial; &lt;x1/&gt;CartesianIndex&lt;x2/&gt; simply
gathers multiple integers together into one object that represents a single
multidimensional index.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155644Z" creationid="hsugawa8651" creationdate="20181109T155644Z">
        <seg>単独で考慮すると、これは比較的簡単であるように思えるかもしれません。&lt;x1/&gt;CartesianIndex&lt;x2/&gt;は単純です。 複数の整数を1つのオブジェクトに集約して1つのオブジェクトを作成します。 多次元インデックス。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Control whether inlining is permitted, including overriding &lt;x1/&gt;@inline&lt;x2/&gt; declarations</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224750Z" creationid="hsugawa8651" creationdate="20181109T224750Z">
        <seg>&lt;x1/&gt;@inline&lt;x2/&gt;宣言の上書きを含め、インライン化が許可されているかどうかを制御する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Core.:(===)
Core.isa
Base.isequal
Base.isless
Base.ifelse
Core.typeassert
Core.typeof
Core.tuple
Base.ntuple
Base.objectid
Base.hash
Base.finalizer
Base.finalize
Base.copy
Base.deepcopy
Base.getproperty
Base.setproperty!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041822Z" creationid="hsugawa8651" creationdate="20181110T041822Z">
        <seg>Core.:(===)
Core.isa
Base.isequal
Base.isless
Base.ifelse
Core.typeassert
Core.typeof
Core.tuple
Base.ntuple
Base.objectid
Base.hash
Base.finalizer
Base.finalize
Base.copy
Base.deepcopy
Base.getproperty
Base.setproperty!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Core.Any
Core.Union
Union{}
Core.UnionAll
Core.Tuple
Core.NamedTuple
Base.Val
Core.Vararg
Core.Nothing
Base.isnothing
Base.Some
Base.something
Base.Enums.@enum</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041916Z" creationid="hsugawa8651" creationdate="20181110T041916Z">
        <seg>Core.Any
Core.Union
Union{}
Core.UnionAll
Core.Tuple
Core.NamedTuple
Base.Val
Core.Vararg
Core.Nothing
Base.isnothing
Base.Some
Base.something
Base.Enums.@enum</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Core.Function
Base.hasmethod
Core.applicable
Core.invoke
Base.invokelatest
new
Base.:(|&gt;)
Base.:(∘)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041920Z" creationid="hsugawa8651" creationdate="20181110T041920Z">
        <seg>Core.Function
Base.hasmethod
Core.applicable
Core.invoke
Base.invokelatest
new
Base.:(|&gt;)
Base.:(∘)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Core.Intrinsics.llvmcall</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042030Z" creationid="hsugawa8651" creationdate="20181110T042030Z">
        <seg>Core.Intrinsics.llvmcall</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Core.eval
Base.MainInclude.eval
Base.@eval
Base.evalfile
Base.esc
Base.@inbounds
Base.@boundscheck
Base.@inline
Base.@noinline
Base.@nospecialize
Base.@specialize
Base.gensym
Base.@gensym
Base.@goto
Base.@label
Base.@simd
Base.@polly
Base.@generated
Base.@pure</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041926Z" creationid="hsugawa8651" creationdate="20181110T041926Z">
        <seg>Core.eval
Base.MainInclude.eval
Base.@eval
Base.evalfile
Base.esc
Base.@inbounds
Base.@boundscheck
Base.@inline
Base.@noinline
Base.@nospecialize
Base.@specialize
Base.gensym
Base.@gensym
Base.@goto
Base.@label
Base.@simd
Base.@polly
Base.@generated
Base.@pure</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Core.isdefined
Base.@isdefined
Base.convert
Base.promote
Base.oftype
Base.widen
Base.identity</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041832Z" creationid="hsugawa8651" creationdate="20181110T041832Z">
        <seg>Core.isdefined
Base.@isdefined
Base.convert
Base.promote
Base.oftype
Base.widen
Base.identity</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Count bytes allocated by each source line</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224805Z" creationid="hsugawa8651" creationdate="20181109T224805Z">
        <seg>各ソース行によって割り当てられたカウントバイト数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Count executions of source lines</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224758Z" creationid="hsugawa8651" creationdate="20181109T224758Z">
        <seg>ソース行の実行数のカウント</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Creation of a variable named &lt;x7/&gt;where&lt;x8/&gt;, &lt;x9/&gt;in&lt;x10/&gt; or &lt;x11/&gt;isa&lt;x12/&gt; is allowed though.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041808Z" creationid="hsugawa8651" creationdate="20181110T041808Z">
        <seg>&lt;x8/&gt;は&lt;x8/&gt;、&lt;x10/&gt;は&lt;x10/&gt;isa&lt;x12/&gt;では&lt;x12/&gt;であるが、&lt;x12/&gt;は&lt;x12/&gt;&lt;x12/&gt;である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Currently, only the platform-default C calling convention is supported.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153954Z" creationid="hsugawa8651" creationdate="20181109T153954Z">
        <seg>現在、プラットフォームのデフォルトのC呼び出し規約のみがサポートされています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Define these
two functions for custom types to override how they are stored in a hash table.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041724Z" creationid="hsugawa8651" creationdate="20181112T041724Z">
        <seg>これらを定義する ハッシュテーブルに格納される方法を上書きするカスタムタイプ用の2つの関数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>DenseArray&lt;x1/&gt; is an abstract subtype of &lt;x2/&gt;AbstractArray&lt;x3/&gt; intended to include all arrays where
elements are stored contiguously in column-major order (see additional notes in
&lt;x4/&gt;&lt;x5/&gt;&lt;x6/&gt;(@ref man-performance-tips)).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160418Z" creationid="hsugawa8651" creationdate="20181109T160418Z">
        <seg>DenseArray&lt;x1/&gt;は、すべての配列を含むことを意図した&lt;x2/&gt;AbstractArray&lt;x3/&gt;の抽象サブタイプである。 要素は列主順序で連続的に格納されます(追加の注記を参照してください)。 &lt;x4/&gt;&lt;x5/&gt;&lt;x6/&gt;(@ref manのパフォーマンス・ヒント))。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dequeues</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041832Z" creationid="hsugawa8651" creationdate="20181112T041832Z">
        <seg>Dequeues</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dict("A"=&gt;1, "B"=&gt;2)&lt;x1/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041733Z" creationid="hsugawa8651" creationdate="20181112T041733Z">
        <seg>Dict("A"=&gt;1, "B"=&gt;2)&lt;x1/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dictionaries</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041713Z" creationid="hsugawa8651" creationdate="20181112T041713Z">
        <seg>Dictionaries</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Dictionaries may also be created with generators.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041748Z" creationid="hsugawa8651" creationdate="20181112T041748Z">
        <seg>辞書はジェネレータで作成することもできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Disallow or enable unsafe floating point optimizations (overrides @fastmath declaration)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224756Z" creationid="hsugawa8651" creationdate="20181109T224756Z">
        <seg>安全でない浮動小数点の最適化を許可または有効にします(@ファストマト宣言を無効にします)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Display version information</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224555Z" creationid="hsugawa8651" creationdate="20181109T224555Z">
        <seg>バージョン情報を表示する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Do not use `end`&lt;x4/&gt;&lt;x5/&gt;in indexing expressions that may contain either `CartesianIndex` or arrays thereof.&lt;x6/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155720Z" creationid="hsugawa8651" creationdate="20181109T155720Z">
        <seg>「CartesianIndex」またはその配列が含まれる可能性のある表現のインデックス作成には「end」&lt;x4/&gt;&lt;x5/&gt;を使用しないでください。&lt;x6/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Download and install Julia by following the instructions at &lt;x1/&gt;https://julialang.org/downloads/&lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224249Z" creationid="hsugawa8651" creationdate="20181109T224249Z">
        <seg>&lt;x1/&gt;https://julialang.org/downloads/&lt;x2/&gt;の指示に従って、Juliaをダウンロードしてインストールします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Each machine definition
takes the form &lt;x10/&gt;[count*][user@]host[:port] [bind_addr[:port]]&lt;x11/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224423Z" creationid="hsugawa8651" creationdate="20181109T224423Z">
        <seg>各マシン定義 は、&lt;x10/&gt;[count*][user@]host[:port][bind_addr[:port]]&lt;x11/&gt;の形式をとることになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>EachLine&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041611Z" creationid="hsugawa8651" creationdate="20181112T041611Z">
        <seg>EachLine&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Emit bounds checks always or never (ignoring declarations)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224752Z" creationid="hsugawa8651" creationdate="20181109T224752Z">
        <seg>放出の境界チェックは常に行われる(宣言を無視する)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Empty arrays like &lt;x1/&gt;[]&lt;x2/&gt;, which select no elements</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155524Z" creationid="hsugawa8651" creationdate="20181109T155524Z">
        <seg>&lt;x1/&gt;[]&lt;x2/&gt;のような空の配列で、要素は選択されません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Empty ranges of the form &lt;x1/&gt;n:n-1&lt;x2/&gt; are sometimes used to indicate the inter-index location between
&lt;x3/&gt;n-1&lt;x4/&gt; and &lt;x5/&gt;n&lt;x6/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155316Z" creationid="hsugawa8651" creationdate="20181109T155316Z">
        <seg>&lt;x1/&gt;n:n-1&lt;x2/&gt;という形式の空の範囲は、場合によっては、インデックス間の位置を示すために使用される。 &lt;x3/&gt;n-1&lt;x4/&gt;および&lt;x5/&gt;n&lt;x6/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enable / Set the level of debug info generation (default level is 1 if unspecified or 2 if used without a level)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224747Z" creationid="hsugawa8651" creationdate="20181109T224747Z">
        <seg>デバッグ情報の生成レベルを有効/設定します(デフォルトレベルは、指定されていない場合は1、レベルなしでは2を指定します)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enable or disable Julia's default signal handlers</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224649Z" creationid="hsugawa8651" creationdate="20181109T224649Z">
        <seg>ジュリアのデフォルトシグナルハンドラを有効または無効にする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enable or disable color text</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224727Z" creationid="hsugawa8651" creationdate="20181109T224727Z">
        <seg>カラーテキストを有効または無効にする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enable or disable incremental precompilation of modules</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224655Z" creationid="hsugawa8651" creationdate="20181109T224655Z">
        <seg>モジュールのインクリメンタル事前コンパイルを有効または無効にする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enable or disable method overwrite warnings</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224735Z" creationid="hsugawa8651" creationdate="20181109T224735Z">
        <seg>メソッドの上書き警告を有効または無効にする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enable or disable startup banner</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224725Z" creationid="hsugawa8651" creationdate="20181109T224725Z">
        <seg>起動バナーを有効または無効にする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Enable or disable syntax and method deprecation warnings (&lt;x1/&gt;error&lt;x2/&gt; turns warnings into errors)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224733Z" creationid="hsugawa8651" creationdate="20181109T224733Z">
        <seg>構文およびメソッドの非推奨警告を有効または無効にします(&lt;x1/&gt;エラー&lt;x2/&gt;は警告をエラーに変換します)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Essentials</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041641Z" creationid="hsugawa8651" creationdate="20181110T041641Z">
        <seg>Essentials</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Evaluate &lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224659Z" creationid="hsugawa8651" creationdate="20181109T224659Z">
        <seg>&lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;を評価します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Evaluate &lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt; and display the result</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224702Z" creationid="hsugawa8651" creationdate="20181109T224702Z">
        <seg>&lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;を評価し、結果を表示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Events</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042013Z" creationid="hsugawa8651" creationdate="20181110T042013Z">
        <seg>Events</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Everyday programming requires no
direct usage of tasks, but certain problems can be solved much more easily by using tasks.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225751Z" creationid="hsugawa8651" creationdate="20181109T225751Z">
        <seg>日常的なプログラミングでは タスクを直接使用することはできますが、タスクを使用することによって、特定の問題をより容易に解決することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Exception Handling&lt;x1/&gt;: &lt;x2/&gt;try&lt;x3/&gt;-&lt;x4/&gt;catch&lt;x5/&gt;, &lt;x6/&gt;`error`&lt;x7/&gt; and &lt;x8/&gt;`throw`&lt;x9/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225735Z" creationid="hsugawa8651" creationdate="20181109T225735Z">
        <seg>例外処理&lt;x1/&gt;:&lt;x2/&gt;try&lt;x3/&gt;-&lt;x4/&gt;catch&lt;x5/&gt;&lt;x6/&gt;'エラー'&lt;x7/&gt;'&lt;x7/&gt;'&lt;x9/&gt;"&lt;x9/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Explicitly,
this means that:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230231Z" creationid="hsugawa8651" creationdate="20181109T230231Z">
        <seg>明示的に つまり、次のようになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally, you can use &lt;x1/&gt;`ccall`&lt;x2/&gt; to actually generate a call to the library function.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223825Z" creationid="hsugawa8651" creationdate="20181109T223825Z">
        <seg>最後に、&lt;x1/&gt;`ccall'&lt;x2/&gt;を使ってライブラリ関数への呼び出しを実際に生成することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Finally,&lt;x1/&gt;where&lt;x2/&gt; is parsed as an infix operator for writing parametric method
and type definitions.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041802Z" creationid="hsugawa8651" creationdate="20181110T041802Z">
        <seg>最後に&lt;x1/&gt;は、&lt;x2/&gt;がパラメトリックメソッドを記述するためのインフィックス演算子として構文解析される。 定義します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Float32[ 0.25*x[i-1] + 0.5*x[i] + 0.25*x[i+1] for i=2:length(x)-1 ]</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154902Z" creationid="hsugawa8651" creationdate="20181109T154902Z">
        <seg>Float32[ 0.25*x[i-1] + 0.5*x[i] + 0.25*x[i+1] for i=2:length(x)-1 ]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example,</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154603Z" creationid="hsugawa8651" creationdate="20181109T154603Z">
        <seg>たとえば</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;x1/&gt;1&lt;x2/&gt; is an integer literal, while &lt;x3/&gt;1.0&lt;x4/&gt; is a floating-point literal; their binary
in-memory representations as objects are numeric primitives.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225041Z" creationid="hsugawa8651" creationdate="20181109T225041Z">
        <seg>たとえば、&lt;x1/&gt;1&lt;x2/&gt;は整数リテラルであり、&lt;x3/&gt;1.0&lt;x4/&gt;は浮動小数点リテラルであり、それらのバイナリは2進数リテラルです。 メモリー内表現は、数値プリミティブです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;x1/&gt;Dict(i =&gt; f(i) for i = 1:10)&lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041750Z" creationid="hsugawa8651" creationdate="20181112T041750Z">
        <seg>例えば、&lt;x1/&gt;Dict(i=&gt;f(i=&gt;f(i)for i=1:10)&lt;x2/&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;x11/&gt;Any[x, y, z]&lt;x12/&gt; constructs a heterogeneous array that can contain any values.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154704Z" creationid="hsugawa8651" creationdate="20181109T154704Z">
        <seg>たとえば、&lt;x11/&gt;任意の[x,y,z]&lt;x12/&gt;は、任意の値を含むことができる異機種間配列を構成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, &lt;x6/&gt;Dict{String,Int32}("A"=&gt;1, "B"=&gt;2)&lt;x7/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041747Z" creationid="hsugawa8651" creationdate="20181112T041747Z">
        <seg>たとえば、&lt;x6/&gt;Dict{String,Int32}("A"=&gt;1, "B"=&gt;2)&lt;x7/&gt;を指定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, a recursive factorial routine could be defined like this:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230444Z" creationid="hsugawa8651" creationdate="20181109T230444Z">
        <seg>例えば、再帰階乗ルーチンは、次のように定義できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, elements might be computed on request
rather than stored.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160316Z" creationid="hsugawa8651" creationdate="20181109T160316Z">
        <seg>たとえば、要求に基づいて要素を計算することができます。 保存するのではなく。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, if &lt;x1/&gt;A&lt;x2/&gt; is a gigabyte-sized array that you no longer need, you can free the memory
with &lt;x3/&gt;A = nothing&lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024646Z" creationid="hsugawa8651" creationdate="20181110T024646Z">
        <seg>たとえば、&lt;x1/&gt;A&lt;x2/&gt;が必要なくなったギガバイトサイズのアレイである場合は、メモリを解放することができます。 &lt;x3/&gt;A=何もありません&lt;x4/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, it enables
accessing the diagonal elements from the first "page" of &lt;x5/&gt;A&lt;x6/&gt; from above:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155653Z" creationid="hsugawa8651" creationdate="20181109T155653Z">
        <seg>たとえば 上からの&lt;x5/&gt;A&lt;x6/&gt;の最初の「ページ」からの対角線要素へのアクセス</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the &lt;x7/&gt;`searchsorted`&lt;x8/&gt; function uses this convention to indicate
the insertion point of a value not found in a sorted array:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155312Z" creationid="hsugawa8651" creationdate="20181109T155312Z">
        <seg>たとえば、&lt;x7/&gt;'のセアルチゾルタド&lt;x8/&gt;関数は、この規則を使用して ソートされた配列に存在しない値の挿入点です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, the following expression
sums a series without allocating memory:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154929Z" creationid="hsugawa8651" creationdate="20181109T154929Z">
        <seg>たとえば、次の式を指定します。 は、メモリを割り当てずに連続した値を加算します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to call the &lt;x4/&gt;getenv&lt;x5/&gt; function to get a pointer to
the value of an environment variable, one makes a call like this:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224039Z" creationid="hsugawa8651" creationdate="20181109T224039Z">
        <seg>たとえば、&lt;x4/&gt;getenv&lt;x5/&gt;関数を呼び出してポインタを取得するには、次のように指定します。 環境変数の値は、次のような呼び出しを行います。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to just print the
arguments given to a script, you could do this:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224341Z" creationid="hsugawa8651" creationdate="20181109T224341Z">
        <seg>たとえば スクリプトに与えられた引数は、次のようになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, to match C prototypes of the form:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153924Z" creationid="hsugawa8651" creationdate="20181109T153924Z">
        <seg>たとえば、フォームのCプロトタイプに一致させるには、次のようにします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example, we could have requested
the result in single precision by writing:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154859Z" creationid="hsugawa8651" creationdate="20181109T154859Z">
        <seg>例えば 以下のように記述することによって、単精度での結果が得られます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For example:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025044Z" creationid="hsugawa8651" creationdate="20181110T025044Z">
        <seg>次に例を示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For more details on defining custom
&lt;x16/&gt;AbstractArray&lt;x17/&gt; implementations, see the &lt;x18/&gt;&lt;x19/&gt;&lt;x20/&gt;(@ref man-interface-array).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160400Z" creationid="hsugawa8651" creationdate="20181109T160400Z">
        <seg>カスタム定義の詳細については &lt;x16/&gt;AbstractArray&lt;x17/&gt;実装を参照してください。&lt;x18/&gt;&lt;x19/&gt;&lt;x20/&gt;(@ref man interface array)を参照してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For most computational purposes, arrays should contain
objects of a more specific type, such as &lt;x3/&gt;`Float64`&lt;x4/&gt; or &lt;x5/&gt;`Int32`&lt;x6/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154148Z" creationid="hsugawa8651" creationdate="20181109T154148Z">
        <seg>For most computational purposes, arrays should contain
objects of a more specific type, such as &lt;x3/&gt;`Float64`&lt;x4/&gt; or &lt;x5/&gt;`Int32`&lt;x6/&gt;.For most computational purposes, arrays should contain
objects of a more specific type, such as &lt;x3/&gt;`Float64`&lt;x4/&gt; or &lt;x5/&gt;`Int32`&lt;x6/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>For the sake of clarity,
let's try a two-way version first:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230122Z" creationid="hsugawa8651" creationdate="20181109T230122Z">
        <seg>わかりやすくするために まず2ウェイのバージョンを試してみましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>From within the function, you cannot "unbind" &lt;x2/&gt;x&lt;x3/&gt; from this Array,
but you can change its content.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025041Z" creationid="hsugawa8651" creationdate="20181110T025041Z">
        <seg>この機能の中からは、この配列から&lt;x2/&gt;x&lt;x3/&gt;の"バインド解除"はできません。 コンテンツを変更することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Fully implemented by:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041624Z" creationid="hsugawa8651" creationdate="20181112T041624Z">
        <seg>Fully implemented by:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Function arguments themselves act as
new variable &lt;x1/&gt;bindings&lt;x2/&gt; (new locations that can refer to values), but the values they refer to
are identical to the passed values.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025708Z" creationid="hsugawa8651" creationdate="20181110T025708Z">
        <seg>関数引数自体は 新しい変数&lt;x1/&gt;バインディング&lt;x2/&gt;(値を参照できる新しい場所)ですが、それらが参照する値は は、渡された値と同じです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Functions are grouped by topic below.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041654Z" creationid="hsugawa8651" creationdate="20181110T041654Z">
        <seg>Functions are grouped by topic below.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>General Collections</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041620Z" creationid="hsugawa8651" creationdate="20181112T041620Z">
        <seg>General Collections</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Generated values can be filtered using the &lt;x1/&gt;if&lt;x2/&gt; keyword:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155050Z" creationid="hsugawa8651" creationdate="20181109T155050Z">
        <seg>生成された値は、&lt;x2/&gt;キーワードの場合は&lt;x1/&gt;を使用してフィルタできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Given a dictionary &lt;x1/&gt;D&lt;x2/&gt;, the syntax &lt;x3/&gt;D[x]&lt;x4/&gt; returns the value of key &lt;x5/&gt;x&lt;x6/&gt; (if it exists) or throws
an error, and &lt;x7/&gt;D[x] = y&lt;x8/&gt; stores the key-value pair &lt;x9/&gt;x =&gt; y&lt;x10/&gt; in &lt;x11/&gt;D&lt;x12/&gt; (replacing any existing value
for the key &lt;x13/&gt;x&lt;x14/&gt;).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041754Z" creationid="hsugawa8651" creationdate="20181112T041754Z">
        <seg>辞書&lt;x1/&gt;D&lt;x2/&gt;を与えられると、構文&lt;x3/&gt;D[x]&lt;x4/&gt;は、キー&lt;x5/&gt;x&lt;x6/&gt;(存在する場合)の値を返すか、あるいはスローします。 エラーと&lt;x7/&gt;D[x]=y&lt;x8/&gt;は、&lt;x11/&gt;D&lt;x12/&gt;(既存の値を置き換える)の&lt;x9/&gt;x=&gt;y&lt;x10/&gt;のキー値ペアを格納します。 &lt;x13/&gt;x&lt;x14/&gt;x14/&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here is the anatomy of the &lt;x1/&gt;if&lt;x2/&gt;-&lt;x3/&gt;elseif&lt;x4/&gt;-&lt;x5/&gt;else&lt;x6/&gt; conditional syntax:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225837Z" creationid="hsugawa8651" creationdate="20181109T225837Z">
        <seg>&lt;x2/&gt;-&lt;x3/&gt;elseif&lt;x4/&gt;-&lt;x5/&gt;else&lt;x6/&gt;条件付き構文:&lt;x6/&gt;の場合の解剖学的構造は以下の通りである。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here it is in action:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225850Z" creationid="hsugawa8651" creationdate="20181109T225850Z">
        <seg>ここでは次の操作を実行しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here we created a function &lt;x1/&gt;change_array!&lt;x2/&gt;, that assigns &lt;x3/&gt;5&lt;x4/&gt; to the first element of the passed
array (bound to &lt;x5/&gt;x&lt;x6/&gt; at the call site, and bound to &lt;x7/&gt;A&lt;x8/&gt; within the function).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025123Z" creationid="hsugawa8651" creationdate="20181110T025123Z">
        <seg>ここでは、渡された第1の要素に&lt;x3/&gt;5&lt;x4/&gt;を割り当てる関数&lt;x1/&gt;change_array!&lt;x2/&gt;を作成しました。 array(&lt;x5/&gt;x&lt;x6/&gt;at the call site,and bound to the function in the function内で&lt;x7/&gt;A&lt;x8/&gt;にバインドされます)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here's an example of a &lt;x5/&gt;begin&lt;x6/&gt; block:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225802Z" creationid="hsugawa8651" creationdate="20181109T225802Z">
        <seg>&lt;x5/&gt;begin&lt;x6/&gt;ブロックの例を次に示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Here, &lt;x1/&gt;(2, 3)&lt;x2/&gt; is a &lt;x3/&gt;`Tuple`&lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154539Z" creationid="hsugawa8651" creationdate="20181109T154539Z">
        <seg>ここで、&lt;x1/&gt;(2, 3)&lt;x2/&gt;は、&lt;x3/&gt;「タプル」&lt;x4/&gt;である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How can I modify the declaration of a type in my session?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024709Z" creationid="hsugawa8651" creationdate="20181110T024709Z">
        <seg>セッション内のタイプの宣言を変更するにはどうすればよいですか。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do I catch CTRL-C in a script?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024903Z" creationid="hsugawa8651" creationdate="20181110T024903Z">
        <seg>スクリプトでCTRL-Cを取得するにはどうすればよいですか。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do I check if the current file is being run as the main script?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024829Z" creationid="hsugawa8651" creationdate="20181110T024829Z">
        <seg>メインスクリプトとして現在のファイルが実行されているかどうかを確認するにはどうすればよいですか。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>How do I pass options to &lt;x1/&gt;julia&lt;x2/&gt; using &lt;x3/&gt;&lt;x4/&gt;!/usr/bin/env&lt;x5/&gt;?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024917Z" creationid="hsugawa8651" creationdate="20181110T024917Z">
        <seg>&lt;x3/&gt;&lt;x4/&gt;!/usr/bin/env&lt;x5/&gt;?を使用して、&lt;x1/&gt;ジュリア&lt;x2/&gt;にオプションを渡す方法を教えてください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, any concrete &lt;x3/&gt;AbstractArray{T,N}&lt;x4/&gt; type should generally implement
at least &lt;x5/&gt;`size(A)`&lt;x6/&gt; (returning an &lt;x7/&gt;Int&lt;x8/&gt; tuple), &lt;x9/&gt;`getindex(A,i)`&lt;x10/&gt; and &lt;x11/&gt;&lt;x12/&gt;&lt;x13/&gt;(@ref getindex);
mutable arrays should also implement &lt;x14/&gt;`setindex!`&lt;x15/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160320Z" creationid="hsugawa8651" creationdate="20181109T160320Z">
        <seg>しかし、具体的な&lt;x3/&gt;AbstractArray{T,N}&lt;x4/&gt;型は、一般的には実装されるべきである。 &lt;x5/&gt;'size(A)'&lt;x6/&gt;(return an&lt;x7/&gt;Int&lt;x8/&gt;タプルを返す)&lt;x9/&gt;`getindex(A,i)`&lt;x10/&gt;&lt;x13/&gt;&lt;x13/&gt;&lt;x13/&gt;&lt;x13/&gt;(@ref getindex); mutable配列は、&lt;x14/&gt;`setindex!`&lt;x15/&gt;を実装する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, when depending
on this behavior, make sure all possible code paths define a value for the variable.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225955Z" creationid="hsugawa8651" creationdate="20181109T225955Z">
        <seg>ただし この動作では、可能なすべてのコード・パスが変数の値を定義していることを確認してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>However, you can create variables with names:
&lt;x7/&gt;abstract&lt;x8/&gt;, &lt;x9/&gt;mutable&lt;x10/&gt;, &lt;x11/&gt;primitive&lt;x12/&gt; and &lt;x13/&gt;type&lt;x14/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041759Z" creationid="hsugawa8651" creationdate="20181110T041759Z">
        <seg>ただし、名前を使用して変数を作成することはできます。 &lt;x7/&gt;抽象&lt;x8/&gt;,&lt;x9/&gt;mutable&lt;x10/&gt;,&lt;x11/&gt;プリミティブ&lt;x12/&gt;,&lt;x13/&gt;&lt;x14/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>I passed an argument &lt;x1/&gt;x&lt;x2/&gt; to a function, modified it inside that function, but on the outside, the variable &lt;x3/&gt;x&lt;x4/&gt; is still unchanged.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024952Z" creationid="hsugawa8651" creationdate="20181110T024952Z">
        <seg>関数に対して引数&lt;x1/&gt;x2/&gt;を渡したが、その関数内で修正されたが、外側では変数&lt;x3/&gt;x&lt;x4/&gt;は変更されないままであった。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;x1/&gt;X&lt;x2/&gt; is an array, it must have the same number of elements as the product of the lengths of
the indices: &lt;x3/&gt;prod(length(I_1), length(I_2), ..., length(I_n))&lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155408Z" creationid="hsugawa8651" creationdate="20181109T155408Z">
        <seg>&lt;x1/&gt;X&lt;x2/&gt;が配列である場合、それは長さの積と同じ数の要素を持つ必要があります。 インデックス:&lt;x3/&gt;prod(長さ(I_1),長さ(I_2),…,長さ(I_n))&lt;x4/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If &lt;x4/&gt;X&lt;x5/&gt; is not an array, its value
is written to all referenced locations of &lt;x6/&gt;A&lt;x7/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155420Z" creationid="hsugawa8651" creationdate="20181109T155420Z">
        <seg>&lt;x4/&gt;X&lt;x5/&gt;が配列でない場合は、その値は は、&lt;x6/&gt;A&lt;x7/&gt;の参照されたすべての場所に書き込まれます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If a pointer conversion method &lt;x19/&gt;`Base.unsafe_convert(Ptr{T}, A)`&lt;x20/&gt; is
provided, the memory layout must correspond in the same way to these strides.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160506Z" creationid="hsugawa8651" creationdate="20181109T160506Z">
        <seg>ポインタ変換方法&lt;x19/&gt;`Base.unsafe_convert(Ptr{T},A)`&lt;x20/&gt;がある場合 この場合、メモリレイアウトは、これらの進歩と同じ方法で対応する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If all
arguments have a common &lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref conversion-and-promotion) then they get
converted to that type using &lt;x6/&gt;`convert`&lt;x7/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154521Z" creationid="hsugawa8651" creationdate="20181109T154521Z">
        <seg>すべて 引数には共通の&lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref変換とプロモーション)があります。 &lt;x6/&gt;'convert`&lt;x7/&gt;を使用して、そのタイプに変換されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If all indices are vectors, for example, then the shape of &lt;x1/&gt;X&lt;x2/&gt; would be &lt;x3/&gt;(length(I_1), length(I_2), ..., length(I_n))&lt;x4/&gt;,
with location &lt;x5/&gt;(i_1, i_2, ..., i_n)&lt;x6/&gt; of &lt;x7/&gt;X&lt;x8/&gt; containing the value &lt;x9/&gt;A[I_1[i_1], I_2[i_2], ..., I_n[i_n]]&lt;x10/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155134Z" creationid="hsugawa8651" creationdate="20181109T155134Z">
        <seg>例えば、すべてのインデックスがベクトルである場合、&lt;x1/&gt;X&lt;x2/&gt;の形状は&lt;x3/&gt;(長さI_1)、長さ(I_2)、…、長さ(I_n)&lt;x4/&gt;である。 位置&lt;x5/&gt;(i_1,i_2,.…i_n)&lt;x7/&gt;X&lt;x8/&gt;の値&lt;x9/&gt;A[I_1[i_1],I_2[i_2],.…,I_n[i_n]]&lt;x10/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If all the indices are scalars, then the result &lt;x1/&gt;X&lt;x2/&gt; is a single element from the array &lt;x3/&gt;A&lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155128Z" creationid="hsugawa8651" creationdate="20181109T155128Z">
        <seg>すべての指標がスカラーである場合、結果&lt;x1/&gt;X&lt;x2/&gt;は、配列&lt;x3/&gt;A&lt;x4/&gt;からの単一要素である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If an expression is entered into an interactive
session with a trailing semicolon, its value is not shown.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224315Z" creationid="hsugawa8651" creationdate="20181109T224315Z">
        <seg>式が対話式に入力された場合 末尾のセミコロンとのセッションは、その値は表示されません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If memory usage is your concern, you can always replace objects with ones that consume less memory.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024641Z" creationid="hsugawa8651" creationdate="20181110T024641Z">
        <seg>メモリ使用量が問題になる場合は、常にメモリを消費するオブジェクトを使用してオブジェクトを置き換えることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the expression &lt;x1/&gt;x &lt; y&lt;x2/&gt; is true, the entire ternary operator expression evaluates to the string
&lt;x3/&gt;"less than"&lt;x4/&gt; and otherwise it evaluates to the string &lt;x5/&gt;"not less than"&lt;x6/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230135Z" creationid="hsugawa8651" creationdate="20181109T230135Z">
        <seg>式&lt;x1/&gt;x&lt;y&lt;x2/&gt;がtrueの場合、三元演算子の式全体が文字列に対して評価されます。 &lt;x3/&gt;"より小さい"&lt;x4/&gt;"であり、それ以外の場合は、文字列&lt;x5/&gt;"は&lt;x6/&gt;以上であると評価される。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the type &lt;x5/&gt;T&lt;x6/&gt; is
omitted it will default to &lt;x7/&gt;`Float64`&lt;x8/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154346Z" creationid="hsugawa8651" creationdate="20181109T154346Z">
        <seg>&lt;x5/&gt;T&lt;x6/&gt;の場合 省略すると、デフォルトでは&lt;x7/&gt;"Float64&lt;x8/&gt;になります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If the variable &lt;x6/&gt;i&lt;x7/&gt; has not been introduced in another
scope, in the &lt;x8/&gt;for&lt;x9/&gt; loop form, it is visible only inside of the &lt;x10/&gt;for&lt;x11/&gt; loop, and not
outside/afterwards.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T231159Z" creationid="hsugawa8651" creationdate="20181109T231159Z">
        <seg>変数&lt;x6/&gt;i&lt;x7/&gt;が別の変数に導入されていない場合 &lt;x8/&gt;ループ形式の&lt;x8/&gt;では、&lt;x10/&gt;ループの場合は&lt;x10/&gt;の内部でのみ可視となります。 その後になります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you don't
specify this trait, the default value &lt;x5/&gt;IndexCartesian()&lt;x6/&gt; is used.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155920Z" creationid="hsugawa8651" creationdate="20181109T155920Z">
        <seg>もしあなたが この特性を指定します。デフォルト値&lt;x5/&gt;IndexCartesian()&lt;x6/&gt;は使用されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you have code that you want executed whenever Julia is run, you can put it in
&lt;x1/&gt;&lt;x2/&gt;/.julia/config/startup.jl&lt;x3/&gt;:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224453Z" creationid="hsugawa8651" creationdate="20181109T224453Z">
        <seg>Juliaが実行されるたびに実行するコードがある場合は、そのコードを次のように記述することができます。 &lt;x1/&gt;&lt;x2/&gt;/.julia/config/startup.jl&lt;x3/&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you try this at
the REPL, you get the error:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024718Z" creationid="hsugawa8651" creationdate="20181110T024718Z">
        <seg>これを REPLはエラーを受け取ります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you want
to import a module but only use its symbols inside a specific function or set of functions, you
have two options:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025135Z" creationid="hsugawa8651" creationdate="20181110T025135Z">
        <seg>必要な場合 モジュールをインポートするために、特定の関数または関数のセット内のシンボルのみを使用するには、次のようにします。 には次の2つのオプションがあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>If you write a custom &lt;x1/&gt;`AbstractArray`&lt;x2/&gt; type, you can specify that it has fast linear indexing using</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155906Z" creationid="hsugawa8651" creationdate="20181109T155906Z">
        <seg>カスタム&lt;x1/&gt;`AbstractArray'&lt;x2/&gt;タイプを書く場合は、次のようにして、高速な線形インデックスを作成することを指定できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In
this case the name is resolved within the current process.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223759Z" creationid="hsugawa8651" creationdate="20181109T223759Z">
        <seg>の この場合、名前は現在のプロセス内で解決されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Julia, a function is an object that maps a tuple of argument values to a return value.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025448Z" creationid="hsugawa8651" creationdate="20181110T025448Z">
        <seg>Juliaでは、関数は引数値のタプルを戻り値にマップするオブジェクトです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Julia, all arguments to functions are &lt;x1/&gt;passed by
sharing&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154159Z" creationid="hsugawa8651" creationdate="20181109T154159Z">
        <seg>Juliaでは、関数に対するすべての引数は、&lt;x1/&gt;に渡されます。 共有&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Julia, exceeding the maximum representable value of a given type results in a wraparound behavior:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225601Z" creationid="hsugawa8651" creationdate="20181109T225601Z">
        <seg>ジュリアでは、指定されたタイプの最大表現可能な値を超えると、ラップアラウンド動作が行われます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In Julia, the binding of a variable &lt;x1/&gt;x&lt;x2/&gt; cannot be changed by passing &lt;x3/&gt;x&lt;x4/&gt; as an argument to a function.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025027Z" creationid="hsugawa8651" creationdate="20181110T025027Z">
        <seg>Juliaでは、変数&lt;x1/&gt;x&lt;x2/&gt;の結合は、関数の引数として&lt;x3/&gt;x&lt;x4/&gt;を渡すことで変更することはできない。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In a Unix-like
environment, a reliable way to pass options to &lt;x6/&gt;julia&lt;x7/&gt; in an
executable script would be to start the script as a &lt;x8/&gt;bash&lt;x9/&gt; script and
use &lt;x10/&gt;exec&lt;x11/&gt; to replace the process to &lt;x12/&gt;julia&lt;x13/&gt;:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024926Z" creationid="hsugawa8651" creationdate="20181110T024926Z">
        <seg>Unixライクな 環境、信頼できる方法で&lt;x6/&gt;julia&lt;x7/&gt;にオプションを渡すことができます。 実行可能スクリプトは、スクリプトを&lt;x8/&gt;bash&lt;x9/&gt;スクリプトとして起動します。 &lt;x10/&gt;exec&lt;x11/&gt;を使用して、プロセスを&lt;x12/&gt;ジュリア&lt;x13/&gt;に置き換えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In conjunction with other control flow, however, &lt;x11/&gt;return&lt;x12/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025752Z" creationid="hsugawa8651" creationdate="20181110T025752Z">
        <seg>しかし、他の制御フローと連動して、&lt;x11/&gt;return&lt;x12/&gt;を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In contrast with &lt;x1/&gt;for i = 1:length(A)&lt;x2/&gt;, iterating with &lt;x3/&gt;`eachindex`&lt;x4/&gt; provides an efficient way to
iterate over any array type.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155900Z" creationid="hsugawa8651" creationdate="20181109T155900Z">
        <seg>i=1:長さ(A)&lt;x2/&gt;の&lt;x1/&gt;とは対照的に、&lt;x3/&gt;'の反復は、効率的な方法である。&lt;x3/&gt;"エアチンデス"&lt;x4/&gt;である 任意の配列タイプに対して繰り返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In general, unlike many other technical computing languages, Julia does not expect programs to
be written in a vectorized style for performance.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154152Z" creationid="hsugawa8651" creationdate="20181109T154152Z">
        <seg>一般的に、多くの他の技術計算言語とは異なり、Juliaはプログラムを期待していない。 パフォーマンスを向上させるためにベクトル化されたスタイルで記述する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In order to control the
type explicitly, a type can be prepended to the comprehension.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154854Z" creationid="hsugawa8651" creationdate="20181109T154854Z">
        <seg>制御を行うには 明示的にタイプを認識することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In other
words, while developing you might use a workflow something like this:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024745Z" creationid="hsugawa8651" creationdate="20181110T024745Z">
        <seg>その他 開発中にワークフローを使用することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In practice, especially when providing reusable functionality, one generally wraps &lt;x1/&gt;`ccall`&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224109Z" creationid="hsugawa8651" creationdate="20181109T224109Z">
        <seg>実際には、特に再利用可能な機能を提供する場合には、一般的には&lt;x1/&gt;"ccall"&lt;x2/&gt;"をラップします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In such cases, the result is always 1-d.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155056Z" creationid="hsugawa8651" creationdate="20181109T155056Z">
        <seg>この場合、結果は常に1-dになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the assignment form, the body of the function must be a single expression, although it can
be a compound expression (see &lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;(@ref man-compound-expressions)).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025518Z" creationid="hsugawa8651" creationdate="20181110T025518Z">
        <seg>割り当てフォームでは、関数の本文は単一の式である必要がありますが 複合式(&lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;(@ref man compound expressions)を参照)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the case of leading zeros, the size is determined by the minimal needed size for a
literal, which has the same length but leading digit &lt;x3/&gt;1&lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225440Z" creationid="hsugawa8651" creationdate="20181109T225440Z">
        <seg>先行ゼロの場合、サイズは、必要最小限のサイズで決定されます。 リテラルは同じ長さですが、先頭桁はx3/&gt;1&lt;x4/&gt;です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the context of function definitions, the &lt;x1/&gt;...&lt;x2/&gt; operator is used to combine many different arguments
into a single argument.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025236Z" creationid="hsugawa8651" creationdate="20181110T025236Z">
        <seg>関数定義のコンテキストでは、&lt;x1/&gt;.…&lt;x2/&gt;演算子は、多くの異なる引数を結合するために使用されます。 単一の引数に。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example above, the code between &lt;x1/&gt;&lt;x2/&gt;=&lt;x3/&gt; and &lt;x4/&gt;=&lt;x5/&gt;&lt;x6/&gt; is run as a &lt;x7/&gt;bash&lt;x8/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024937Z" creationid="hsugawa8651" creationdate="20181110T024937Z">
        <seg>上記の例では、&lt;x1/&gt;&lt;x2/&gt;=&lt;x3/&gt;と&lt;x4/&gt;=&lt;x5/&gt;&lt;x6/&gt;の間のコードは、&lt;x7/&gt;bash&lt;x8/&gt;のように実行されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the example function, &lt;x1/&gt;f&lt;x2/&gt;, from
the previous section this is the value of the expression &lt;x3/&gt;x + y&lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025728Z" creationid="hsugawa8651" creationdate="20181110T025728Z">
        <seg>例の関数では、&lt;x1/&gt;f&lt;x2/&gt;は 前のセクションは、式&lt;x3/&gt;x+y&lt;x4/&gt;の値です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the expression &lt;x1/&gt;A[I_1, I_2, ..., I_n]&lt;x2/&gt;, each &lt;x3/&gt;I_k&lt;x4/&gt; may be a scalar index, an
array of scalar indices, or an object that represents an array of scalar
indices and can be converted to such by &lt;x5/&gt;`to_indices`&lt;x6/&gt;:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155503Z" creationid="hsugawa8651" creationdate="20181109T155503Z">
        <seg>式&lt;x1/&gt;A[I_1,I_2,…I_n]&lt;x2/&gt;では、各&lt;x3/&gt;I_k&lt;x4/&gt;はスカラーインデックスであってもよいし スカラの配列、またはスカラーの配列を表すオブジェクト インデックスは、&lt;x5/&gt;から&lt;x6/&gt;までに変換することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the expression &lt;x1/&gt;a &amp;&amp; b&lt;x2/&gt;, the subexpression &lt;x3/&gt;b&lt;x4/&gt; is only evaluated if &lt;x5/&gt;a&lt;x6/&gt; evaluates to &lt;x7/&gt;true&lt;x8/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230234Z" creationid="hsugawa8651" creationdate="20181109T230234Z">
        <seg>&lt;x1/&gt;a&amp;b&lt;x2/&gt;では、サブ式&lt;x3/&gt;b&lt;x4/&gt;は、&lt;x5/&gt;a&lt;x6/&gt;が&lt;x7/&gt;真&lt;x8/&gt;と評価された場合にのみ評価される。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the expression &lt;x1/&gt;a || b&lt;x2/&gt;, the subexpression &lt;x3/&gt;b&lt;x4/&gt; is only evaluated if &lt;x5/&gt;a&lt;x6/&gt; evaluates to &lt;x7/&gt;false&lt;x8/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230237Z" creationid="hsugawa8651" creationdate="20181109T230237Z">
        <seg>&lt;x1/&gt;a b&lt;x2/&gt;の式において、サブ式&lt;x/&gt;b&lt;x4/&gt;は、&lt;x5/&gt;a&lt;x6/&gt;が&lt;x7/&gt;false&lt;x8/&gt;と評価された場合にのみ評価される。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the following list of
such functions, calls with a &lt;x1/&gt;dims...&lt;x2/&gt; argument can either take a single tuple of dimension sizes
or a series of dimension sizes passed as a variable number of arguments.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154340Z" creationid="hsugawa8651" creationdate="20181109T154340Z">
        <seg>以下の一覧 そのような関数は、&lt;x1/&gt;ディムスを持つ関数です。&lt;x2/&gt;引数を指定すると、1組の寸法サイズをとることができます。 または、変数の数として渡される一連の次元サイズを指定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the future,
however, it may do so, yielding even greater performance gains.)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160601Z" creationid="hsugawa8651" creationdate="20181109T160601Z">
        <seg>将来は しかし、それによってパフォーマンスが向上する可能性があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the most general case,
an array may contain objects of type &lt;x1/&gt;`Any`&lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154143Z" creationid="hsugawa8651" creationdate="20181109T154143Z">
        <seg>最も一般的なケースでは 配列は、&lt;x1/&gt;'のタイプのオブジェクトを含むことができます。&lt;x/&gt;&lt;x2/&gt;&lt;x/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the previous example, the
&lt;x1/&gt;println&lt;x2/&gt; call is shared by all three branches: the only real choice is which literal string to
print.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230106Z" creationid="hsugawa8651" creationdate="20181109T230106Z">
        <seg>前の例では &lt;x1/&gt;println&lt;x2/&gt;コールは3つのブランチすべてで共有されます。唯一の実際の選択は、次のいずれかです。 印刷。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>In the second
construct, &lt;x1/&gt;i&lt;x2/&gt; will be an &lt;x3/&gt;Int&lt;x4/&gt; if &lt;x5/&gt;A&lt;x6/&gt; is an array type with fast linear indexing; otherwise,
it will be a &lt;x7/&gt;CartesianIndex&lt;x8/&gt;:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155838Z" creationid="hsugawa8651" creationdate="20181109T155838Z">
        <seg>2番目の 構成,&lt;x1/&gt;i&lt;x2/&gt;は&lt;x5/&gt;Int&lt;x6/&gt;であり,&lt;x5/&gt;A&lt;x6/&gt;が高速線形インデックスを用いたアレイ型である場合は,それ以外の値である。 &lt;x7/&gt;CartesianIndex&lt;x8/&gt;になります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Increasing the
index of dimension &lt;x9/&gt;k&lt;x10/&gt; by &lt;x11/&gt;1&lt;x12/&gt; should increase the index &lt;x13/&gt;i&lt;x14/&gt; of &lt;x15/&gt;`getindex(A,i)`&lt;x16/&gt; by
&lt;x17/&gt;`stride(A,k)`&lt;x18/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160502Z" creationid="hsugawa8651" creationdate="20181109T160502Z">
        <seg>増加 &lt;x11/&gt;1&lt;x12/&gt;&lt;x12/&gt;の寸法&lt;x9/&gt;k&lt;x10/&gt;は、&lt;x15/&gt;'getindex(A,i)'&lt;x15/&gt;のインデックス&lt;x13/&gt;i&lt;x14/&gt;を増加させます。 &lt;x17/&gt;`stride(A,k)`&lt;x18/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indexable Collections</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041646Z" creationid="hsugawa8651" creationdate="20181112T041646Z">
        <seg>Indexable Collections</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indexed assignment
syntax without the &lt;x6/&gt;end&lt;x7/&gt; keyword is equivalent to a call to
&lt;x8/&gt;`setindex!`&lt;x9/&gt;:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155447Z" creationid="hsugawa8651" creationdate="20181109T155447Z">
        <seg>インデックス付きの割り当て &lt;x6/&gt;end&lt;x7/&gt;キーワードがない構文は、次のような呼び出しに相当します。 &lt;x8/&gt;`setindex!`&lt;x9/&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indexing by a boolean vector &lt;x3/&gt;B&lt;x4/&gt; is effectively the same as indexing by the
vector of integers that is returned by &lt;x5/&gt;`findall(B)`&lt;x6/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155758Z" creationid="hsugawa8651" creationdate="20181109T155758Z">
        <seg>ブール型ベクトル&lt;x3/&gt;B&lt;x4/&gt;によるインデックス作成は、実効的には、以下のようにして行われる。 &lt;x5/&gt;`findall(B)`&lt;x6/&gt;によって返される整数のベクトル。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Indexing syntax without the &lt;x3/&gt;end&lt;x4/&gt; keyword is equivalent to a call to &lt;x5/&gt;`getindex`&lt;x6/&gt;:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155245Z" creationid="hsugawa8651" creationdate="20181109T155245Z">
        <seg>&lt;x3/&gt;end&lt;x4/&gt;キーワードなしのインデックス構文は、&lt;x5/&gt;`getindex'&lt;x6/&gt;への呼び出しと同じです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Instead of &lt;x3/&gt;if &lt;x4/&gt; &lt;x5/&gt; end&lt;x6/&gt;, one can write &lt;x7/&gt;&lt;x8/&gt; &amp;&amp; &lt;x9/&gt;&lt;x10/&gt; (which could be
read as: &lt;x11/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230354Z" creationid="hsugawa8651" creationdate="20181109T230354Z">
        <seg>&lt;x4/&gt;&lt;x5/&gt;end&lt;x6/&gt;ではなく、&lt;x7/&gt;&lt;x8/&gt;&amp;&amp;&lt;x9/&gt;&lt;x10/&gt;(これは以下のようなものがあります)&lt;x x/&gt;&lt;x10/&gt;( read as:&lt;x11/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integer value N launches N additional local worker processes; &lt;x1/&gt;auto&lt;x2/&gt; launches as many workers as the number of local CPU threads (logical cores)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224711Z" creationid="hsugawa8651" creationdate="20181109T224711Z">
        <seg>整数値Nは、N個のローカル・ワーカー・プロセスを起動します。&lt;x1/&gt;自動&lt;x2/&gt;は、ローカルCPUスレッド(論理コア)の数と同じ数のワーカーを起動します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Integers and floating-point values are the basic building blocks of arithmetic and computation.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225032Z" creationid="hsugawa8651" creationdate="20181109T225032Z">
        <seg>整数および浮動小数点値は、算術演算と計算の基本的な構成要素です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Interactive mode; REPL runs and &lt;x1/&gt;isinteractive()&lt;x2/&gt; is true</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224718Z" creationid="hsugawa8651" creationdate="20181109T224718Z">
        <seg>Interactiveモード;REPLは実行され、&lt;x1/&gt;イスインタラクティブ()&lt;x2/&gt;はtrueです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Internals</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042019Z" creationid="hsugawa8651" creationdate="20181110T042019Z">
        <seg>Internals</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It can even be combined with a &lt;x8/&gt;:&lt;x9/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155706Z" creationid="hsugawa8651" creationdate="20181109T155706Z">
        <seg>また、&lt;x8/&gt;:&lt;x9/&gt;と組み合わせることもできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It gets its name from being the only operator
in most languages taking three operands:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230049Z" creationid="hsugawa8651" creationdate="20181109T230049Z">
        <seg>その名前が唯一の演算子となります。 ほとんどの言語で3つのオペランドを使用しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is generally more efficient to use boolean arrays as
indices directly instead of first calling &lt;x13/&gt;`findall`&lt;x14/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155813Z" creationid="hsugawa8651" creationdate="20181109T155813Z">
        <seg>一般的に、boolean配列を使用する方が効率的です。 は、最初の呼び出し&lt;x13/&gt;'findall&lt;x14/&gt;を呼び出すのではなく、直接インデックスを作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is parameterized by
the number of dimensions &lt;x3/&gt;N&lt;x4/&gt; and the element type &lt;x5/&gt;T&lt;x6/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160240Z" creationid="hsugawa8651" creationdate="20181109T160240Z">
        <seg>パラメータは、パラメータによってパラメータ化されます。 次元の数&lt;x3/&gt;N&lt;x4/&gt;と、エレメント・タイプ&lt;x5/&gt;T&lt;x6/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is possible to pass Julia functions to native C functions that accept function pointer arguments.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153908Z" creationid="hsugawa8651" creationdate="20181109T153908Z">
        <seg>関数ポインタ引数を受け入れるネイティブC関数にJulia関数を渡すことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is recommended that these operations
have nearly constant time complexity, or technically Õ(1) complexity, as otherwise some array
functions may be unexpectedly slow.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160322Z" creationid="hsugawa8651" creationdate="20181109T160322Z">
        <seg>これらの操作は、次のように操作することをお勧めします。 ほとんど一定の時間的複雑さ(技術的には1)、あるいは技術的には複雑さがある 機能が予期せぬほど遅くなります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is significant that like &lt;x1/&gt;if&lt;x2/&gt;-&lt;x3/&gt;elseif&lt;x4/&gt;-&lt;x5/&gt;else&lt;x6/&gt;, the expressions before and after the &lt;x7/&gt;:&lt;x8/&gt; are
only evaluated if the condition expression evaluates to &lt;x9/&gt;true&lt;x10/&gt; or &lt;x11/&gt;false&lt;x12/&gt;, respectively:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230156Z" creationid="hsugawa8651" creationdate="20181109T230156Z">
        <seg>&lt;x2/&gt;-&lt;x3/&gt;elseif&lt;x4/&gt;&lt;x5/&gt;else&lt;x6/&gt;以外の&lt;x6/&gt;&lt;x6/&gt;の場合は、&lt;x7/&gt;:&lt;x8/&gt;:&lt;x8/&gt;=&lt;x8/&gt;となる。 条件式が&lt;x9/&gt;真&lt;x10/&gt;または&lt;x11/&gt;false&lt;x12/&gt;と評価された場合にのみ評価されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It is sometimes useful to perform element-by-element binary operations on arrays of different
sizes, such as adding a vector to each column of a matrix.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160040Z" creationid="hsugawa8651" creationdate="20181109T160040Z">
        <seg>異なる要素のバイナリ・バイナリ・バイナリ・オペレーションを実行する場合には、次のようにします。 行列の各列にベクトルを追加するなどのサイズです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It will
be evaluated and returned depending on the preceding conditionals:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230826Z" creationid="hsugawa8651" creationdate="20181109T230826Z">
        <seg>それは 前の条件に応じて評価され、返されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>It's easy to experiment with this behavior:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230248Z" creationid="hsugawa8651" creationdate="20181109T230248Z">
        <seg>この動作を試してみると簡単です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Its implementation uses &lt;x2/&gt;`hash`&lt;x3/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041720Z" creationid="hsugawa8651" creationdate="20181112T041720Z">
        <seg>その実装は、&lt;x2/&gt;'ハッシュを使用します。&lt;x3/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia
functions are not pure mathematical functions, in the sense that functions can alter and be affected
by the global state of the program.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025452Z" creationid="hsugawa8651" creationdate="20181110T025452Z">
        <seg>ジュリア 関数は純粋な数学的関数ではなく、関数が変更され、影響を受けることがあるという意味では プログラムの世界的な状態です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia Base contains a range of functions and macros appropriate for performing
scientific and numerical computing, but is also as broad as those of many general purpose programming
languages.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041646Z" creationid="hsugawa8651" creationdate="20181110T041646Z">
        <seg>Julia Base contains a range of functions and macros appropriate for performing
scientific and numerical computing, but is also as broad as those of many general purpose programming
languages.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia can be started in parallel mode with either the &lt;x1/&gt;-p&lt;x2/&gt; or the &lt;x3/&gt;--machine-file&lt;x4/&gt; options.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224410Z" creationid="hsugawa8651" creationdate="20181109T224410Z">
        <seg>Juliaは、&lt;x1/&gt;-p&lt;x2/&gt;または&lt;x3/&gt;-machinefile&lt;x4/&gt;オプションのいずれかと並行モードで起動できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia does not have an analog of MATLAB's &lt;x1/&gt;clear&lt;x2/&gt; function; once a name is defined in a Julia
session (technically, in module &lt;x3/&gt;Main&lt;x4/&gt;), it is always present.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024636Z" creationid="hsugawa8651" creationdate="20181110T024636Z">
        <seg>JuliaはMATLABの&lt;x1/&gt;clear&lt;x2/&gt;関数のアナログを持っていない;名前がJuliaで定義された場合 セッション(技術的には、モジュール&lt;x3/&gt;メイン&lt;x4/&gt;)は常に存在します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia does not treat arrays in any special way.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154124Z" creationid="hsugawa8651" creationdate="20181109T154124Z">
        <seg>Juliaは、特別な方法でアレイを処理しません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia function arguments follow a convention sometimes called "pass-by-sharing", which means that
values are not copied when they are passed to functions.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025705Z" creationid="hsugawa8651" creationdate="20181110T025705Z">
        <seg>Julia関数の引数は、「共有によるパス」と呼ばれる規則に従うことがあります。これは 値が関数に渡されると、値はコピーされません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia has a "no boilerplate" philosophy:
functions can be called directly from Julia without any "glue" code, code generation, or compilation
-- even from the interactive prompt.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160541Z" creationid="hsugawa8651" creationdate="20181109T160541Z">
        <seg>Juliaは「ボイラープレートなし」哲学を持っている。 関数は、"glue"コード、コード生成、コンパイルなしで、Juliaから直接呼び出すことができます。 --対話型プロンプトからでも。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia installation is straightforward, whether using precompiled binaries or compiling from source.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224247Z" creationid="hsugawa8651" creationdate="20181109T224247Z">
        <seg>ジュリアのインストールは、コンパイル済みのバイナリを使用するか、ソースからコンパイルするかにかかわらず、簡単です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia provides a broad range of primitive numeric types, and a full complement of arithmetic and
bitwise operators as well as standard mathematical functions are defined over them.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225045Z" creationid="hsugawa8651" creationdate="20181109T225045Z">
        <seg>Juliaは、さまざまな原始的な数値型を提供し、算術演算の完全な補完を提供します。 ビット演算子と標準数学関数がそれらの上に定義されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia provides a variety of control flow constructs:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225711Z" creationid="hsugawa8651" creationdate="20181109T225711Z">
        <seg>Juliaは、さまざまな制御フロー構成を提供しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia's compiler uses type inference and generates
optimized code for scalar array indexing, allowing programs to be written in a style that is convenient
and readable, without sacrificing performance, and using less memory at times.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154155Z" creationid="hsugawa8651" creationdate="20181109T154155Z">
        <seg>Juliaのコンパイラーは型推論を使用し スカラー配列インデックスの最適化されたコードで、プログラムをスタイルに便利なスタイルで記述できるようにします。 パフォーマンスを犠牲にすることなく読み取り可能で、時にはメモリを減らすことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Julia, like most technical computing languages, provides a first-class array implementation.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154040Z" creationid="hsugawa8651" creationdate="20181109T154040Z">
        <seg>Juliaは、ほとんどの技術的なコンピューティング言語と同様、一流のアレイ実装を提供しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just as in &lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;(@ref man-array-indexing), the &lt;x4/&gt;end&lt;x5/&gt; keyword may be used
to represent the last index of each dimension within the indexing brackets, as
determined by the size of the array being assigned into.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155438Z" creationid="hsugawa8651" creationdate="20181109T155438Z">
        <seg>&lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;(@ref man array indexing)の場合と同様に、&lt;x4/&gt;end&lt;x5/&gt;キーワードを使用することもできます。 インデックス・ブラケット内の各次元の最後のインデックスを表示するには、次のように指定します。 割り当てられているアレイのサイズによって決定されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just like
inner functions used elsewhere in the language, variables from the enclosing scope can be
"captured" in the inner function.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155005Z" creationid="hsugawa8651" creationdate="20181109T155005Z">
        <seg>ちょうど 言語で他の場所で使用される内部関数、囲みスコープからの変数は、次のようになります。 「取り込み」は内部機能である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Just like condition expressions used in &lt;x1/&gt;if&lt;x2/&gt;, &lt;x3/&gt;elseif&lt;x4/&gt; or the ternary operator, the operands of
&lt;x5/&gt;&amp;&amp;&lt;x6/&gt; or &lt;x7/&gt;||&lt;x8/&gt; must be boolean values (&lt;x9/&gt;true&lt;x10/&gt; or &lt;x11/&gt;false&lt;x12/&gt;).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230809Z" creationid="hsugawa8651" creationdate="20181109T230809Z">
        <seg>&lt;x2/&gt;、&lt;x3/&gt;elseif&lt;x4/&gt;、または三元演算子の&lt;x1/&gt;で使用される条件式と同じように、オペランドは次のようになります。 &lt;x5/&gt;&amp;&amp;&lt;x6/&gt;または&lt;x7/&gt;&lt;x8/&gt;は、ブール値(&lt;x9/&gt;true&lt;x10/&gt;または&lt;x11/&gt;false&lt;x12/&gt;)である必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>LLVM Interface</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042029Z" creationid="hsugawa8651" creationdate="20181110T042029Z">
        <seg>LLVM Interface</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Larger integer literals that cannot be represented using only 32 bits but can be represented in
64 bits always create 64-bit integers, regardless of the system type:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225319Z" creationid="hsugawa8651" creationdate="20181109T225319Z">
        <seg>32ビットのみを使用して表現することはできないが、次のように表現できる整数リテラル 64ビットは、システムタイプに関係なく、常に64ビットの整数を作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Largest value</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225129Z" creationid="hsugawa8651" creationdate="20181109T225129Z">
        <seg>最大値</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Like ccall, all of these arguments will be evaluated at compile-time, when the containing method is defined.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153944Z" creationid="hsugawa8651" creationdate="20181109T153944Z">
        <seg>ccallと同様に、これらの引数はすべてコンパイル時に評価され、containingメソッドが定義されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Limit usage of CPU features up to &lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;; set to &lt;x4/&gt;help&lt;x5/&gt; to see the available options</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224739Z" creationid="hsugawa8651" creationdate="20181109T224739Z">
        <seg>CPU機能の使用を制限&lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;に制限します。&lt;x4/&gt;ヘルプ&lt;x5/&gt;に設定すると、使用可能なオプションが表示されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Literal integers are represented in the standard manner:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225202Z" creationid="hsugawa8651" creationdate="20181109T225202Z">
        <seg>リテラル整数は、標準的な方法で表されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Load &lt;x1/&gt;&lt;x2/&gt;/.julia/config/startup.jl&lt;x3/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224646Z" creationid="hsugawa8651" creationdate="20181109T224646Z">
        <seg>&lt;x1/&gt;&lt;x2/&gt;/.julia/config/startup.jl&lt;x3/&gt;をロードします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Load &lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt; immediately on all processors</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224705Z" creationid="hsugawa8651" creationdate="20181109T224705Z">
        <seg>すべてのプロセッサで&lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;を即時にロード</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Load or save history</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224730Z" creationid="hsugawa8651" creationdate="20181109T224730Z">
        <seg>履歴をロードまたは保存する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many functions for constructing and initializing arrays are provided.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154333Z" creationid="hsugawa8651" creationdate="20181109T154333Z">
        <seg>配列を作成して初期化するための多くの関数が用意されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many newcomers to Julia find the use of &lt;x1/&gt;...&lt;x2/&gt; operator confusing.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025227Z" creationid="hsugawa8651" creationdate="20181110T025227Z">
        <seg>Juliaの新規参入者の多くは、&lt;x1/&gt;.…&lt;x2/&gt;演算子を混同していることを発見しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Many non- mutating functions are implemented by
calling a function of the same name with an added &lt;x6/&gt;!&lt;x7/&gt; at the end on an explicit
copy of the input, and returning that copy.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154222Z" creationid="hsugawa8651" creationdate="20181109T154222Z">
        <seg>多くの非重複関数は、次のように実装されています。 明示的に最後に&lt;x6/&gt;!&lt;x7/&gt;を追加して、同じ名前の関数を呼び出します。 入力のコピーを返し、そのコピーを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Memory layout</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041853Z" creationid="hsugawa8651" creationdate="20181110T041853Z">
        <seg>Memory layout</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modifications to mutable values (such as &lt;x3/&gt;Array&lt;x4/&gt;s) made within
a function will be visible to the caller.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025712Z" creationid="hsugawa8651" creationdate="20181110T025712Z">
        <seg>(&lt;x3/&gt;Array&lt;x4/&gt;s)のような可変値への変更 呼び出し側から関数が表示されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Modules can be replaced by redefining them, and so if you wrap all your new code inside a module
you can redefine types and constants.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024738Z" creationid="hsugawa8651" creationdate="20181110T024738Z">
        <seg>モジュールを再定義すると、モジュールを再定義することができます。したがって、モジュール内の新しいコードをすべてラップすることができます。 タイプと定数を再定義できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>More concrete examples
can be found within the &lt;x25/&gt;&lt;x26/&gt;&lt;x27/&gt;(@ref man-interface-strided-arrays).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160515Z" creationid="hsugawa8651" creationdate="20181109T160515Z">
        <seg>具体的な事例 は、&lt;x25/&gt;&lt;x26/&gt;&lt;x27/&gt;(@ref man interface strided配列)内にあることができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Moreover, an attempt to use &lt;x8/&gt;A&lt;x9/&gt; will likely result in an error, because most methods are not defined on type &lt;x10/&gt;Nothing&lt;x11/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024705Z" creationid="hsugawa8651" creationdate="20181110T024705Z">
        <seg>さらに、&lt;x8/&gt;A&lt;x9/&gt;を使用しようとすると、エラーが発生する可能性があります。なぜなら、ほとんどのメソッドは、タイプ&lt;x10/&gt;Nothing&lt;x11/&gt;では定義されていないからです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most
technical computing languages pay a lot of attention to their array implementation at the expense
of other containers.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154112Z" creationid="hsugawa8651" creationdate="20181109T154112Z">
        <seg>ほとんど テクニカル・コンピューティング言語は、アレイ実装に多大な関心を払っています。 その他の容器。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most C and Fortran libraries ship
compiled as shared libraries already, but if you are compiling the code yourself using GCC (or
Clang), you will need to use the &lt;x1/&gt;-shared&lt;x2/&gt; and &lt;x3/&gt;-fPIC&lt;x4/&gt; options.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160550Z" creationid="hsugawa8651" creationdate="20181109T160550Z">
        <seg>ほとんどのCおよびFortranライブラリは出荷されています。 はすでに共有ライブラリとしてコンパイルされていますが、GCCを使用して自分でコードをコンパイルする場合は Clang)は、&lt;x1/&gt;-shared&lt;x2/&gt;および&lt;x3/&gt;-fPIC&lt;x4/&gt;オプションを使用する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Most of these functions
also accept a first input &lt;x3/&gt;T&lt;x4/&gt;, which is the element type of the array.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154343Z" creationid="hsugawa8651" creationdate="20181109T154343Z">
        <seg>これらの関数の大部分 また、配列の要素タイプである最初の入力&lt;x3/&gt;T&lt;x4/&gt;を受け入れます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Nested "dot calls" &lt;x5/&gt;f.(...)&lt;x6/&gt; (including calls to &lt;x7/&gt;.+&lt;x8/&gt; etcetera)
&lt;x9/&gt;&lt;x10/&gt;&lt;x11/&gt;(@ref man-dot-operators) into a single &lt;x12/&gt;broadcast&lt;x13/&gt; call.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160131Z" creationid="hsugawa8651" creationdate="20181109T160131Z">
        <seg>ネストされた「ドットコール」&lt;x5/&gt;f.(...)&lt;x6/&gt;(&lt;x7/&gt;.+&lt;x8/&gt;eteteraへの呼び出しを含む) &lt;x9/&gt;&lt;x10/&gt;&lt;x11/&gt;(@ref man dot演算子)は、単一の&lt;x12/&gt;ブロードキャスト・&lt;x13/&gt;コールに対して使用されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No matter how an &lt;x2/&gt;AbstractArray{T,N}&lt;x3/&gt; is represented internally, &lt;x4/&gt;T&lt;x5/&gt; is the type of
object returned by &lt;x6/&gt;integer&lt;x7/&gt; indexing (&lt;x8/&gt;A[1, ..., 1]&lt;x9/&gt;, when &lt;x10/&gt;A&lt;x11/&gt; is not empty) and &lt;x12/&gt;N&lt;x13/&gt; should be
the length of the tuple returned by &lt;x14/&gt;`size`&lt;x15/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160357Z" creationid="hsugawa8651" creationdate="20181109T160357Z">
        <seg>&lt;x2/&gt;AbstractArray{T,N}&lt;x3/&gt;が内部的にどのように表されても、&lt;x4/&gt;T&lt;x5/&gt;は以下のタイプである。 &lt;x6/&gt;整数&lt;x7/&gt;インデックス(&lt;x8/&gt;A[1,.…,1]&lt;x9/&gt;,&lt;x10/&gt;)は&lt;x10/&gt;A&lt;x11/&gt;であり、&lt;x12/&gt;N&lt;x13/&gt;は&lt;x12/&gt;n&lt;x13/&gt;である。 &lt;x14/&gt;`size'&lt;x15/&gt;によって返されるタプルの長さです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>No, you are not allowed to have a &lt;x1/&gt;using&lt;x2/&gt; or &lt;x3/&gt;import&lt;x4/&gt; statement inside a function.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025132Z" creationid="hsugawa8651" creationdate="20181110T025132Z">
        <seg>いいえ、関数内の&lt;x/&gt;または&lt;x3/&gt;インポート&lt;x4/&gt;ステートメントを&lt;x2/&gt;のインポートを使用することはできません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that &lt;x1/&gt;islinux&lt;x2/&gt; and &lt;x3/&gt;isapple&lt;x4/&gt; are mutually exclusive subsets of &lt;x5/&gt;isunix&lt;x6/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224942Z" creationid="hsugawa8651" creationdate="20181109T224942Z">
        <seg>&lt;x1/&gt;アリヌス&lt;x2/&gt;および&lt;x3/&gt;イサプリ&lt;x4/&gt;は、&lt;x5/&gt;イシュニク&lt;x6/&gt;の相互排他的なサブセットであることに留意されたい。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that &lt;x9/&gt;ARGS&lt;x10/&gt; is
also set when a Julia expression is given using the &lt;x11/&gt;-e&lt;x12/&gt; option on the command line (see the
&lt;x13/&gt;julia&lt;x14/&gt; help output below) but &lt;x15/&gt;PROGRAM_FILE&lt;x16/&gt; will be empty.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224338Z" creationid="hsugawa8651" creationdate="20181109T224338Z">
        <seg>&lt;x9/&gt;ARGS&lt;x10/&gt;は以下のようになります。 また、コマンドラインで&lt;x11/&gt;-e&lt;x12/&gt;オプションを使用してJulia式を指定したときにも設定されます( &lt;x13/&gt;julia&lt;x14/&gt;ヘルプ出力は次のようになりますが、&lt;x15/&gt;PROGRAM_FILE&lt;x16/&gt;は空です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that comparisons such as &lt;x1/&gt;==&lt;x2/&gt; operate on whole arrays, giving a single boolean
answer.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160005Z" creationid="hsugawa8651" creationdate="20181109T160005Z">
        <seg>&lt;x1/&gt;==&lt;x2/&gt;のような比較は、すべての配列に対して動作し、単一のブール値を与えることに注意してください。 答えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the argument type tuple must be written as &lt;x1/&gt;(Cstring,)&lt;x2/&gt;, rather than &lt;x3/&gt;(Cstring)&lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224054Z" creationid="hsugawa8651" creationdate="20181109T224054Z">
        <seg>引数のタイプは、&lt;x3/&gt;(Cstring)&lt;x4/&gt;ではなく、&lt;x1/&gt;(Cstring,)&lt;x2/&gt;として記述する必要があることに注意してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that the spaces around &lt;x19/&gt;?&lt;x20/&gt; and &lt;x21/&gt;:&lt;x22/&gt; are mandatory: an expression
like &lt;x23/&gt;a?b:c&lt;x24/&gt; is not a valid ternary expression (but a newline is acceptable after both the &lt;x25/&gt;?&lt;x26/&gt; and
the &lt;x27/&gt;:&lt;x28/&gt;).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230058Z" creationid="hsugawa8651" creationdate="20181109T230058Z">
        <seg>&lt;x19/&gt;?&lt;x20/&gt;と&lt;X21/&gt;:&lt;x22/&gt;以外のスペースは必須です。式は次のようになります。 &lt;x23/&gt;a?b:c&lt;x24/&gt;は、有効な三元表現ではありません(ただし、&lt;x25/&gt;?&lt;x26/&gt;&lt;x26/&gt;)は、&lt;x25/&gt;?&lt;x26/&gt;と &lt;x27/&gt;:&lt;x28/&gt;)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Note that very short conditional statements (one-liners) are frequently expressed using Short-Circuit
Evaluation in Julia, as outlined in the next section.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230030Z" creationid="hsugawa8651" creationdate="20181109T230030Z">
        <seg>非常に短い条件文(oneliner)は、短絡を使用して頻繁に表現されることに注意してください。 次のセクションで概説されているように、Juliaでの評価。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Notice that, after
the function call, &lt;x9/&gt;x&lt;x10/&gt; is still bound to the same array, but the content of that array changed:
the variables &lt;x11/&gt;A&lt;x12/&gt; and &lt;x13/&gt;x&lt;x14/&gt; were distinct bindings referring to the same mutable &lt;x15/&gt;Array&lt;x16/&gt; object.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025111Z" creationid="hsugawa8651" creationdate="20181110T025111Z">
        <seg>次の点に注目してください。 関数呼び出し&lt;x9/&gt;x&lt;x10/&gt;は、まだ同じ配列にバインドされていますが、その配列の内容は変更されています。 変数&lt;x11/&gt;A&lt;x12/&gt;および&lt;x13/&gt;x14/&gt;は、同じ可変の&lt;x15/&gt;配列&lt;x16/&gt;オブジェクトを参照する別個のバインディングである。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Number of bits</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225120Z" creationid="hsugawa8651" creationdate="20181109T225120Z">
        <seg>ビット数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Number&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041604Z" creationid="hsugawa8651" creationdate="20181112T041604Z">
        <seg>Number&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Often referred to as logical indexing or indexing with a logical mask, indexing
by a boolean array selects elements at the indices where its values are &lt;x1/&gt;true&lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155734Z" creationid="hsugawa8651" creationdate="20181109T155734Z">
        <seg>論理的なインデックス作成と呼ばれる論理的インデックス作成またはインデックス作成と呼ばれることが多いインデックス作成 ブール型配列では、値が&lt;x1/&gt;真&lt;x2/&gt;であるインデックスで要素を選択します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>On the other hand, any type of expression can be used at the end of a conditional chain.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230819Z" creationid="hsugawa8651" creationdate="20181109T230819Z">
        <seg>一方、条件付きチェーンの最後では、任意のタイプの表現を使用できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Once the user has entered a complete expression, such as &lt;x11/&gt;1 + 2&lt;x12/&gt;, and hits enter, the interactive
session evaluates the expression and shows its value.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224313Z" creationid="hsugawa8651" creationdate="20181109T224313Z">
        <seg>ユーザーが&lt;x11/&gt;1+2&lt;x12/&gt;などの完全な式を入力してからヒットすると、対話型の sessionは式を評価し、その値を表示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One common gotcha is that a 1-tuple must be
written with a trailing comma.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224037Z" creationid="hsugawa8651" creationdate="20181109T224037Z">
        <seg>一般的なゴチャの一つは、1タプルが必要であるということです。 後続のカンマで作成されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>One rather
important distinction between the previous &lt;x2/&gt;while&lt;x3/&gt; loop form and the &lt;x4/&gt;for&lt;x5/&gt; loop form is the scope
during which the variable is visible.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T231156Z" creationid="hsugawa8651" creationdate="20181109T231156Z">
        <seg>一つ &lt;x3/&gt;ループ形態と&lt;x4/&gt;ループ形態の&lt;x4/&gt;は、前の&lt;x2/&gt;と&lt;x4/&gt;の間の重要な区別である。 変数が表示されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Operations on &lt;x11/&gt;AbstractArray&lt;x12/&gt; objects are defined using higher
level operators and functions, in a way that is independent of the underlying storage.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160305Z" creationid="hsugawa8651" creationdate="20181109T160305Z">
        <seg>&lt;x11/&gt;AbstractArray&lt;x12/&gt;オブジェクトに対する操作は、より高い値を使用して定義されます。 レベル演算子と関数は、基礎となる記憶域とは独立して存在します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Or you could put that code into a script and run it:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224350Z" creationid="hsugawa8651" creationdate="20181109T224350Z">
        <seg>あるいは、スクリプトにコードを挿入して実行することもできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Otherwise,
&lt;x5/&gt;X&lt;x6/&gt; is an array with the same number of dimensions as the sum of the dimensionalities of all the
indices.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155131Z" creationid="hsugawa8651" creationdate="20181109T155131Z">
        <seg>そうでない場合は &lt;x5/&gt;x&lt;x6/&gt;は、すべての次元の次元性の合計と同じ数の次元を持つ配列です。 索引。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Partially implemented by:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041654Z" creationid="hsugawa8651" creationdate="20181112T041654Z">
        <seg>Partially implemented by:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Passing options to &lt;x1/&gt;julia&lt;x2/&gt; in so-called shebang by, e.g.,
&lt;x3/&gt;&lt;x4/&gt;!/usr/bin/env julia --startup-file=no&lt;x5/&gt; may not work in some
platforms such as Linux.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024920Z" creationid="hsugawa8651" creationdate="20181110T024920Z">
        <seg>例えば、シェバンでは、&lt;x1/&gt;july&lt;x2/&gt;に渡すオプションを指定します。 &lt;x3/&gt;&lt;x4/&gt;!/usr/bin/env julia--startup file=no&lt;x5/&gt;は動作しない場合があります。 Linuxなどのプラットフォームです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Perhaps you've defined a type and then realize you need to add a new field.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024714Z" creationid="hsugawa8651" creationdate="20181110T024714Z">
        <seg>おそらく、タイプを定義してから、新しいフィールドを追加する必要があることを認識しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Print this message</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224608Z" creationid="hsugawa8651" creationdate="20181109T224608Z">
        <seg>このメッセージを印刷する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Properties of Types</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041836Z" creationid="hsugawa8651" creationdate="20181110T041836Z">
        <seg>Properties of Types</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Quiet startup: no banner, suppress REPL warnings</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224722Z" creationid="hsugawa8651" creationdate="20181109T224722Z">
        <seg>quietスタートアップ:バナーがない、REPL警告が省略されていない</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ranges in generators and comprehensions can depend on previous ranges by writing multiple &lt;x1/&gt;for&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155036Z" creationid="hsugawa8651" creationdate="20181109T155036Z">
        <seg>生成の範囲は、&lt;x2/&gt;を&lt;x2/&gt;に書くことによって、以前の範囲に依存することができる。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Ranges like &lt;x1/&gt;a:c&lt;x2/&gt; or &lt;x3/&gt;a:b:c&lt;x4/&gt;, which select contiguous or strided subsections from &lt;x5/&gt;a&lt;x6/&gt; to &lt;x7/&gt;c&lt;x8/&gt; (inclusive)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155527Z" creationid="hsugawa8651" creationdate="20181109T155527Z">
        <seg>&lt;x1/&gt;a:c&lt;x2/&gt;または&lt;x3/&gt;a:b&lt;x4/&gt;のような範囲。&lt;x5/&gt;から&lt;x6/&gt;&lt;x8/&gt;&lt;x8/&gt;(含む)まで連続するサブセクションまたはストライドされたサブセクションを選択する。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Recall that the variable &lt;x1/&gt;`ans`&lt;x2/&gt; is set to the value of the last expression evaluated in
an interactive session.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225338Z" creationid="hsugawa8651" creationdate="20181109T225338Z">
        <seg>変数&lt;x1/&gt;`は、最後に評価された最後の式の値に設定されていることを思い出してください。 対話型セッションです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Reflection</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042017Z" creationid="hsugawa8651" creationdate="20181110T042017Z">
        <seg>Reflection</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Return type (see below for mapping the declared C type to Julia)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223843Z" creationid="hsugawa8651" creationdate="20181109T223843Z">
        <seg>戻り型(宣言されたC型をJuliaにマッピングするには、次を参照)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Run processes on hosts listed in &lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224714Z" creationid="hsugawa8651" creationdate="20181109T224714Z">
        <seg>&lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;にリストされたホスト上でプロセスを実行する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Running a Julia script using &lt;x1/&gt;julia file.jl&lt;x2/&gt; does not throw
&lt;x3/&gt;`InterruptException`&lt;x4/&gt; when you try to terminate it with CTRL-C
(SIGINT).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024906Z" creationid="hsugawa8651" creationdate="20181110T024906Z">
        <seg>&lt;x1/&gt;ジュリアファイル.jl&lt;x2/&gt;を使用してジュリアスクリプトを実行しても、スローされません。 CTRL-Cで終了しようとすると、&lt;x3/&gt;'InterruptException'&lt;x4/&gt;となります。 (SIGINT)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Scalar values passed to these functions are treated as 1-element arrays.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154559Z" creationid="hsugawa8651" creationdate="20181109T154559Z">
        <seg>これらの関数に渡されるスカラー値は、1要素配列として扱われます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See &lt;x5/&gt;Iteration&lt;x6/&gt; below, and for some more advanced
examples, see &lt;x7/&gt;this blog post on multidimensional algorithms and
iteration&lt;x8/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155626Z" creationid="hsugawa8651" creationdate="20181109T155626Z">
        <seg>以下の「&lt;x5/&gt;イテレーション&lt;x6/&gt;」を参照してください。また、詳細については、以下を参照してください。 例を参照してください。このブログ記事は、多次元アルゴリズムに関するこのブログ記事を参照してください。 繰り返し&lt;x8/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See also &lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;(@ref man-scripting) for more information on writing Julia scripts.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224404Z" creationid="hsugawa8651" creationdate="20181109T224404Z">
        <seg>Juliaスクリプトの記述についての詳細は、&lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;(@ref man scripting)も参照してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the &lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref man-interface-array) for more details
on implementing a custom array type.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154135Z" creationid="hsugawa8651" creationdate="20181109T154135Z">
        <seg>詳細については、&lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref man interface array)を参照してください。 カスタム・アレイ・タイプの実装です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>See the &lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref man-interface-iteration) for more details about defining a custom
iterable type.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041550Z" creationid="hsugawa8651" creationdate="20181112T041550Z">
        <seg>カスタムを定義する方法の詳細については、&lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref man interface iteration)を参照してください。 iterable型。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set &lt;x1/&gt; as the home project/environment.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224611Z" creationid="hsugawa8651" creationdate="20181109T224611Z">
        <seg>&lt;x1/&gt;をホームプロジェクト/環境として設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set location of &lt;x1/&gt;julia&lt;x2/&gt; executable</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224639Z" creationid="hsugawa8651" creationdate="20181109T224639Z">
        <seg>&lt;x1/&gt;ジュリア&lt;x2/&gt;実行可能ファイルの場所を設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set the optimization level (default level is 2 if unspecified or 3 if used without a level)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224743Z" creationid="hsugawa8651" creationdate="20181109T224743Z">
        <seg>最適化レベルを設定します(指定されていない場合はデフォルトレベルは2、レベルなしで使用される場合は3です)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Set-Like Collections</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041820Z" creationid="hsugawa8651" creationdate="20181112T041820Z">
        <seg>Set-Like Collections</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Short, simple function definitions
are common in Julia.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025617Z" creationid="hsugawa8651" creationdate="20181110T025617Z">
        <seg>簡潔で単純な関数定義 ジュリアによく見られます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Short-Circuit Evaluation</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230217Z" creationid="hsugawa8651" creationdate="20181109T230217Z">
        <seg>Short-Circuit Evaluation</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Short-Circuit Evaluation&lt;x1/&gt;: &lt;x2/&gt;&amp;&amp;&lt;x3/&gt;, &lt;x4/&gt;||&lt;x5/&gt; and chained comparisons.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225726Z" creationid="hsugawa8651" creationdate="20181109T225726Z">
        <seg>短絡評価&lt;x1/&gt;:&lt;x2/&gt;&amp;&amp;&lt;x3/&gt;、&lt;x4/&gt;&lt;x5/&gt;および連鎖比較。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Short-circuit evaluation is quite similar to conditional evaluation.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230224Z" creationid="hsugawa8651" creationdate="20181109T230224Z">
        <seg>短絡評価は条件付き評価と非常によく似ています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Similarly, indexing
by a &lt;x7/&gt;N&lt;x8/&gt;-dimensional boolean array is effectively the same as indexing by the
vector of &lt;x9/&gt;CartesianIndex{N}&lt;x10/&gt;s where its values are &lt;x11/&gt;true&lt;x12/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155802Z" creationid="hsugawa8651" creationdate="20181109T155802Z">
        <seg>同様にインデックス化 &lt;x7/&gt;N&lt;x8/&gt;-次元ブール配列は、実効的には、以下のように、インデックス化と同じである。 &lt;x9/&gt;CartesianIndex{N}&lt;x10/&gt;sのベクトルであり、その値は&lt;x11/&gt;真&lt;x12/&gt;である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since counting up and
down like the above &lt;x3/&gt;while&lt;x4/&gt; loop does is so common, it can be expressed more concisely with a
&lt;x5/&gt;for&lt;x6/&gt; loop:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T231131Z" creationid="hsugawa8651" creationdate="20181109T231131Z">
        <seg>カウントアップして &lt;x4/&gt;ループは非常に一般的であるので、上記&lt;x3/&gt;のようにダウンすることができる。 &lt;x6/&gt;ループの場合は&lt;x5/&gt;&lt;x6/&gt;:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Since these are fairly small, simple expressions, they could easily be placed onto a single line,
which is where the &lt;x1/&gt;(;)&lt;x2/&gt; chain syntax comes in handy:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225809Z" creationid="hsugawa8651" creationdate="20181109T225809Z">
        <seg>これらはかなり小さいので、簡単な表現で簡単に1行に配置することができます。 ここでは、&lt;x1/&gt;(;)&lt;x2/&gt;チェイン構文が便利です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Smallest value</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225124Z" creationid="hsugawa8651" creationdate="20181109T225124Z">
        <seg>最小値</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>So, we could have defined the &lt;x6/&gt;test&lt;x7/&gt; function above as</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225921Z" creationid="hsugawa8651" creationdate="20181109T225921Z">
        <seg>そこで、上記の&lt;x6/&gt;test&lt;x7/&gt;関数を定義することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Some functions have both modifying (e.g., &lt;x3/&gt;sort!&lt;x4/&gt;) and non-modifying (&lt;x5/&gt;sort&lt;x6/&gt;) versions.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041726Z" creationid="hsugawa8651" creationdate="20181110T041726Z">
        <seg>関数の中には、修正(例えば&lt;x3/&gt;ソート!&lt;x4/&gt;)や修正されない(&lt;x5/&gt;ソート&lt;x6/&gt;)バージョンの両方があるものがあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Sometimes it is convenient to have a single expression which evaluates several subexpressions
in order, returning the value of the last subexpression as its value.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225754Z" creationid="hsugawa8651" creationdate="20181109T225754Z">
        <seg>いくつかのサブ式を評価する単一の表現を持つことが便利な場合もあります。 は、最後のサブ式の値をその値として返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Special Types</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041912Z" creationid="hsugawa8651" creationdate="20181110T041912Z">
        <seg>Special Types</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Start up with the given system image file</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224637Z" creationid="hsugawa8651" creationdate="20181109T224637Z">
        <seg>指定されたシステムイメージファイルで起動する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Strided arrays
must define a &lt;x3/&gt;`strides(A)`&lt;x4/&gt; method that returns a tuple of "strides" for each dimension; a
provided &lt;x5/&gt;`stride(A,k)`&lt;x6/&gt; method accesses the &lt;x7/&gt;k&lt;x8/&gt;th element within this tuple.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160458Z" creationid="hsugawa8651" creationdate="20181109T160458Z">
        <seg>ストローブされた配列 は、各次元のタプルを返す&lt;x3/&gt;`end(A)'&lt;x4/&gt;メソッドを定義する必要があります。 &lt;x5/&gt;`stride(A,k)'は、このタプル内の&lt;x7/&gt;k&lt;x8/&gt;番目のエレメントにアクセスします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SubArray&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041653Z" creationid="hsugawa8651" creationdate="20181112T041653Z">
        <seg>SubArray&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>SubArray&lt;x1/&gt; is a specialization of &lt;x2/&gt;AbstractArray&lt;x3/&gt; that performs indexing by
sharing memory with the original array rather than by copying it.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160427Z" creationid="hsugawa8651" creationdate="20181109T160427Z">
        <seg>サブアレイ&lt;x1/&gt;は、インデックス作成を実行する&lt;x2/&gt;AbstractArray&lt;x3/&gt;の特殊化です。 コピーするのではなく、オリジナルのアレイとメモリを共有することです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Suppose you call a function like this:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024957Z" creationid="hsugawa8651" creationdate="20181110T024957Z">
        <seg>次のような関数を呼び出すとします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>That allows the user to control
the size.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225434Z" creationid="hsugawa8651" creationdate="20181109T225434Z">
        <seg>これによってユーザは サイズです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The
name of the script itself is passed in as the global &lt;x7/&gt;PROGRAM_FILE&lt;x8/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224334Z" creationid="hsugawa8651" creationdate="20181109T224334Z">
        <seg>の スクリプト自体の名前は、グローバルな&lt;x7/&gt;PROGRAM_FILE&lt;x8/&gt;として渡されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;x1/&gt;--&lt;x2/&gt; delimiter can be used to separate command-line arguments intended for the script file from arguments intended for Julia:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224357Z" creationid="hsugawa8651" creationdate="20181109T224357Z">
        <seg>&lt;x1/&gt;--&lt;x2/&gt;デリミタは、July:を対象とした引数から、スクリプトファイルに対して指定されたコマンドライン引数を区切るために使用できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;x1/&gt;AbstractArray&lt;x2/&gt; type includes anything vaguely array-like, and implementations of it might
be quite different from conventional arrays.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160313Z" creationid="hsugawa8651" creationdate="20181109T160313Z">
        <seg>&lt;x1/&gt;AbstractArray&lt;x2/&gt;タイプは、曖昧な配列を含んでおり、実装は実装されています。 従来のアレイとは大きく異なります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;x1/&gt;for&lt;x2/&gt; loop makes common repeated evaluation idioms easier to write.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T231125Z" creationid="hsugawa8651" creationdate="20181109T231125Z">
        <seg>&lt;x2/&gt;ループのための&lt;x1/&gt;は、共通の繰り返し評価イディオムを書くのを容易にする。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;x1/&gt;while&lt;x2/&gt; loop evaluates the condition expression (&lt;x3/&gt;i &lt;= 5&lt;x4/&gt; in this case), and as long it remains
&lt;x5/&gt;true&lt;x6/&gt;, keeps also evaluating the body of the &lt;x7/&gt;while&lt;x8/&gt; loop.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230858Z" creationid="hsugawa8651" creationdate="20181109T230858Z">
        <seg>&lt;x1/&gt;while&lt;x2/&gt;ループは条件式(この場合は&lt;x3/&gt;i&lt;=5&lt;x4/&gt;)を評価しており、それは長いままである &lt;x5/&gt;true&lt;x6/&gt;は、&lt;x8/&gt;ループでは、&lt;x7/&gt;のボディを評価します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The &lt;x7/&gt;`Array`&lt;x8/&gt; type is a specific instance
of &lt;x9/&gt;DenseArray&lt;x10/&gt;;  &lt;x11/&gt;`Vector`&lt;x12/&gt; and &lt;x13/&gt;`Matrix`&lt;x14/&gt; are aliases for the 1-d and 2-d cases.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160422Z" creationid="hsugawa8651" creationdate="20181109T160422Z">
        <seg>&lt;x7/&gt;「Array」&lt;x8/&gt;タイプは、特定のインスタンスです。 &lt;x9/&gt;DenseArray&lt;x10/&gt;;&lt;x11/&gt;'Vector'&lt;x12/&gt;および&lt;x13/&gt;'Matrix'&lt;x14/&gt;は、1-dおよび2-dケースのエイリアスです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The C &lt;x1/&gt;getenv&lt;x2/&gt; function indicates an error by returning &lt;x3/&gt;NULL&lt;x4/&gt;, but other standard C functions
indicate errors in various different ways, including by returning -1, 0, 1 and other special values.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224130Z" creationid="hsugawa8651" creationdate="20181109T224130Z">
        <seg>C&lt;x1/&gt;getenv&lt;x2/&gt;関数は、&lt;x3/&gt;NULL&lt;x4/&gt;を返すことによってエラーを示しますが、他の標準的なC関数の関数です。 -1 0 1、その他の特別な値を返すなど、さまざまな方法でエラーを表示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The array library is implemented
almost completely in Julia itself, and derives its performance from the compiler, just like any
other code written in Julia.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154129Z" creationid="hsugawa8651" creationdate="20181109T154129Z">
        <seg>アレイ・ライブラリーは実装されています。 ほとんどの場合、ジュリア自身は、コンパイラーからのパフォーマンスを導き出し その他のコードはジュリアに書かれています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The basic syntax for defining functions in Julia is:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025456Z" creationid="hsugawa8651" creationdate="20181110T025456Z">
        <seg>Juliaで関数を定義するための基本的な構文は次のとおりです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The behavior is found in
most imperative programming languages having the &lt;x1/&gt;&amp;&amp;&lt;x2/&gt; and &lt;x3/&gt;||&lt;x4/&gt; boolean operators: in a series
of boolean expressions connected by these operators, only the minimum number of expressions are
evaluated as are necessary to determine the final boolean value of the entire chain.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230229Z" creationid="hsugawa8651" creationdate="20181109T230229Z">
        <seg>動作は &lt;x1/&gt;&amp;&amp;&lt;x2/&gt;と&lt;x3/&gt;&lt;x4/&gt;ブール演算子を持つ最も命令的なプログラミング言語:シリーズ これらの演算子によって接続されたブール式のうち、最小の数だけが チェーン全体の最終的なブール値を決定するために必要な評価が行われます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The code to be called must be available as a shared library.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160547Z" creationid="hsugawa8651" creationdate="20181109T160547Z">
        <seg>呼び出されるコードは共有ライブラリとして使用できる必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The concatenation functions are used so often that they have special syntax:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154623Z" creationid="hsugawa8651" creationdate="20181109T154623Z">
        <seg>連結関数は、頻繁に使用されるため、特別な構文が使用されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The easiest way to learn and experiment with Julia is by starting an interactive session (also
known as a read-eval-print loop or "REPL") by double-clicking the Julia executable or running
&lt;x1/&gt;julia&lt;x2/&gt; from the command line:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224254Z" creationid="hsugawa8651" creationdate="20181109T224254Z">
        <seg>Juliaを学習して実験する最も簡単な方法は、対話型セッションを開始することです。 Julia実行可能ファイルをダブルクリックするか、または実行することによって、read-eval-printループまたはREPLと呼ばれる既知の コマンドラインから&lt;x1/&gt;ジュリア&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The easiest way to understand this behavior is to see an example.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230103Z" creationid="hsugawa8651" creationdate="20181109T230103Z">
        <seg>この動作を理解する最も簡単な方法は、例を見ることです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first construct is used when you need the value, but not index, of each element.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155843Z" creationid="hsugawa8651" creationdate="20181109T155843Z">
        <seg>最初の構成は、各要素の値が必要な場合に使用されますが、インデックスでは使用されません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The first five control flow mechanisms are standard to high-level programming languages.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225741Z" creationid="hsugawa8651" creationdate="20181109T225741Z">
        <seg>最初の5つの制御フローメカニズムは、高レベルプログラミング言語に対して標準的なものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following are Julia's primitive numeric types:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225110Z" creationid="hsugawa8651" creationdate="20181109T225110Z">
        <seg>Juliaのプリミティブな数値型は次のとおりです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following arguments, if any, are the actual argument values passed to the function.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224007Z" creationid="hsugawa8651" creationdate="20181109T224007Z">
        <seg>次の引数は、関数に渡された実際の引数の値です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example computes a weighted average of the current element and its left and right
neighbor along a 1-d grid.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154818Z" creationid="hsugawa8651" creationdate="20181109T154818Z">
        <seg>次の例では、現在の要素とその左側と右側の加重平均を計算しています。 1Dグリッドに沿った隣接。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following example computes the QR decomposition of a small section of a larger array, without
creating any temporaries, and by calling the appropriate LAPACK function with the right leading
dimension size and stride parameters.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160522Z" creationid="hsugawa8651" creationdate="20181109T160522Z">
        <seg>次の例は、大きな配列の小さいセクションのQR分解を計算します。 一時的なものを作成すること、そして適切なLAPACK関数を使って適切な関数を呼び出すこと 寸法のサイズと歩幅のパラメータです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The following two-word sequences are reserved:
&lt;x1/&gt;abstract type&lt;x2/&gt;, &lt;x3/&gt;mutable struct&lt;x4/&gt;, &lt;x5/&gt;primitive type&lt;x6/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041755Z" creationid="hsugawa8651" creationdate="20181110T041755Z">
        <seg>次の2語のシーケンスが予約されています。 &lt;x1/&gt;抽象型&lt;x2/&gt;,&lt;x3/&gt;mutable構造体&lt;x4/&gt;,&lt;x5/&gt;プリミティブ型&lt;x6/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The general &lt;x3/&gt;for&lt;x4/&gt; loop:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042052Z" creationid="hsugawa8651" creationdate="20181110T042052Z">
        <seg>&lt;x4/&gt;ループの一般的な&lt;x3/&gt;は次のようになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The general syntax for assigning values in an n-dimensional array A is:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155333Z" creationid="hsugawa8651" creationdate="20181109T155333Z">
        <seg>n次元配列Aの値を代入する一般的な構文は次のとおりです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The general syntax for indexing into an n-dimensional array A is:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155109Z" creationid="hsugawa8651" creationdate="20181109T155109Z">
        <seg>n次元配列Aへの索引付けの一般的な構文は次のとおりです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The input types must be written as a literal tuple, not a tuple-valued
variable or expression.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223955Z" creationid="hsugawa8651" creationdate="20181109T223955Z">
        <seg>入力タイプは、タプルではなく、リテラルタプルとして記述する必要があります。 変数または式。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The machine instructions generated
by Julia's JIT are the same as a native C call would be, so the resulting overhead is the same
as calling a library function from C code.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160553Z" creationid="hsugawa8651" creationdate="20181109T160553Z">
        <seg>生成されたマシン命令 JuliaのJITはネイティブのC呼び出しと同じであるため、結果として生じるオーバーヘッドは同じです。 は、Cコードからライブラリ関数を呼び出します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The machines defined in &lt;x6/&gt;file&lt;x7/&gt; must be accessible via a password-less
&lt;x8/&gt;ssh&lt;x9/&gt; login, with Julia installed at the same location as the current host.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224421Z" creationid="hsugawa8651" creationdate="20181109T224421Z">
        <seg>&lt;x6/&gt;ファイル&lt;x7/&gt;で定義されたマシンは、パスワードなしでアクセスできる必要があります。 &lt;x8/&gt;ssh&lt;x9/&gt;ログインは、現在のホストと同じ場所にJuliaがインストールされています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The macro &lt;x1/&gt;`@cfunction`&lt;x2/&gt; generates the C-compatible function pointer for a call to a
Julia function.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153931Z" creationid="hsugawa8651" creationdate="20181109T153931Z">
        <seg>マクロ&lt;x1/&gt;`@cfunction`&lt;x2/&gt;は、コールのC互換関数ポインタを生成します。 Julia関数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The meaning of this form is that &lt;x1/&gt;F(x,y,...)&lt;x2/&gt; is evaluated with the variables &lt;x3/&gt;x&lt;x4/&gt;, &lt;x5/&gt;y&lt;x6/&gt;, etc. taking
on each value in their given list of values.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154807Z" creationid="hsugawa8651" creationdate="20181109T154807Z">
        <seg>この形式の意味は、&lt;x1/&gt;F(x,y,...)&lt;x2/&gt;は、変数&lt;x3/&gt;x4&lt;x4/&gt;、&lt;x5/&gt;y&lt;x6/&gt;の変数を用いて評価されることである。 指定された値リストの各値です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The memory will be released the next time the garbage collector runs; you can force
this to happen with &lt;x5/&gt;&lt;x6/&gt;&lt;x7/&gt;(@ref Base.GC.gc).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024659Z" creationid="hsugawa8651" creationdate="20181110T024659Z">
        <seg>次にガーベッジ・コレクターが実行されるとメモリーが解放され、次のように強制的に実行されます。 これは&lt;x5/&gt;&lt;x6/&gt;&lt;x7/&gt;(@ref Base.GC.gc)で起こる。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The optional &lt;x18/&gt;bind-to bind_addr[:port]&lt;x19/&gt; specifies the IP address and port that other workers
should use to connect to this worker.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224449Z" creationid="hsugawa8651" creationdate="20181109T224449Z">
        <seg>オプションの&lt;x18/&gt;bindto bind_addr[:port]&lt;x19/&gt;は、他の作業者がそのIPアドレスとポートを指定します。 この作業者に接続するために使用する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The original three-way
example requires chaining multiple uses of the ternary operator together:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230140Z" creationid="hsugawa8651" creationdate="20181109T230140Z">
        <seg>オリジナルの3ウェイ 例では、三元演算子の複数の使用を一緒に連鎖する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The reasoning is that &lt;x1/&gt;a &amp;&amp; b&lt;x2/&gt; must be &lt;x3/&gt;false&lt;x4/&gt; if &lt;x5/&gt;a&lt;x6/&gt; is &lt;x7/&gt;false&lt;x8/&gt;, regardless of the value of
&lt;x9/&gt;b&lt;x10/&gt;, and likewise, the value of &lt;x11/&gt;a || b&lt;x12/&gt; must be true if &lt;x13/&gt;a&lt;x14/&gt; is &lt;x15/&gt;true&lt;x16/&gt;, regardless of the value
of &lt;x17/&gt;b&lt;x18/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230241Z" creationid="hsugawa8651" creationdate="20181109T230241Z">
        <seg>&lt;x1/&gt;a&amp;b&lt;x2/&gt;は、&lt;x5/&gt;&lt;x6/&gt;が&lt;x7/&gt;であれば&lt;x4/&gt;でなければならない。 &lt;x9/&gt;b&lt;x10/&gt;は、&lt;x13/&gt;a&lt;x12/&gt;が&lt;x15/&gt;真&lt;x16/&gt;である場合、値に関係なく真でなければなりません。&lt;x13/&gt;&lt;x16/&gt; &lt;x17/&gt;b&lt;x18/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The result
of &lt;x4/&gt;`view`&lt;x5/&gt; looks the same as the result of &lt;x6/&gt;`getindex`&lt;x7/&gt;, except the
data is left in place.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160436Z" creationid="hsugawa8651" creationdate="20181109T160436Z">
        <seg>結果 &lt;x4/&gt;'view'&lt;x5/&gt;は、&lt;x6/&gt;'getindex'&lt;x7/&gt;の結果と同じであるが データが残されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The result is an N-d dense array with dimensions that are the concatenation of the dimensions
of the variable ranges &lt;x13/&gt;rx&lt;x14/&gt;, &lt;x15/&gt;ry&lt;x16/&gt;, etc. and each &lt;x17/&gt;F(x,y,...)&lt;x18/&gt; evaluation returns a scalar.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154815Z" creationid="hsugawa8651" creationdate="20181109T154815Z">
        <seg>結果は、次元の連結である次元を持つN次元の密配列です。 変数範囲&lt;x13/&gt;rx&lt;x14/&gt;、&lt;x15/&gt;ry&lt;x16/&gt;など、各&lt;x17/&gt;F(x,y,...)&lt;x18/&gt;評価はスカラーを返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The same relationship holds for &lt;x8/&gt;min.(a,b)&lt;x9/&gt; and &lt;x10/&gt;minimum(a)&lt;x11/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160036Z" creationid="hsugawa8651" creationdate="20181109T160036Z">
        <seg>&lt;x8/&gt;min(a,b)&lt;x9/&gt;と&lt;x10/&gt;最小(a)&lt;x11/&gt;と同じ関係が成り立つ。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The second and third arguments are both optional, defaulting to the element type and dimensions of &lt;x3/&gt;A&lt;x4/&gt; if omitted.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154442Z" creationid="hsugawa8651" creationdate="20181109T154442Z">
        <seg>2番目と3番目の引数は両方とも省略可能です。デフォルトでは、&lt;x3/&gt;A&lt;x4/&gt;&lt;x/&gt;の要素タイプと次元は省略されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The short function syntax is accordingly quite idiomatic, considerably reducing
both typing and visual noise.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025621Z" creationid="hsugawa8651" creationdate="20181110T025621Z">
        <seg>したがって、短い関数構文は非常に奇妙なものになり、大幅に減少します。 タイプとビジュアルノイズの両方です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The size
of the binary data item is the minimal needed size, if the leading digit of the literal is not
&lt;x1/&gt;0&lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225415Z" creationid="hsugawa8651" creationdate="20181109T225415Z">
        <seg>サイズ リテラルの先頭桁が必要ない場合は、バイナリ・データ項目の最小サイズが2進数データ項目となります。 &lt;x1/&gt;0&lt;x2/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The so-called "ternary operator", &lt;x1/&gt;?:&lt;x2/&gt;, is closely related to the &lt;x3/&gt;if&lt;x4/&gt;-&lt;x5/&gt;elseif&lt;x6/&gt;-&lt;x7/&gt;else&lt;x8/&gt; syntax,
but is used where a conditional choice between single expression values is required, as opposed
to conditional execution of longer blocks of code.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230045Z" creationid="hsugawa8651" creationdate="20181109T230045Z">
        <seg>いわゆる「三元演算子」&lt;x1/&gt;?&lt;x2/&gt;は、&lt;x4/&gt;-&lt;x5/&gt;elseif&lt;x6/&gt;-&lt;x7/&gt;else&lt;x8/&gt;の場合、&lt;x4/&gt;と密接に関係している。 しかし、単一の表現値間の条件付き選択が必要とされる場合に使用されます。 より長いブロックを条件付きで実行することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The syntax &lt;x1/&gt;[A, B, C, ...]&lt;x2/&gt; constructs a 1-d array (i.e., a vector) of its arguments.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154518Z" creationid="hsugawa8651" creationdate="20181109T154518Z">
        <seg>構文&lt;x1/&gt;[A,B,C,…]&lt;x2/&gt;は、その引数の1次元配列(すなわち、ベクトル)を構成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The traditional function
declaration syntax demonstrated above is equivalent to the following compact "assignment form":</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025506Z" creationid="hsugawa8651" creationdate="20181110T025506Z">
        <seg>従来の機能 上記の宣言構文は、次のコンパクトな「割り当てフォーム」に相当します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The two uses of the &lt;x1/&gt;...&lt;x2/&gt; operator: slurping and splatting</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025224Z" creationid="hsugawa8651" creationdate="20181110T025224Z">
        <seg>&lt;x1/&gt;.…&lt;x2/&gt;演算子の2つの用途:slingingとspliting</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value in location &lt;x5/&gt;I_1[i_1], I_2[i_2], ..., I_n[i_n]&lt;x6/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155412Z" creationid="hsugawa8651" creationdate="20181109T155412Z">
        <seg>location&lt;x5/&gt;I_1[i_1]の値、I_2[i_2]、.…、I_n[i_n]&lt;x6/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value of both compound expression constructs
is that of the last subexpression.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225759Z" creationid="hsugawa8651" creationdate="20181109T225759Z">
        <seg>複合式の両方の構成要素の値 は最後のサブ式のものです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The value returned by a function is the value of the last expression evaluated, which, by default,
is the last expression in the body of the function definition.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025723Z" creationid="hsugawa8651" creationdate="20181110T025723Z">
        <seg>関数によって返される値は、評価された最後の式の値です。これは、デフォルトでは次の値です。 は、関数定義の本文で最後の式です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The values returned by &lt;x1/&gt;`typemin`&lt;x2/&gt; and &lt;x3/&gt;`typemax`&lt;x4/&gt; are always of the given argument
type.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225538Z" creationid="hsugawa8651" creationdate="20181109T225538Z">
        <seg>The values returned by &lt;x1/&gt;`typemin`&lt;x2/&gt; and &lt;x3/&gt;`typemax`&lt;x4/&gt; are always of the given argument
type.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The variable &lt;x1/&gt;Sys.KERNEL&lt;x2/&gt; can be used to handle such
cases.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224825Z" creationid="hsugawa8651" creationdate="20181109T224825Z">
        <seg>変数&lt;x1/&gt;Sys.KERNEL&lt;x2/&gt;は、このような処理を行うために使用することができます。 のようになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>The variable &lt;x1/&gt;relation&lt;x2/&gt; is declared inside the &lt;x3/&gt;if&lt;x4/&gt; block, but used outside.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225941Z" creationid="hsugawa8651" creationdate="20181109T225941Z">
        <seg>The variable &lt;x1/&gt;relation&lt;x2/&gt; is declared inside the &lt;x3/&gt;if&lt;x4/&gt; block, but used outside.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are several functions in the &lt;x3/&gt;Sys&lt;x4/&gt; module intended to make this easier:
&lt;x5/&gt;isunix&lt;x6/&gt;, &lt;x7/&gt;islinux&lt;x8/&gt;, &lt;x9/&gt;isapple&lt;x10/&gt;, &lt;x11/&gt;isbsd&lt;x12/&gt;, and &lt;x13/&gt;iswindows&lt;x14/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224828Z" creationid="hsugawa8651" creationdate="20181109T224828Z">
        <seg>&lt;x3/&gt;Sys&lt;x4/&gt;モジュールには、以下のような機能がいくつか用意されています。 &lt;x5/&gt;イシュニク&lt;x6/&gt;、&lt;x7/&gt;アリヌス&lt;x8/&gt;、&lt;x9/&gt;イサプリ&lt;x10/&gt;、&lt;x11/&gt;イズベスト&lt;x12/&gt;、&lt;x13/&gt;イスウィンドウズ&lt;x14/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two Julia constructs
that accomplish this: &lt;x1/&gt;begin&lt;x2/&gt; blocks and &lt;x3/&gt;(;)&lt;x4/&gt; chains.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225757Z" creationid="hsugawa8651" creationdate="20181109T225757Z">
        <seg>ジュリアの構成が2あります これは、&lt;x1/&gt;が&lt;x2/&gt;ブロックと&lt;x3/&gt;(;)&lt;x4/&gt;鎖を形成することを意味します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are two constructs for repeated evaluation of expressions: the &lt;x1/&gt;while&lt;x2/&gt; loop and the &lt;x3/&gt;for&lt;x4/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230950Z" creationid="hsugawa8651" creationdate="20181109T230950Z">
        <seg>反復評価には2つの構成があります。&lt;x1/&gt;while&lt;x2/&gt;loop and the&lt;x3/&gt;for&lt;x4/&gt;&lt;x4/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There are various ways to run Julia code and provide options, similar to those available for the
&lt;x1/&gt;perl&lt;x2/&gt; and &lt;x3/&gt;ruby&lt;x4/&gt; programs:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224520Z" creationid="hsugawa8651" creationdate="20181109T224520Z">
        <seg>Juliaコードを実行するにはさまざまな方法があり、次のようなオプションを提供することができます。 &lt;x1/&gt;perl&lt;x2/&gt;および&lt;x3/&gt;ruby&lt;x4/&gt;プログラム:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>There is a second, more terse syntax for defining a function in Julia.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025503Z" creationid="hsugawa8651" creationdate="20181110T025503Z">
        <seg>Juliaで関数を定義するには、2番目のより簡潔な構文があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These are
normal functions, which happen to support infix operator syntax, but always evaluate their arguments:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230459Z" creationid="hsugawa8651" creationdate="20181109T230459Z">
        <seg>これらは 通常の関数は、インフィックス演算子の構文をサポートしていますが、常にその引数を評価します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These map
directly onto numeric types and operations that are natively supported on modern computers, thus
allowing Julia to take full advantage of computational resources.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225049Z" creationid="hsugawa8651" creationdate="20181109T225049Z">
        <seg>これらのマップ 現代のコンピューターでネイティブにサポートされている数値型や操作に直接 ジュリアが計算資源を最大限に活用できるようにすることです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These may be used as follows:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224831Z" creationid="hsugawa8651" creationdate="20181109T224831Z">
        <seg>これらは次のように使用できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>These operations
generally work correctly as a fallback for any specific array implementation.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160310Z" creationid="hsugawa8651" creationdate="20181109T160310Z">
        <seg>これらの操作 一般的には、特定のアレイ実装のフォールバックとして正しく動作します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They can be used similarly to &lt;x2/&gt;Array{Bool}&lt;x3/&gt; arrays (which store one byte per boolean value),
and can be converted to/from the latter via &lt;x4/&gt;Array(bitarray)&lt;x5/&gt; and &lt;x6/&gt;BitArray(array)&lt;x7/&gt;, respectively.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160451Z" creationid="hsugawa8651" creationdate="20181109T160451Z">
        <seg>これらは、&lt;x2/&gt;Array{Bool}&lt;x3/&gt;配列(ブール値ごとに1バイトを格納する)と同様に使用できます。 また、&lt;x4/&gt;アレイ(bitarray)&lt;x5/&gt;および&lt;x6/&gt;BitArray(配列)&lt;x7/&gt;を介して、後者との間で変換を行うことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They produce an unsigned integer of the same size as the unsigned literal
would do, with the two's complement of the value:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225518Z" creationid="hsugawa8651" creationdate="20181109T225518Z">
        <seg>これらは符号なしのリテラルと同じサイズの符号なし整数を生成します。 2年代の価値を補完することができます</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>They represent a collection
of scalar indices that each span &lt;x3/&gt;N&lt;x4/&gt; dimensions, enabling a form of indexing
that is sometimes referred to as pointwise indexing.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155651Z" creationid="hsugawa8651" creationdate="20181109T155651Z">
        <seg>コレクションを表します。 各スパン&lt;x3/&gt;N&lt;x4/&gt;の各次元を使用可能にするスカラー指数のことで、索引の形式が可能になります。 ポイントワイズインデックスと呼ばれることもあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This
is because &lt;x5/&gt;(Cstring)&lt;x6/&gt; is just the expression &lt;x7/&gt;Cstring&lt;x8/&gt; surrounded by parentheses, rather than
a 1-tuple containing &lt;x9/&gt;Cstring&lt;x10/&gt;:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224100Z" creationid="hsugawa8651" creationdate="20181109T224100Z">
        <seg>これ &lt;x5/&gt;(Cstring)&lt;x6/&gt;は、&lt;x7/&gt;Cstring&lt;x8/&gt;で囲まれた括弧で囲まれた表現であり &lt;x9/&gt;Cstring&lt;x10/&gt;:を含む1組のタプル</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This
will construct a 1-d array with element type &lt;x3/&gt;T&lt;x4/&gt;, initialized to contain elements &lt;x5/&gt;A&lt;x6/&gt;, &lt;x7/&gt;B&lt;x8/&gt;, &lt;x9/&gt;C&lt;x10/&gt;,
etc.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154702Z" creationid="hsugawa8651" creationdate="20181109T154702Z">
        <seg>これ 要素タイプ&lt;x3/&gt;T&lt;x4/&gt;を持つ1dアレイを構築し、要素&lt;x5/&gt;A&lt;x6/&gt;、&lt;x7/&gt;B&lt;x8/&gt;、&lt;x9/&gt;C&lt;x10/&gt;を含むように初期化します。 その他。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This applies not only to
arrays and other mutable objects which are normally heap-allocated, but also to
scalar values such as integers and floats which are normally stack-allocated and
commonly passed in registers when using C or Julia calling conventions.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223829Z" creationid="hsugawa8651" creationdate="20181109T223829Z">
        <seg>これは 通常はヒープ割り当てされた配列やその他のmutableオブジェクトですが 通常スタック割り当てされた整数や浮動小数点のようなスカラー値 一般的には、CまたはJuliaの呼び出し規約を使用するときにレジスタで渡されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This argument will be evaluated at compile-time, when the containing method is defined.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223844Z" creationid="hsugawa8651" creationdate="20181109T223844Z">
        <seg>この引数は、containingメソッドが定義された時にコンパイル時に評価されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This behavior is based on the observation that when one uses unsigned hex literals for integer
values, one typically is using them to represent a fixed numeric byte sequence, rather than just
an integer value.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225343Z" creationid="hsugawa8651" creationdate="20181109T225343Z">
        <seg>この動作は、整数に対して符号なしの16進数のリテラルを使用する場合の観察結果に基づいています。 値は通常、固定された数値バイトシーケンスを表すために使用されます。 整数値。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This behavior is frequently used in Julia to form an alternative to very short &lt;x1/&gt;if&lt;x2/&gt; statements.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230359Z" creationid="hsugawa8651" creationdate="20181109T230359Z">
        <seg>この動作は、&lt;x2/&gt;ステートメントの場合、非常に短い&lt;x1/&gt;の代替を形成するために、Juliaで頻繁に使用されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This could be written more concisely using the ternary operator.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230116Z" creationid="hsugawa8651" creationdate="20181109T230116Z">
        <seg>これは、三元演算子を使用してより簡潔に書くことができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This does not occur when Julia code is run in other ways.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225348Z" creationid="hsugawa8651" creationdate="20181109T225348Z">
        <seg>これは、Juliaコードが他の方法で実行されている場合には発生しません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This error indicates that the conditional was of the wrong type: &lt;x1/&gt;`Int64`&lt;x2/&gt; rather
than the required &lt;x3/&gt;`Bool`&lt;x4/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230041Z" creationid="hsugawa8651" creationdate="20181109T230041Z">
        <seg>このエラーは、条件が間違ったタイプであることを示しています:&lt;x1/&gt;`Int64`&lt;x2/&gt;。 必要な&lt;x3/&gt;`Bool'&lt;x4/&gt;よりも多くなります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This form can be used to call C library
functions, functions in the Julia runtime, or functions in an application linked to Julia.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223802Z" creationid="hsugawa8651" creationdate="20181109T223802Z">
        <seg>このフォームを使用してCライブラリを呼び出すことができます。 関数、Juliaランタイム内の関数、またはJuliaにリンクされたアプリケーションの関数です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes
&lt;x6/&gt;`Colon`&lt;x7/&gt; (&lt;x8/&gt;:&lt;x9/&gt;) to select all indices within the entire dimension,
ranges of the form &lt;x10/&gt;a:c&lt;x11/&gt; or &lt;x12/&gt;a:b:c&lt;x13/&gt; to select contiguous or strided
subsections, and arrays of booleans to select elements at their &lt;x14/&gt;true&lt;x15/&gt; indices.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155120Z" creationid="hsugawa8651" creationdate="20181109T155120Z">
        <seg>これには &lt;x6/&gt;「コロン」&lt;x7/&gt;(&lt;x8/&gt;:&lt;x9/&gt;)は、次元全体のすべてのインデックスを選択するために使用されます。 &lt;x10/&gt;a:c&lt;x11/&gt;または&lt;x12/&gt;a:b:c&lt;x13/&gt;to select連続またはストライドされたものを選択するための範囲 サブセクションは、&lt;x14/&gt;真の&lt;x15/&gt;インデックスで選択要素を選択するためのブール演算の配列です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This includes:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155518Z" creationid="hsugawa8651" creationdate="20181109T155518Z">
        <seg>これには次のものが含まれます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is a powerful construct: both exception handling and
cooperative multitasking are implemented in Julia using tasks.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225749Z" creationid="hsugawa8651" creationdate="20181109T225749Z">
        <seg>これは強力な構成であり、例外処理とも呼ばれます。 タスクを使用して、Juliaで協調的マルチタスクを実装します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is accomplished just by making an appropriate call with
&lt;x1/&gt;`ccall`&lt;x2/&gt; syntax, which looks like an ordinary function call.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160544Z" creationid="hsugawa8651" creationdate="20181109T160544Z">
        <seg>これは、適切な呼び出しを行うことによって実現されます。 &lt;x1/&gt;`ccall'&lt;x2/&gt;構文は、通常の関数呼び出しのように見えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is because argument parsing in shebang
is platform-dependent and not well-specified.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024923Z" creationid="hsugawa8651" creationdate="20181110T024923Z">
        <seg>これは、シェバンの引数の構文解析が はプラットフォーム依存であり、よく指定されていません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the list of reserved keywords in Julia:
&lt;x1/&gt;baremodule&lt;x2/&gt;, &lt;x3/&gt;begin&lt;x4/&gt;, &lt;x5/&gt;break&lt;x6/&gt;, &lt;x7/&gt;catch&lt;x8/&gt;, &lt;x9/&gt;const&lt;x10/&gt;, &lt;x11/&gt;continue&lt;x12/&gt;, &lt;x13/&gt;do&lt;x14/&gt;,
&lt;x15/&gt;else&lt;x16/&gt;, &lt;x17/&gt;elseif&lt;x18/&gt;, &lt;x19/&gt;end&lt;x20/&gt;, &lt;x21/&gt;export&lt;x22/&gt;, &lt;x23/&gt;false&lt;x24/&gt;, &lt;x25/&gt;finally&lt;x26/&gt;, &lt;x27/&gt;for&lt;x28/&gt;, &lt;x29/&gt;function&lt;x30/&gt;,
&lt;x31/&gt;global&lt;x32/&gt;, &lt;x33/&gt;if&lt;x34/&gt;, &lt;x35/&gt;import&lt;x36/&gt;, &lt;x37/&gt;let&lt;x38/&gt;, &lt;x39/&gt;local&lt;x40/&gt;, &lt;x41/&gt;macro&lt;x42/&gt;, &lt;x43/&gt;module&lt;x44/&gt;, &lt;x45/&gt;quote&lt;x46/&gt;,
&lt;x47/&gt;return&lt;x48/&gt;, &lt;x49/&gt;struct&lt;x50/&gt;, &lt;x51/&gt;true&lt;x52/&gt;, &lt;x53/&gt;try&lt;x54/&gt;, &lt;x55/&gt;using&lt;x56/&gt;, &lt;x57/&gt;while&lt;x58/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041738Z" creationid="hsugawa8651" creationdate="20181110T041738Z">
        <seg>This is the list of reserved keywords in Julia:
&lt;x1/&gt;baremodule&lt;x2/&gt;, &lt;x3/&gt;begin&lt;x4/&gt;, &lt;x5/&gt;break&lt;x6/&gt;, &lt;x7/&gt;catch&lt;x8/&gt;, &lt;x9/&gt;const&lt;x10/&gt;, &lt;x11/&gt;continue&lt;x12/&gt;, &lt;x13/&gt;do&lt;x14/&gt;,
&lt;x15/&gt;else&lt;x16/&gt;, &lt;x17/&gt;elseif&lt;x18/&gt;, &lt;x19/&gt;end&lt;x20/&gt;, &lt;x21/&gt;export&lt;x22/&gt;, &lt;x23/&gt;false&lt;x24/&gt;, &lt;x25/&gt;finally&lt;x26/&gt;, &lt;x27/&gt;for&lt;x28/&gt;, &lt;x29/&gt;function&lt;x30/&gt;,
&lt;x31/&gt;global&lt;x32/&gt;, &lt;x33/&gt;if&lt;x34/&gt;, &lt;x35/&gt;import&lt;x36/&gt;, &lt;x37/&gt;let&lt;x38/&gt;, &lt;x39/&gt;local&lt;x40/&gt;, &lt;x41/&gt;macro&lt;x42/&gt;, &lt;x43/&gt;module&lt;x44/&gt;, &lt;x45/&gt;quote&lt;x46/&gt;,
&lt;x47/&gt;return&lt;x48/&gt;, &lt;x49/&gt;struct&lt;x50/&gt;, &lt;x51/&gt;true&lt;x52/&gt;, &lt;x53/&gt;try&lt;x54/&gt;, &lt;x55/&gt;using&lt;x56/&gt;, &lt;x57/&gt;while&lt;x58/&gt;.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This is the same behavior found in Scheme, most Lisps,
Python, Ruby and Perl, among other dynamic languages.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025715Z" creationid="hsugawa8651" creationdate="20181110T025715Z">
        <seg>これはSchemeで見られる動作と同じです。ほとんどのLispです。 Python、Ruby、Perlは、その他の動的言語の中でもとりわけ優れています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that
&lt;x1/&gt;@cfunction&lt;x2/&gt;-generated pointers cannot be used in calls where WINAPI expects &lt;x3/&gt;stdcall&lt;x4/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153957Z" creationid="hsugawa8651" creationdate="20181109T153957Z">
        <seg>つまり &lt;x1/&gt;@cfunction&lt;x2/&gt;-生成されたポインタは、WINAPIが&lt;x3/&gt;stdcall&lt;x4/&gt;を想定している呼び出しでは使用できません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This means that new variables
defined inside the &lt;x2/&gt;if&lt;x3/&gt; clauses can be used after the &lt;x4/&gt;if&lt;x5/&gt; block, even if they weren't defined
before.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225918Z" creationid="hsugawa8651" creationdate="20181109T225918Z">
        <seg>つまり、新しい変数は &lt;x4/&gt;の場合は&lt;x/&gt;の範囲内で、&lt;x4/&gt;の場合は&lt;x4/&gt;の範囲内で定義されていても、定義されていない場合でも定義されます。 の前にあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This object can be iterated to produce values on demand, instead of allocating
an array and storing them in advance (see &lt;x1/&gt;Iteration&lt;x2/&gt;).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154927Z" creationid="hsugawa8651" creationdate="20181109T154927Z">
        <seg>このオブジェクトを反復して、必要に応じて必要に応じて値を生成することができます。 配列とそれを事前に格納する(&lt;x1/&gt;Iteration&lt;x2/&gt;を参照)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This syntax is particularly useful with the terse single-line function definition form introduced
in &lt;x1/&gt;Functions&lt;x2/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225818Z" creationid="hsugawa8651" creationdate="20181109T225818Z">
        <seg>この構文は、簡潔な単一行関数定義フォームが導入された場合に特に有用です。 &lt;x1/&gt;の関数&lt;x2/&gt;である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This use of &lt;x3/&gt;...&lt;x4/&gt; for combining many different arguments into a single
argument is called slurping:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025239Z" creationid="hsugawa8651" creationdate="20181110T025239Z">
        <seg>&lt;x3/&gt;.&lt;x4/&gt;を使用して、さまざまな引数を一つに組み合わせて使用します。 引数はsluffingと呼ばれます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This value is simply the return value of the last executed statement in the branch that was chosen,
so</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230023Z" creationid="hsugawa8651" creationdate="20181109T230023Z">
        <seg>この値は、選択された分岐内の最後に実行された文の戻り値です。 だから</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>This wrapper throws an exception clearly indicating the problem if the caller tries to get a non-existent
environment variable:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224133Z" creationid="hsugawa8651" creationdate="20181109T224133Z">
        <seg>このラッパーは、呼び出し者が存在しないことを示す問題を明確に示す例外をスローします。 環境変数:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Those keywords are not allowed to be used as variable names.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041751Z" creationid="hsugawa8651" creationdate="20181110T041742Z">
        <seg>これらのキーワードは、変数名として使用することはできません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Though most code can be written in Julia, there are many high-quality, mature libraries for numerical
computing already written in C and Fortran.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160533Z" creationid="hsugawa8651" creationdate="20181109T160533Z">
        <seg>ほとんどのコードはJuliaで書くことができますが、多くの場合、高品質で成熟したライブラリがあります。 CとFortranではすでに作成されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To allow easy use of this existing code, Julia makes
it simple and efficient to call C and Fortran functions.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160536Z" creationid="hsugawa8651" creationdate="20181109T160536Z">
        <seg>この既存のコードを簡単に利用できるようにするために、Juliaは CとFortranの関数を呼び出すことは簡単で効率的です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To enable convenient vectorization of mathematical and other operations,
Julia &lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;(@ref man-vectorized) &lt;x4/&gt;f.(args...)&lt;x5/&gt;, e.g. &lt;x6/&gt;sin.(x)&lt;x7/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155933Z" creationid="hsugawa8651" creationdate="20181109T155933Z">
        <seg>数学的およびその他の操作を便利にベクトル化することを可能にするために Julia&lt;x1/&gt;&lt;x2/&gt;&lt;x3/&gt;(@ref man vectorized)&lt;x4/&gt;f.(args.…)&lt;x6/&gt;sin.(x)&lt;x7/&gt;sin.(x)&lt;x7/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To exit the interactive session, type &lt;x1/&gt;CTRL-D&lt;x2/&gt; (press the Control/&lt;x3/&gt;^&lt;x4/&gt; key together with the &lt;x5/&gt;d&lt;x6/&gt; key), or type
&lt;x7/&gt;exit()&lt;x8/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224304Z" creationid="hsugawa8651" creationdate="20181109T224304Z">
        <seg>対話型セッションを終了するには、&lt;x1/&gt;CTRL-D&lt;x2/&gt;(Ctrl+&gt;d&lt;x6/&gt;キーとともにControl/&lt;x/&gt;キーを押します)を入力するか、または入力します。 &lt;x7/&gt;exit()&lt;x8/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To explicitly specify types
use the syntax &lt;x4/&gt;Dict{KeyType,ValueType}(...)&lt;x5/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041745Z" creationid="hsugawa8651" creationdate="20181112T041745Z">
        <seg>タイプを明示的に指定するには 構文&lt;x4/&gt;Dict{KeyType,ValueType}(...)&lt;x5/&gt;を使用します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To facilitate chaining, the operator associates from right to left.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230200Z" creationid="hsugawa8651" creationdate="20181109T230200Z">
        <seg>連鎖を容易にするために、オペレータは右から左へと関連する。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run a certain code before terminating a Julia script,
which may or may not be caused by CTRL-C, use &lt;x5/&gt;`atexit`&lt;x6/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024910Z" creationid="hsugawa8651" creationdate="20181110T024910Z">
        <seg>Juliaスクリプトを終了する前に特定のコードを実行するには、次の手順を実行します。 これは、CTRL-Cによって引き起こされることもないこともあれば、引き起こされることもないことがあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To run code in a file non-interactively, you can give it as the first argument to the &lt;x1/&gt;julia&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224323Z" creationid="hsugawa8651" creationdate="20181109T224323Z">
        <seg>非対話的にファイル内でコードを実行するには、&lt;x1/&gt;july&lt;x2/&gt;の最初の引数として指定できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To see the various ways we can pass dimensions to these constructors, consider the following examples:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154524Z" creationid="hsugawa8651" creationdate="20181109T154524Z">
        <seg>これらのコンストラクタに次元を渡すことができるさまざまな方法を確認するには、次の例を考慮してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>To use module functions, use &lt;x1/&gt;import Module&lt;x2/&gt; to import the module, and &lt;x3/&gt;Module.fn(x)&lt;x4/&gt; to use the
functions.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041713Z" creationid="hsugawa8651" creationdate="20181110T041659Z">
        <seg>モジュール関数を使用するには、&lt;x1/&gt;インポートモジュール&lt;x2/&gt;を使用してモジュールをインポートし、&lt;x3/&gt;モジュール.fn(x)&lt;x4/&gt;を使用して 関数。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Tuple&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041603Z" creationid="hsugawa8651" creationdate="20181112T041603Z">
        <seg>Tuple&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Type relations</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041840Z" creationid="hsugawa8651" creationdate="20181110T041840Z">
        <seg>Type relations</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unlike C, MATLAB, Perl, Python, and Ruby -- but like Java, and a few other stricter, typed languages
-- it is an error if the value of a conditional expression is anything but &lt;x1/&gt;true&lt;x2/&gt; or &lt;x3/&gt;false&lt;x4/&gt;:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230035Z" creationid="hsugawa8651" creationdate="20181109T230035Z">
        <seg>Cとは異なり、MATLAB、Perl、Python、Rubyなどですが、Javaと同様に、さらに厳密なタイプの言語もあります。 --条件式の値が&lt;x1/&gt;真&lt;x2/&gt;または&lt;x3/&gt;false&lt;x4/&gt;以外の値である場合はエラーになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Unsigned integers are input and output using the &lt;x1/&gt;0x&lt;x2/&gt; prefix and hexadecimal (base 16) digits
&lt;x3/&gt;0-9a-f&lt;x4/&gt; (the capitalized digits &lt;x5/&gt;A-F&lt;x6/&gt; also work for input).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225306Z" creationid="hsugawa8651" creationdate="20181109T225306Z">
        <seg>符号なし整数は、&lt;x1/&gt;0x&lt;x2/&gt;プレフィックスおよび16進数(base16)桁を使用して入力および出力されます。 &lt;x3/&gt;0 9a f&lt;x4/&gt;(大文字の数字&lt;x5/&gt;A-F&lt;x6/&gt;も入力に有効です)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use dot operators like &lt;x3/&gt;.==&lt;x4/&gt; for elementwise comparisons.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160015Z" creationid="hsugawa8651" creationdate="20181109T160015Z">
        <seg>&lt;x3/&gt;.==&lt;x4/&gt;のようなドット演算子を、要素的比較のために使用します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Use native code from system image if available</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224652Z" creationid="hsugawa8651" creationdate="20181109T224652Z">
        <seg>使用可能な場合は、システムイメージからネイティブコードを使用します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Using a non-boolean value anywhere except
for the last entry in a conditional chain is an error:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230812Z" creationid="hsugawa8651" creationdate="20181109T230812Z">
        <seg>非ブール値を使用する場合は 条件付きチェーンの最後のエントリはエラーになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Values can be specified as any iterable object, but
will commonly be ranges like &lt;x7/&gt;1:n&lt;x8/&gt; or &lt;x9/&gt;2:(n-1)&lt;x10/&gt;, or explicit arrays of values like &lt;x11/&gt;[1.2, 3.4, 5.7]&lt;x12/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154811Z" creationid="hsugawa8651" creationdate="20181109T154811Z">
        <seg>値は、任意のオブジェクトとして指定することができますが は一般的に&lt;x7/&gt;1:n&lt;x8/&gt;または&lt;x9/&gt;2:(n-1)&lt;x10/&gt;、または&lt;x11/&gt;[1.2、3.4、5.7]&lt;x12/&gt;のような明示的な値の配列である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Values which cannot be stored in &lt;x5/&gt;UInt128&lt;x6/&gt; cannot be written as such literals.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225510Z" creationid="hsugawa8651" creationdate="20181109T225510Z">
        <seg>&lt;x5/&gt;UInt128&lt;x6/&gt;に格納できない値は、そのようなリテラルとは書くことができません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Vectors and multidimensional arrays of integers</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155522Z" creationid="hsugawa8651" creationdate="20181109T155522Z">
        <seg>整数のベクトルおよび多次元配列</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Very few operations are implemented specifically for &lt;x15/&gt;Array&lt;x16/&gt; beyond those that are required
for all &lt;x17/&gt;AbstractArray&lt;x18/&gt;s; much of the array library is implemented in a generic
manner that allows all custom arrays to behave similarly.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160424Z" creationid="hsugawa8651" creationdate="20181109T160424Z">
        <seg>&lt;x15/&gt;アレイ&lt;x16/&gt;に対しては、必要な動作を超えて実装されているオペレーションはほとんどありません。 すべての&lt;x17/&gt;AbstractArray&lt;x18/&gt;;アレイライブラリの多くは一般的に実装されています。 すべてのカスタム・アレイが同じように動作するようにする方法です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When a file is run as the main script using &lt;x1/&gt;julia file.jl&lt;x2/&gt; one might want to activate extra
functionality like command line argument handling.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024843Z" creationid="hsugawa8651" creationdate="20181110T024843Z">
        <seg>&lt;x1/&gt;juliaファイルを使用して、ファイルがメイン・スクリプトとして実行される場合、&lt;x1/&gt;juliaファイル.jl&lt;x2/&gt;を使用して追加のファイルをアクティブ化する必要があります コマンドライン引数の処理などの機能です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When both
libraries and executables are generated by LLVM, it is possible to perform whole-program optimizations
that can even optimize across this boundary, but Julia does not yet support that.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160558Z" creationid="hsugawa8651" creationdate="20181109T160558Z">
        <seg>両方 ライブラリと実行可能ファイルはLLVMによって生成されるため、プログラム全体の最適化を実行することができます。 この境界にわたって最適化することもできますが、ジュリアはまだサポートしていません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When chaining conditionals (including &lt;x1/&gt;if&lt;x2/&gt;/&lt;x3/&gt;elseif&lt;x4/&gt;/&lt;x5/&gt;end&lt;x6/&gt;), the &lt;x7/&gt;@static&lt;x8/&gt; must be repeated for
each level (parentheses optional, but recommended for readability):</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225006Z" creationid="hsugawa8651" creationdate="20181109T225006Z">
        <seg>&lt;x2/&gt;/&lt;x3/&gt;&lt;x6/&gt;/&lt;x5/&gt;の場合は、&lt;x7/&gt;@static&lt;x8/&gt;を繰り返す必要があります。&lt;x x/&gt;&lt;x8/&gt;&lt;x8/&gt;&lt;x6/&gt;&lt;x8/&gt;は 各レベル(オプションではありますが、読みやすさには推奨されます):</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When combined with other indexing forms and iterators
that yield &lt;x3/&gt;CartesianIndex&lt;x4/&gt;es, however, this can produce very elegant
and efficient code.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155632Z" creationid="hsugawa8651" creationdate="20181109T155632Z">
        <seg>他のインデックス作成フォームおよびイテレータと組み合わされた場合 しかし、それは&lt;x3/&gt;CartesianIndex&lt;x4/&gt;の収量をもたらすが、これは非常にエレガントなものである。 効率的なコードです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When run in interactive mode, &lt;x9/&gt;julia&lt;x10/&gt; displays a banner and prompts the user for input.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224306Z" creationid="hsugawa8651" creationdate="20181109T224306Z">
        <seg>対話モードで実行すると、&lt;x9/&gt;julia&lt;x10/&gt;はバナーを表示し、入力を求めるプロンプトを表示します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When writing a generator expression with multiple dimensions inside an argument list, parentheses
are needed to separate the generator from subsequent arguments:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154940Z" creationid="hsugawa8651" creationdate="20181109T154940Z">
        <seg>引数リスト内に複数の次元を持つジェネレータ式を記述する場合は、括弧を使用します。 ジェネレータを次の引数から分離する必要があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>When writing cross-platform applications or libraries, it is often necessary to allow for
differences between operating systems.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224823Z" creationid="hsugawa8651" creationdate="20181109T224823Z">
        <seg>クロスプラットフォームアプリケーションやライブラリを記述する場合は、次のようなことがよくあります。 オペレーティング・システム間の違い。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>While this can be inconvenient when you are developing new code, there's an excellent workaround.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024734Z" creationid="hsugawa8651" creationdate="20181110T024734Z">
        <seg>これは、新しいコードを開発する際に不便な場合がありますが、優れた回避策があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>Without parentheses, the expression &lt;x1/&gt;f&lt;x2/&gt; refers to the function object, and can be passed around
like any value:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025632Z" creationid="hsugawa8651" creationdate="20181110T025632Z">
        <seg>括弧なしでは、式&lt;x1/&gt;f&lt;x2/&gt;は関数オブジェクトを参照しており、この関数オブジェクトを渡すことができます。 どの値でも</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>X = getindex(A, I_1, I_2, ..., I_n)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155300Z" creationid="hsugawa8651" creationdate="20181109T155300Z">
        <seg>X = getindex(A, I_1, I_2, ..., I_n)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>X = sin(cos(Y)) &lt;x2/&gt; equivalent to X .= sin.(cos.(Y))
4-element Array{Float64,1}:
  0.5143952585235492
 -0.4042391538522658
 -0.8360218615377305
 -0.6080830096407656</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030245Z" creationid="hsugawa8651" creationdate="20181110T030245Z">
        <seg>X = sin(cos(Y)) &lt;x2/&gt; equivalent to X .= sin.(cos.(Y))
4-element Array{Float64,1}:
  0.5143952585235492
 -0.4042391538522658
 -0.8360218615377305
 -0.6080830096407656</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can easily experiment in the same way with the associativity and precedence of various combinations
of &lt;x1/&gt;&amp;&amp;&lt;x2/&gt; and &lt;x3/&gt;||&lt;x4/&gt; operators.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230405Z" creationid="hsugawa8651" creationdate="20181109T230405Z">
        <seg>さまざまな組み合わせのアソシエティビティと優先順位によって、同じ方法で簡単に実験することができます。 &lt;x1/&gt;&amp;&amp;&lt;x2/&gt;および&lt;x3/&gt;&lt;x4/&gt;演算子のことです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You can't import the type names into &lt;x1/&gt;Main&lt;x2/&gt; and then expect
to be able to redefine them there, but you can use the module name to resolve the scope.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024742Z" creationid="hsugawa8651" creationdate="20181110T024742Z">
        <seg>&lt;x1/&gt;メイン&lt;x2/&gt;にはタイプ名をインポートできないので、次のように入力することはできません。 で再定義することができますが、このモジュール名を使用してスコープを解決することができます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You refer to the
&lt;x5/&gt;Foo&lt;x6/&gt; symbols by their qualified names &lt;x7/&gt;Foo.bar&lt;x8/&gt; etc.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025154Z" creationid="hsugawa8651" creationdate="20181110T025154Z">
        <seg>ここでは &lt;x5/&gt;Foo&lt;x6/&gt;記号は、それらの修飾名&lt;x7/&gt;Foo.bar&lt;x8/&gt;などで表されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>You'll either need a new interactive session instance or a different variable
name to test this:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T231201Z" creationid="hsugawa8651" creationdate="20181109T231201Z">
        <seg>新しい対話型セッション・インスタンスまたは別の変数が必要です。 テストする名前:</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[A B C ...]&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025839Z" creationid="hsugawa8651" creationdate="20181110T025839Z">
        <seg>[A B C ...]&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[A B; C D; ...]&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025852Z" creationid="hsugawa8651" creationdate="20181110T025852Z">
        <seg>[A B; C D; ...]&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>[A; B; C; ...]&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025846Z" creationid="hsugawa8651" creationdate="20181110T025846Z">
        <seg>[A; B; C; ...]&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`AbstractArray`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041605Z" creationid="hsugawa8651" creationdate="20181112T041605Z">
        <seg>`AbstractArray`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`AbstractRange`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041600Z" creationid="hsugawa8651" creationdate="20181112T041600Z">
        <seg>`AbstractRange`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`Array`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041650Z" creationid="hsugawa8651" creationdate="20181112T041650Z">
        <seg>`Array`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`BitArray`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041651Z" creationid="hsugawa8651" creationdate="20181112T041651Z">
        <seg>`BitArray`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`BitArray`&lt;x1/&gt;s are space-efficient "packed" boolean arrays, which store one bit per boolean value.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160448Z" creationid="hsugawa8651" creationdate="20181109T160448Z">
        <seg>「BitArray」&lt;x1/&gt;は、ブール値ごとに1ビットを格納するスペース効率の高い「パックされた」ブール演算配列です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`BitSet`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041606Z" creationid="hsugawa8651" creationdate="20181112T041606Z">
        <seg>`BitSet`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`CartesianIndex{N}`&lt;x1/&gt;s, which behave like an &lt;x2/&gt;N&lt;x3/&gt;-tuple of integers spanning multiple dimensions (see below for more details)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155514Z" creationid="hsugawa8651" creationdate="20181109T155514Z">
        <seg>「CartesianIndex{N}」&lt;x1/&gt;は、複数の次元を超える整数の&lt;x2/&gt;N&lt;x3/&gt;のように動作します(詳細については以下を参照)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`Colon()`&lt;x1/&gt; (&lt;x2/&gt;:&lt;x3/&gt;), which represents all indices within an entire dimension or across the entire array</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155540Z" creationid="hsugawa8651" creationdate="20181109T155540Z">
        <seg>「コロン()」&lt;x1/&gt;(&lt;x2/&gt;:&lt;x3/&gt;)は、全次元または配列全体にわたってすべてのインデックスを表します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`Dict`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041609Z" creationid="hsugawa8651" creationdate="20181112T041609Z">
        <seg>`Dict`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`Dict`&lt;x1/&gt; is the standard dictionary.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041718Z" creationid="hsugawa8651" creationdate="20181112T041718Z">
        <seg>「Dict」&lt;x1/&gt;は標準辞書です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`Dict`&lt;x1/&gt;s can be created by passing pair objects constructed with &lt;x2/&gt;=&gt;&lt;x3/&gt; to a &lt;x4/&gt;`Dict`&lt;x5/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041731Z" creationid="hsugawa8651" creationdate="20181112T041731Z">
        <seg>「Dict」&lt;x1/&gt;は、&lt;x2/&gt;=&gt;&lt;x3/&gt;で構成されたペアオブジェクトを、&lt;x4/&gt;'Dict'&lt;x5/&gt;に渡すことで作成できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`IdDict`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041608Z" creationid="hsugawa8651" creationdate="20181112T041608Z">
        <seg>`IdDict`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`IdDict`&lt;x1/&gt; is a special hash table where the keys are always object identities.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041725Z" creationid="hsugawa8651" creationdate="20181112T041725Z">
        <seg>「IdDict」&lt;x1/&gt;は、鍵が常にオブジェクト識別子である特殊なハッシュ表です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`Iterators.Pairs`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041819Z" creationid="hsugawa8651" creationdate="20181112T041819Z">
        <seg>`Iterators.Pairs`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`NamedTuple`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041616Z" creationid="hsugawa8651" creationdate="20181112T041616Z">
        <seg>`NamedTuple`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`Pair`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041615Z" creationid="hsugawa8651" creationdate="20181112T041615Z">
        <seg>`Pair`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`Set`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041614Z" creationid="hsugawa8651" creationdate="20181112T041614Z">
        <seg>`Set`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`UnitRange`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041602Z" creationid="hsugawa8651" creationdate="20181112T041602Z">
        <seg>`UnitRange`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`WeakKeyDict`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041610Z" creationid="hsugawa8651" creationdate="20181112T041610Z">
        <seg>`WeakKeyDict`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`adjoint`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025903Z" creationid="hsugawa8651" creationdate="20181110T025903Z">
        <seg>`adjoint`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`axes(A)`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153250Z" creationid="hsugawa8651" creationdate="20181109T153250Z">
        <seg>`axes(A)`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`axes(A,n)`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153255Z" creationid="hsugawa8651" creationdate="20181109T153255Z">
        <seg>`axes(A,n)`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`eachindex(A)`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153302Z" creationid="hsugawa8651" creationdate="20181109T153302Z">
        <seg>`eachindex(A)`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`getindex`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025910Z" creationid="hsugawa8651" creationdate="20181110T025910Z">
        <seg>`getindex`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`hcat`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025842Z" creationid="hsugawa8651" creationdate="20181110T025842Z">
        <seg>`hcat`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`hvcat`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025855Z" creationid="hsugawa8651" creationdate="20181110T025855Z">
        <seg>`hvcat`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`hvcat`&lt;x1/&gt; concatenates in both dimension 1 (with semicolons) and dimension 2 (with spaces).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154644Z" creationid="hsugawa8651" creationdate="20181109T154644Z">
        <seg>「ホフカト」&lt;x1/&gt;は、次元1(セミコロン)と次元2(スペースを含む)の両方で連結されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`isequal`&lt;x1/&gt; to determine equality.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181112T041722Z" creationid="hsugawa8651" creationdate="20181112T041722Z">
        <seg>等価を決定するには、「isequal」&lt;x1/&gt;を指定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`length(A)`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153218Z" creationid="hsugawa8651" creationdate="20181109T153218Z">
        <seg>`length(A)`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`ndims(A)`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153230Z" creationid="hsugawa8651" creationdate="20181109T153230Z">
        <seg>`ndims(A)`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`setindex!`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025917Z" creationid="hsugawa8651" creationdate="20181110T025917Z">
        <seg>`setindex!`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`size(A)`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153236Z" creationid="hsugawa8651" creationdate="20181109T153236Z">
        <seg>`size(A)`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`size(A,n)`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T153242Z" creationid="hsugawa8651" creationdate="20181109T153242Z">
        <seg>`size(A,n)`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`vcat`&lt;x1/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025849Z" creationid="hsugawa8651" creationdate="20181110T025849Z">
        <seg>`vcat`&lt;x1/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>`view`&lt;x1/&gt; function, which is called the same way as
&lt;x2/&gt;`getindex`&lt;x3/&gt; (with an array and a series of index arguments).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160431Z" creationid="hsugawa8651" creationdate="20181109T160431Z">
        <seg>「view」&lt;x1/&gt;関数は、以下と同じ方法で呼び出されます。 &lt;x2/&gt;`getindex'&lt;x3/&gt;(配列と一連のインデックス引数を持つ)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a &lt;x1/&gt;BitArray&lt;x2/&gt; with all values &lt;x3/&gt;false&lt;x4/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154417Z" creationid="hsugawa8651" creationdate="20181109T154417Z">
        <seg>&lt;x1/&gt;BitArray&lt;x2/&gt;であり、すべての値は&lt;x3/&gt;false&lt;x4/&gt;である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a &lt;x1/&gt;`BitArray`&lt;x2/&gt; with all values &lt;x3/&gt;true&lt;x4/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154402Z" creationid="hsugawa8651" creationdate="20181109T154402Z">
        <seg>&lt;x1/&gt;'BitArray'&lt;x2/&gt;はすべての値が&lt;x3/&gt;真&lt;x4/&gt;である</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a function pointer (for example, from &lt;x1/&gt;dlsym&lt;x2/&gt;).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T223840Z" creationid="hsugawa8651" creationdate="20181109T223840Z">
        <seg>関数ポインタ(たとえば、&lt;x1/&gt;dlsym&lt;x2/&gt;からの関数ポインタです)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a range expressing the valid indices along dimension &lt;x1/&gt;n&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154257Z" creationid="hsugawa8651" creationdate="20181109T154257Z">
        <seg>寸法&lt;x1/&gt;n&lt;x2/&gt;に沿って有効なインデックスを表現する範囲</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a tuple containing the dimensions of &lt;x1/&gt;A&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154246Z" creationid="hsugawa8651" creationdate="20181109T154246Z">
        <seg>&lt;x1/&gt;A&lt;x2/&gt;の次元を含むタプル</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a tuple containing the valid indices of &lt;x1/&gt;A&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154254Z" creationid="hsugawa8651" creationdate="20181109T154254Z">
        <seg>&lt;x1/&gt;A&lt;x2/&gt;の有効なインデックスを含むタプル</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a tuple of the strides in each dimension</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154309Z" creationid="hsugawa8651" creationdate="20181109T154309Z">
        <seg>各次元の上昇点の集合</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>a&lt;x1/&gt; and &lt;x2/&gt;b&lt;x3/&gt;, and &lt;x4/&gt;`maximum(a)`&lt;x5/&gt;, which finds the largest value within
&lt;x6/&gt;a&lt;x7/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160031Z" creationid="hsugawa8651" creationdate="20181109T160031Z">
        <seg>&lt;x1/&gt;および&lt;x2/&gt;b&lt;x3/&gt;、&lt;x4/&gt;の最大値(a)&lt;x5/&gt;は、最も大きい値を示します。 &lt;x6/&gt;a&lt;x7/&gt;。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an &lt;x1/&gt;Array&lt;x2/&gt; of all ones</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154358Z" creationid="hsugawa8651" creationdate="20181109T154358Z">
        <seg>全ての&lt;x1/&gt;アレイ&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an &lt;x1/&gt;Array&lt;x2/&gt; of all zeros</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154354Z" creationid="hsugawa8651" creationdate="20181109T154354Z">
        <seg>すべてのゼロの&lt;x1/&gt;配列&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an &lt;x1/&gt;Array&lt;x2/&gt; with random, iid &lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt; and uniformly distributed values in the half-open interval &lt;x6/&gt;[0, 1)&lt;x7/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154449Z" creationid="hsugawa8651" creationdate="20181109T154449Z">
        <seg>&lt;x1/&gt;配列&lt;x2/&gt;で、ランダムなiid&lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;で、半オープン間隔&lt;x6/&gt;[0 1]&lt;x7/&gt;で均一に分布した値を示す。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an &lt;x1/&gt;Array&lt;x2/&gt; with random, iid and standard normally distributed values</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154452Z" creationid="hsugawa8651" creationdate="20181109T154452Z">
        <seg>ランダムなiidと標準的な正規分布の値を持つ&lt;x1/&gt;配列&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an array containing the same data as &lt;x1/&gt;A&lt;x2/&gt;, but with different dimensions</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154421Z" creationid="hsugawa8651" creationdate="20181109T154421Z">
        <seg>&lt;x1/&gt;A&lt;x2/&gt;と同じデータを含む配列であるが、異なる次元を含む配列</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an array with the same binary data as &lt;x1/&gt;A&lt;x2/&gt;, but with element type &lt;x3/&gt;T&lt;x4/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154445Z" creationid="hsugawa8651" creationdate="20181109T154445Z">
        <seg>&lt;x1/&gt;A&lt;x2/&gt;と同じバイナリデータを持つ配列であるが、要素タイプ&lt;x3/&gt;T&lt;x4/&gt;である。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an efficient iterator for visiting each position in &lt;x1/&gt;A&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154302Z" creationid="hsugawa8651" creationdate="20181109T154302Z">
        <seg>&lt;x1/&gt;A&lt;x2/&gt;の各位置を訪問するための効率的なイテレータ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an uninitialized array of the same type as &lt;x1/&gt;A&lt;x2/&gt; (dense, sparse, etc.), but with the specified element type and dimensions.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154439Z" creationid="hsugawa8651" creationdate="20181109T154439Z">
        <seg>&lt;x1/&gt;A&lt;x2/&gt;(密、疎等)と同じタイプの初期化されていない配列ですが、指定されたエレメントタイプとディメンションがあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>an uninitialized dense &lt;x1/&gt;`Array`&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154351Z" creationid="hsugawa8651" creationdate="20181109T154351Z">
        <seg>初期化されていない密な&lt;x1/&gt;`配列"&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>ccall
Core.Intrinsics.cglobal
Base.@cfunction
Base.CFunction
Base.unsafe_convert
Base.cconvert
Base.unsafe_load
Base.unsafe_store!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042025Z" creationid="hsugawa8651" creationdate="20181110T042025Z">
        <seg>ccall
Core.Intrinsics.cglobal
Base.@cfunction
Base.CFunction
Base.unsafe_convert
Base.cconvert
Base.unsafe_load
Base.unsafe_store!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>clock&lt;x1/&gt; takes no arguments and returns an &lt;x2/&gt;`Int32`&lt;x3/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224034Z" creationid="hsugawa8651" creationdate="20181109T224034Z">
        <seg>クロック&lt;x1/&gt;は引数を取らず、&lt;x2/&gt;`Int32`&lt;x3/&gt;を返します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>concatenate input arrays along dimension(s) &lt;x1/&gt;k&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154549Z" creationid="hsugawa8651" creationdate="20181109T154549Z">
        <seg>次元に沿って入力配列を連結する&lt;x1/&gt;k&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>copy &lt;x1/&gt;A&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154430Z" creationid="hsugawa8651" creationdate="20181109T154430Z">
        <seg>コピー&lt;x1/&gt;A&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>copy &lt;x1/&gt;A&lt;x2/&gt;, recursively copying its elements</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154435Z" creationid="hsugawa8651" creationdate="20181109T154435Z">
        <seg>&lt;x1/&gt;A&lt;x2/&gt;をコピーして、その要素を再帰的にコピーする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>end
end
using Bar</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025208Z" creationid="hsugawa8651" creationdate="20181110T025208Z">
        <seg>end
end
using Bar</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>equivalent to &lt;x1/&gt;--code-coverage=user&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224802Z" creationid="hsugawa8651" creationdate="20181109T224802Z">
        <seg>&lt;x1/&gt;--code coverage=user&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>equivalent to &lt;x1/&gt;--track-allocation=user&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224807Z" creationid="hsugawa8651" creationdate="20181109T224807Z">
        <seg>&lt;x1/&gt;に相当する--トラック割り当て=ユーザ&lt;x2/&gt;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>fill the array &lt;x1/&gt;A&lt;x2/&gt; with the value &lt;x3/&gt;x&lt;x4/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154507Z" creationid="hsugawa8651" creationdate="20181109T154507Z">
        <seg>&lt;x3/&gt;x&lt;x4/&gt;の値を持つ配列&lt;x1/&gt;A&lt;x2/&gt;を配列に埋め込みます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for a in A
    &lt;x1/&gt; Do something with the element a
end

for i in eachindex(A)
    &lt;x2/&gt; Do something with i and/or A[i]
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155827Z" creationid="hsugawa8651" creationdate="20181109T155827Z">
        <seg>for a in A
    &lt;x1/&gt; Do something with the element a
end

for i in eachindex(A)
    &lt;x2/&gt; Do something with i and/or A[i]
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>for i in iter   &lt;x1/&gt; or  "for i = iter"
    &lt;x2/&gt; body
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042045Z" creationid="hsugawa8651" creationdate="20181110T042045Z">
        <seg>for i in iter   &lt;x1/&gt; or  "for i = iter"
    &lt;x2/&gt; body
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function Date(y::Int64, m::Int64=1, d::Int64=1)
    err = validargs(Date, y, m, d)
    err === nothing || throw(err)
    return Date(UTD(totaldays(y, m, d)))
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030121Z" creationid="hsugawa8651" creationdate="20181110T030121Z">
        <seg>function Date(y::Int64, m::Int64=1, d::Int64=1)
    err = validargs(Date, y, m, d)
    err === nothing || throw(err)
    return Date(UTD(totaldays(y, m, d)))
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function f(;x::Int=1)
    &lt;x1/&gt;
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030145Z" creationid="hsugawa8651" creationdate="20181110T030145Z">
        <seg>function f(;x::Int=1)
    &lt;x1/&gt;
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function f(x, a=b, b=1)
    &lt;x1/&gt;
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030205Z" creationid="hsugawa8651" creationdate="20181110T030205Z">
        <seg>function f(x, a=b, b=1)
    &lt;x1/&gt;
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function f(x; y)
    &lt;x1/&gt;
end
f(3, y=5) &lt;x2/&gt; ok, y is assigned
f(3)      &lt;x3/&gt; throws UndefKeywordError(:y)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030153Z" creationid="hsugawa8651" creationdate="20181110T030153Z">
        <seg>function f(x; y)
    &lt;x1/&gt;
end
f(3, y=5) &lt;x2/&gt; ok, y is assigned
f(3)      &lt;x3/&gt; throws UndefKeywordError(:y)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function f(x; y=0, kwargs...)
    &lt;x1/&gt;
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030148Z" creationid="hsugawa8651" creationdate="20181110T030148Z">
        <seg>function f(x; y=0, kwargs...)
    &lt;x1/&gt;
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function foo(a,b)
    return a+b, a*b
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030038Z" creationid="hsugawa8651" creationdate="20181110T030038Z">
        <seg>function foo(a,b)
    return a+b, a*b
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function g(x,y)
    return x * y
    x + y
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025734Z" creationid="hsugawa8651" creationdate="20181110T025734Z">
        <seg>function g(x,y)
    return x * y
    x + y
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function getenv(var::AbstractString)
    val = ccall((:getenv, "libc"),
                Cstring, (Cstring,), var)
    if val == C_NULL
        error("getenv: undefined variable: ", var)
    end
    unsafe_string(val)
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224118Z" creationid="hsugawa8651" creationdate="20181109T224118Z">
        <seg>function getenv(var::AbstractString)
    val = ccall((:getenv, "libc"),
                Cstring, (Cstring,), var)
    if val == C_NULL
        error("getenv: undefined variable: ", var)
    end
    unsafe_string(val)
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function open(f::Function, args...)
    io = open(args...)
    try
        f(io)
    finally
        close(io)
    end
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030220Z" creationid="hsugawa8651" creationdate="20181110T030220Z">
        <seg>function open(f::Function, args...)
    io = open(args...)
    try
        f(io)
    finally
        close(io)
    end
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>function plot(x, y; style="solid", width=1, color="black")
    &lt;x1/&gt;
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030138Z" creationid="hsugawa8651" creationdate="20181110T030138Z">
        <seg>function plot(x, y; style="solid", width=1, color="black")
    &lt;x1/&gt;
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>getenv&lt;x1/&gt; C library function is wrapped in the following Julia function,
which is a simplified version of the actual definition from &lt;x2/&gt;`env.jl`&lt;x3/&gt;:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224115Z" creationid="hsugawa8651" creationdate="20181109T224115Z">
        <seg>getenv&lt;x1/&gt;Cライブラリ関数は、次のJulia関数にラップされています。 これは、&lt;x2/&gt;'env.jl'&lt;x3/&gt;からの実際の定義の簡略化されたバージョンです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if Sys.iswindows()
    windows_specific_thing(a)
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224833Z" creationid="hsugawa8651" creationdate="20181109T224833Z">
        <seg>if Sys.iswindows()
    windows_specific_thing(a)
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if x &lt; y
    println("x is less than y")
elseif x &gt; y
    println("x is greater than y")
else
    println("x is equal to y")
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225839Z" creationid="hsugawa8651" creationdate="20181109T225839Z">
        <seg>if x &lt; y
    println("x is less than y")
elseif x &gt; y
    println("x is greater than y")
else
    println("x is equal to y")
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if&lt;x1/&gt; blocks also return a value, which may seem unintuitive to users coming from many other languages.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230019Z" creationid="hsugawa8651" creationdate="20181109T230019Z">
        <seg>もし&lt;x1/&gt;ブロックが値を返すと、他の多くの言語から来るユーザーにとって直感的ではないように思えるかもしれません。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>if&lt;x1/&gt; blocks are "leaky", i.e. they do not introduce a local scope.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225914Z" creationid="hsugawa8651" creationdate="20181109T225914Z">
        <seg>&lt;x1/&gt;ブロックが「リーク」である場合、すなわち、ローカルスコープを導入しない。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>import Foo
function bar(...)
    &lt;x1/&gt; ... refer to Foo symbols via Foo.baz ...
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025140Z" creationid="hsugawa8651" creationdate="20181110T025140Z">
        <seg>import Foo
function bar(...)
    &lt;x1/&gt; ... refer to Foo symbols via Foo.baz ...
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>include("mynewcode.jl")              &lt;x1/&gt; this defines a module MyModule
obj1 = MyModule.ObjConstructor(a, b)
obj2 = MyModule.somefunction(obj1)
&lt;x2/&gt; Got an error.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024750Z" creationid="hsugawa8651" creationdate="20181110T024750Z">
        <seg>include("mynewcode.jl")              &lt;x1/&gt; this defines a module MyModule
obj1 = MyModule.ObjConstructor(a, b)
obj2 = MyModule.somefunction(obj1)
&lt;x2/&gt; Got an error.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>io = IOBuffer()
Base.banner(io)
banner = String(take!(io))
import Markdown
Markdown.parse("```\n\$ julia\n\n$(banner)\njulia&gt; 1 + 2\n3\n\njulia&gt; ans\n3\n```")</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224257Z" creationid="hsugawa8651" creationdate="20181109T224257Z">
        <seg>io = IOBuffer()
Base.banner(io)
banner = String(take!(io))
import Markdown
Markdown.parse("```\n\$ julia\n\n$(banner)\njulia&gt; 1 + 2\n3\n\njulia&gt; ans\n3\n```")</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>is translated into:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042111Z" creationid="hsugawa8651" creationdate="20181110T042111Z">
        <seg>は次のように変換されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia [switches] -- [programfile] [args...]</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224522Z" creationid="hsugawa8651" creationdate="20181109T224522Z">
        <seg>julia [switches] -- [programfile] [args...]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; (1, 1+1)
(1, 2)

julia&gt; (1,)
(1,)

julia&gt; x = (0.0, "hello", 6*7)
(0.0, "hello", 42)

julia&gt; x[2]
"hello"</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030017Z" creationid="hsugawa8651" creationdate="20181110T030017Z">
        <seg>julia&gt; (1, 1+1)
(1, 2)

julia&gt; (1,)
(1,)

julia&gt; x = (0.0, "hello", 6*7)
(0.0, "hello", 42)

julia&gt; x[2]
"hello"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; (Cstring)
Cstring

julia&gt; (Cstring,)
(Cstring,)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224103Z" creationid="hsugawa8651" creationdate="20181109T224103Z">
        <seg>julia&gt; (Cstring)
Cstring

julia&gt; (Cstring,)
(Cstring,)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; (typemin(Int32), typemax(Int32))
(-2147483648, 2147483647)

julia&gt; for T in [Int8,Int16,Int32,Int64,Int128,UInt8,UInt16,UInt32,UInt64,UInt128]
           println("$(lpad(T,7)): [$(typemin(T)),$(typemax(T))]")
       end
   Int8: [-128,127]
  Int16: [-32768,32767]
  Int32: [-2147483648,2147483647]
  Int64: [-9223372036854775808,9223372036854775807]
 Int128: [-170141183460469231731687303715884105728,170141183460469231731687303715884105727]
  UInt8: [0,255]
 UInt16: [0,65535]
 UInt32: [0,4294967295]
 UInt64: [0,18446744073709551615]
UInt128: [0,340282366920938463463374607431768211455]</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225534Z" creationid="hsugawa8651" creationdate="20181109T225534Z">
        <seg>julia&gt; (typemin(Int32), typemax(Int32))
(-2147483648, 2147483647)

julia&gt; for T in [Int8,Int16,Int32,Int64,Int128,UInt8,UInt16,UInt32,UInt64,UInt128]
           println("$(lpad(T,7)): [$(typemin(T)),$(typemax(T))]")
       end
   Int8: [-128,127]
  Int16: [-32768,32767]
  Int32: [-2147483648,2147483647]
  Int64: [-9223372036854775808,9223372036854775807]
 Int128: [-170141183460469231731687303715884105728,170141183460469231731687303715884105727]
  UInt8: [0,255]
 UInt16: [0,65535]
 UInt32: [0,4294967295]
 UInt64: [0,18446744073709551615]
UInt128: [0,340282366920938463463374607431768211455]</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; -0x2
0xfe

julia&gt; -0x0002
0xfffe</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225522Z" creationid="hsugawa8651" creationdate="20181109T225522Z">
        <seg>julia&gt; -0x2
0xfe

julia&gt; -0x0002
0xfffe</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; 0b10
0x02

julia&gt; typeof(ans)
UInt8

julia&gt; 0o010
0x08

julia&gt; typeof(ans)
UInt8

julia&gt; 0x00000000000000001111222233334444
0x00000000000000001111222233334444

julia&gt; typeof(ans)
UInt128</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225357Z" creationid="hsugawa8651" creationdate="20181109T225357Z">
        <seg>julia&gt; 0b10
0x02

julia&gt; typeof(ans)
UInt8

julia&gt; 0o010
0x08

julia&gt; typeof(ans)
UInt8

julia&gt; 0x00000000000000001111222233334444
0x00000000000000001111222233334444

julia&gt; typeof(ans)
UInt128</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; 1
1

julia&gt; 1234
1234</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225207Z" creationid="hsugawa8651" creationdate="20181109T225207Z">
        <seg>julia&gt; 1
1

julia&gt; 1234
1234</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; 1 &amp;&amp; true
ERROR: TypeError: non-boolean (Int64) used in boolean context</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230815Z" creationid="hsugawa8651" creationdate="20181109T230815Z">
        <seg>julia&gt; 1 &amp;&amp; true
ERROR: TypeError: non-boolean (Int64) used in boolean context</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; 1 + 2 + 3
6

julia&gt; +(1,2,3)
6</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025821Z" creationid="hsugawa8651" creationdate="20181110T025821Z">
        <seg>julia&gt; 1 + 2 + 3
6

julia&gt; +(1,2,3)
6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; A = [1.0, 2.0, 3.0]
3-element Array{Float64,1}:
 1.0
 2.0
 3.0

julia&gt; sin.(A)
3-element Array{Float64,1}:
 0.8414709848078965
 0.9092974268256817
 0.1411200080598672</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030231Z" creationid="hsugawa8651" creationdate="20181110T030231Z">
        <seg>julia&gt; A = [1.0, 2.0, 3.0]
3-element Array{Float64,1}:
 1.0
 2.0
 3.0

julia&gt; sin.(A)
3-element Array{Float64,1}:
 0.8414709848078965
 0.9092974268256817
 0.1411200080598672</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; A = rand(4,3);

julia&gt; B = view(A, 1:3, 2:3);

julia&gt; for i in eachindex(B)
           @show i
       end
i = CartesianIndex(1, 1)
i = CartesianIndex(2, 1)
i = CartesianIndex(3, 1)
i = CartesianIndex(1, 2)
i = CartesianIndex(2, 2)
i = CartesianIndex(3, 2)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155847Z" creationid="hsugawa8651" creationdate="20181109T155847Z">
        <seg>julia&gt; A = rand(4,3);

julia&gt; B = view(A, 1:3, 2:3);

julia&gt; for i in eachindex(B)
           @show i
       end
i = CartesianIndex(1, 1)
i = CartesianIndex(2, 1)
i = CartesianIndex(3, 1)
i = CartesianIndex(1, 2)
i = CartesianIndex(2, 2)
i = CartesianIndex(3, 2)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; A = reshape(1:32, 4, 4, 2);

julia&gt; A[3, 2, 1]
7

julia&gt; A[CartesianIndex(3, 2, 1)] == A[3, 2, 1] == 7
true</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155608Z" creationid="hsugawa8651" creationdate="20181109T155608Z">
        <seg>julia&gt; A = reshape(1:32, 4, 4, 2);

julia&gt; A[3, 2, 1]
7

julia&gt; A[CartesianIndex(3, 2, 1)] == A[3, 2, 1] == 7
true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; A = reshape(collect(1:16), (2, 2, 2, 2))
2×2×2×2 Array{Int64,4}:
[:, :, 1, 1] =
 1  3
 2  4

[:, :, 2, 1] =
 5  7
 6  8

[:, :, 1, 2] =
  9  11
 10  12

[:, :, 2, 2] =
 13  15
 14  16

julia&gt; A[1, 2, 1, 1] &lt;x1/&gt; all scalar indices
3

julia&gt; A[[1, 2], [1], [1, 2], [1]] &lt;x2/&gt; all vector indices
2×1×2×1 Array{Int64,4}:
[:, :, 1, 1] =
 1
 2

[:, :, 2, 1] =
 5
 6

julia&gt; A[[1, 2], [1], [1, 2], 1] &lt;x3/&gt; a mix of index types
2×1×2 Array{Int64,3}:
[:, :, 1] =
 1
 2

[:, :, 2] =
 5
 6</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155139Z" creationid="hsugawa8651" creationdate="20181109T155139Z">
        <seg>julia&gt; A = reshape(collect(1:16), (2, 2, 2, 2))
2×2×2×2 Array{Int64,4}:
[:, :, 1, 1] =
 1  3
 2  4

[:, :, 2, 1] =
 5  7
 6  8

[:, :, 1, 2] =
  9  11
 10  12

[:, :, 2, 2] =
 13  15
 14  16

julia&gt; A[1, 2, 1, 1] &lt;x1/&gt; all scalar indices
3

julia&gt; A[[1, 2], [1], [1, 2], [1]] &lt;x2/&gt; all vector indices
2×1×2×1 Array{Int64,4}:
[:, :, 1, 1] =
 1
 2

[:, :, 2, 1] =
 5
 6

julia&gt; A[[1, 2], [1], [1, 2], 1] &lt;x3/&gt; a mix of index types
2×1×2 Array{Int64,3}:
[:, :, 1] =
 1
 2

[:, :, 2] =
 5
 6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; A = reshape(collect(1:16), (2, 2, 2, 2));

julia&gt; A[[1 2; 1 2]]
2×2 Array{Int64,2}:
 1  2
 1  2

julia&gt; A[[1 2; 1 2], 1, 2, 1]
2×2 Array{Int64,2}:
 5  6
 5  6</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155157Z" creationid="hsugawa8651" creationdate="20181109T155157Z">
        <seg>julia&gt; A = reshape(collect(1:16), (2, 2, 2, 2));

julia&gt; A[[1 2; 1 2]]
2×2 Array{Int64,2}:
 1  2
 1  2

julia&gt; A[[1 2; 1 2], 1, 2, 1]
2×2 Array{Int64,2}:
 5  6
 5  6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; A = reshape(collect(1:2:18), (3, 3))
3×3 Array{Int64,2}:
 1   7  13
 3   9  15
 5  11  17

julia&gt; A[4]
7

julia&gt; A[[2, 5, 8]]
3-element Array{Int64,1}:
  3
  9
 15

julia&gt; A[[1 4; 3 8]]
2×2 Array{Int64,2}:
 1   7
 5  15

julia&gt; A[[]]
0-element Array{Int64,1}

julia&gt; A[1:2:5]
3-element Array{Int64,1}:
 1
 5
 9

julia&gt; A[2, :]
3-element Array{Int64,1}:
  3
  9
 15

julia&gt; A[:, 3]
3-element Array{Int64,1}:
 13
 15
 17</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155550Z" creationid="hsugawa8651" creationdate="20181109T155550Z">
        <seg>julia&gt; A = reshape(collect(1:2:18), (3, 3))
3×3 Array{Int64,2}:
 1   7  13
 3   9  15
 5  11  17

julia&gt; A[4]
7

julia&gt; A[[2, 5, 8]]
3-element Array{Int64,1}:
  3
  9
 15

julia&gt; A[[1 4; 3 8]]
2×2 Array{Int64,2}:
 1   7
 5  15

julia&gt; A[[]]
0-element Array{Int64,1}

julia&gt; A[1:2:5]
3-element Array{Int64,1}:
 1
 5
 9

julia&gt; A[2, :]
3-element Array{Int64,1}:
  3
  9
 15

julia&gt; A[:, 3]
3-element Array{Int64,1}:
 13
 15
 17</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; Y = [1.0, 2.0, 3.0, 4.0];

julia&gt; X = similar(Y); &lt;x1/&gt; pre-allocate output array

julia&gt; @.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030248Z" creationid="hsugawa8651" creationdate="20181110T030248Z">
        <seg>julia&gt; Y = [1.0, 2.0, 3.0, 4.0];

julia&gt; X = similar(Y); &lt;x1/&gt; pre-allocate output array

julia&gt; @.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; [(i,j) for i=1:3 for j=1:i if i+j == 4]
2-element Array{Tuple{Int64,Int64},1}:
 (2, 2)
 (3, 1)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155100Z" creationid="hsugawa8651" creationdate="20181109T155100Z">
        <seg>julia&gt; [(i,j) for i=1:3 for j=1:i if i+j == 4]
2-element Array{Tuple{Int64,Int64},1}:
 (2, 2)
 (3, 1)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; [(i,j) for i=1:3 for j=1:i]
6-element Array{Tuple{Int64,Int64},1}:
 (1, 1)
 (2, 1)
 (2, 2)
 (3, 1)
 (3, 2)
 (3, 3)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155040Z" creationid="hsugawa8651" creationdate="20181109T155040Z">
        <seg>julia&gt; [(i,j) for i=1:3 for j=1:i]
6-element Array{Tuple{Int64,Int64},1}:
 (1, 1)
 (2, 1)
 (2, 2)
 (3, 1)
 (3, 2)
 (3, 3)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; [1:5;] .|&gt; [x-&gt;x^2, inv, x-&gt;2*x, -, isodd]
5-element Array{Real,1}:
    1
    0.5
    6
   -4
 true</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030300Z" creationid="hsugawa8651" creationdate="20181110T030300Z">
        <seg>julia&gt; [1:5;] .|&gt; [x-&gt;x^2, inv, x-&gt;2*x, -, isodd]
5-element Array{Real,1}:
    1
    0.5
    6
   -4
 true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; [[1 2] [3 4]]
1×4 Array{Int64,2}:
 1  2  3  4

julia&gt; Int8[[1 2] [3 4]]
1×4 Array{Int8,2}:
 1  2  3  4</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154710Z" creationid="hsugawa8651" creationdate="20181109T154710Z">
        <seg>julia&gt; [[1 2] [3 4]]
1×4 Array{Int64,2}:
 1  2  3  4

julia&gt; Int8[[1 2] [3 4]]
1×4 Array{Int8,2}:
 1  2  3  4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; [[1; 2]; [3, 4]]
4-element Array{Int64,1}:
 1
 2
 3
 4

julia&gt; [[1 2] [3 4]]
1×4 Array{Int64,2}:
 1  2  3  4

julia&gt; [[1 2]; [3 4]]
2×2 Array{Int64,2}:
 1  2
 3  4</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154652Z" creationid="hsugawa8651" creationdate="20181109T154652Z">
        <seg>julia&gt; [[1; 2]; [3, 4]]
4-element Array{Int64,1}:
 1
 2
 3
 4

julia&gt; [[1 2] [3 4]]
1×4 Array{Int64,2}:
 1  2  3  4

julia&gt; [[1 2]; [3 4]]
2×2 Array{Int64,2}:
 1  2
 3  4</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; a = [1,2,5,6,7];

julia&gt; searchsorted(a, 4)
3:2</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155322Z" creationid="hsugawa8651" creationdate="20181109T155322Z">
        <seg>julia&gt; a = [1,2,5,6,7];

julia&gt; searchsorted(a, 4)
3:2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; a = rand(10, 10)
10×10 Array{Float64,2}:
 0.517515  0.0348206  0.749042   0.0979679  …  0.75984     0.950481   0.579513
 0.901092  0.873479   0.134533   0.0697848     0.0586695   0.193254   0.726898
 0.976808  0.0901881  0.208332   0.920358      0.288535    0.705941   0.337137
 0.657127  0.0317896  0.772837   0.534457      0.0966037   0.700694   0.675999
 0.471777  0.144969   0.0718405  0.0827916     0.527233    0.173132   0.694304
 0.160872  0.455168   0.489254   0.827851   …  0.62226     0.0995456  0.946522
 0.291857  0.769492   0.68043    0.629461      0.727558    0.910796   0.834837
 0.775774  0.700731   0.700177   0.0126213     0.00822304  0.327502   0.955181
 0.9715    0.64354    0.848441   0.241474      0.591611    0.792573   0.194357
 0.646596  0.575456   0.0995212  0.038517      0.709233    0.477657   0.0507231

julia&gt; b = view(a, 2:2:8,2:2:4)
4×2 view(::Array{Float64,2}, 2:2:8, 2:2:4) with eltype Float64:
 0.873479   0.0697848
 0.0317896  0.534457
 0.455168   0.827851
 0.700731   0.0126213

julia&gt; (q, r) = qr(b);

julia&gt; q
4×4 LinearAlgebra.QRCompactWYQ{Float64,Array{Float64,2}}:
 -0.722358    0.227524  -0.247784    -0.604181
 -0.0262896  -0.575919  -0.804227     0.144377
 -0.376419   -0.75072    0.540177    -0.0541979
 -0.579497    0.230151  -0.00552346   0.781782

julia&gt; r
2×2 Array{Float64,2}:
 -1.20921  -0.383393
  0.0      -0.910506</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160525Z" creationid="hsugawa8651" creationdate="20181109T160525Z">
        <seg>julia&gt; a = rand(10, 10)
10×10 Array{Float64,2}:
 0.517515  0.0348206  0.749042   0.0979679  …  0.75984     0.950481   0.579513
 0.901092  0.873479   0.134533   0.0697848     0.0586695   0.193254   0.726898
 0.976808  0.0901881  0.208332   0.920358      0.288535    0.705941   0.337137
 0.657127  0.0317896  0.772837   0.534457      0.0966037   0.700694   0.675999
 0.471777  0.144969   0.0718405  0.0827916     0.527233    0.173132   0.694304
 0.160872  0.455168   0.489254   0.827851   …  0.62226     0.0995456  0.946522
 0.291857  0.769492   0.68043    0.629461      0.727558    0.910796   0.834837
 0.775774  0.700731   0.700177   0.0126213     0.00822304  0.327502   0.955181
 0.9715    0.64354    0.848441   0.241474      0.591611    0.792573   0.194357
 0.646596  0.575456   0.0995212  0.038517      0.709233    0.477657   0.0507231

julia&gt; b = view(a, 2:2:8,2:2:4)
4×2 view(::Array{Float64,2}, 2:2:8, 2:2:4) with eltype Float64:
 0.873479   0.0697848
 0.0317896  0.534457
 0.455168   0.827851
 0.700731   0.0126213

julia&gt; (q, r) = qr(b);

julia&gt; q
4×4 LinearAlgebra.QRCompactWYQ{Float64,Array{Float64,2}}:
 -0.722358    0.227524  -0.247784    -0.604181
 -0.0262896  -0.575919  -0.804227     0.144377
 -0.376419   -0.75072    0.540177    -0.0541979
 -0.579497    0.230151  -0.00552346   0.781782

julia&gt; r
2×2 Array{Float64,2}:
 -1.20921  -0.383393
  0.0      -0.910506</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; a = rand(2,1); A = rand(2,3);

julia&gt; repeat(a,1,3)+A
2×3 Array{Float64,2}:
 1.20813  1.82068  1.25387
 1.56851  1.86401  1.67846</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160046Z" creationid="hsugawa8651" creationdate="20181109T160046Z">
        <seg>julia&gt; a = rand(2,1); A = rand(2,3);

julia&gt; repeat(a,1,3)+A
2×3 Array{Float64,2}:
 1.20813  1.82068  1.25387
 1.56851  1.86401  1.67846</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; bar(1,2)
(1, 2, ())

julia&gt; bar(1,2,3)
(1, 2, (3,))

julia&gt; bar(1, 2, 3, 4)
(1, 2, (3, 4))

julia&gt; bar(1,2,3,4,5,6)
(1, 2, (3, 4, 5, 6))</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030058Z" creationid="hsugawa8651" creationdate="20181110T030058Z">
        <seg>julia&gt; bar(1,2)
(1, 2, ())

julia&gt; bar(1,2,3)
(1, 2, (3,))

julia&gt; bar(1, 2, 3, 4)
(1, 2, (3, 4))

julia&gt; bar(1,2,3,4,5,6)
(1, 2, (3, 4, 5, 6))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; bar(a,b,x...) = (a,b,x)
bar (generic function with 1 method)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030056Z" creationid="hsugawa8651" creationdate="20181110T030056Z">
        <seg>julia&gt; bar(a,b,x...) = (a,b,x)
bar (generic function with 1 method)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; baz(a,b) = a + b;

julia&gt; args = [1,2]
2-element Array{Int64,1}:
 1
 2

julia&gt; baz(args...)
3

julia&gt; args = [1,2,3]
3-element Array{Int64,1}:
 1
 2
 3

julia&gt; baz(args...)
ERROR: MethodError: no method matching baz(::Int64, ::Int64, ::Int64)
Closest candidates are:
  baz(::Any, ::Any) at none:1</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030114Z" creationid="hsugawa8651" creationdate="20181110T030114Z">
        <seg>julia&gt; baz(a,b) = a + b;

julia&gt; args = [1,2]
2-element Array{Int64,1}:
 1
 2

julia&gt; baz(args...)
3

julia&gt; args = [1,2,3]
3-element Array{Int64,1}:
 1
 2
 3

julia&gt; baz(args...)
ERROR: MethodError: no method matching baz(::Int64, ::Int64, ::Int64)
Closest candidates are:
  baz(::Any, ::Any) at none:1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; begin x = 1; y = 2; x + y end
3

julia&gt; (x = 1;
        y = 2;
        x + y)
3</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225823Z" creationid="hsugawa8651" creationdate="20181109T225823Z">
        <seg>julia&gt; begin x = 1; y = 2; x + y end
3

julia&gt; (x = 1;
        y = 2;
        x + y)
3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; broadcast(+, a, A)
2×3 Array{Float64,2}:
 1.20813  1.82068  1.25387
 1.56851  1.86401  1.67846

julia&gt; b = rand(1,2)
1×2 Array{Float64,2}:
 0.867535  0.00457906

julia&gt; broadcast(+, a, b)
2×2 Array{Float64,2}:
 1.71056  0.847604
 1.73659  0.873631</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160057Z" creationid="hsugawa8651" creationdate="20181109T160057Z">
        <seg>julia&gt; broadcast(+, a, A)
2×3 Array{Float64,2}:
 1.20813  1.82068  1.25387
 1.56851  1.86401  1.67846

julia&gt; b = rand(1,2)
1×2 Array{Float64,2}:
 0.867535  0.00457906

julia&gt; broadcast(+, a, b)
2×2 Array{Float64,2}:
 1.71056  0.847604
 1.73659  0.873631</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; convert.(Float32, [1, 2])
2-element Array{Float32,1}:
 1.0
 2.0

julia&gt; ceil.((UInt8,), [1.2 3.4; 5.6 6.7])
2×2 Array{UInt8,2}:
 0x02  0x04
 0x06  0x07

julia&gt; string.(1:3, ".</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T160140Z" creationid="hsugawa8651" creationdate="20181109T160140Z">
        <seg>julia&gt; convert.(Float32, [1, 2])
2-element Array{Float32,1}:
 1.0
 2.0

julia&gt; ceil.((UInt8,), [1.2 3.4; 5.6 6.7])
2×2 Array{UInt8,2}:
 0x02  0x04
 0x06  0x07

julia&gt; string.(1:3, ".</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; f = +;

julia&gt; f(1,2,3)
6</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025828Z" creationid="hsugawa8651" creationdate="20181110T025828Z">
        <seg>julia&gt; f = +;

julia&gt; f(1,2,3)
6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; f(1) &amp; t(2)
1
2
false

julia&gt; t(1) | t(2)
1
2
true</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230755Z" creationid="hsugawa8651" creationdate="20181109T230755Z">
        <seg>julia&gt; f(1) &amp; t(2)
1
2
false

julia&gt; t(1) | t(2)
1
2
true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; f(2,3)
5</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025628Z" creationid="hsugawa8651" creationdate="20181110T025628Z">
        <seg>julia&gt; f(2,3)
5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; f(x,y) = 3x + 4y;

julia&gt; A = [1.0, 2.0, 3.0];

julia&gt; B = [4.0, 5.0, 6.0];

julia&gt; f.(pi, A)
3-element Array{Float64,1}:
 13.42477796076938
 17.42477796076938
 21.42477796076938

julia&gt; f.(A, B)
3-element Array{Float64,1}:
 19.0
 26.0
 33.0</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030235Z" creationid="hsugawa8651" creationdate="20181110T030235Z">
        <seg>julia&gt; f(x,y) = 3x + 4y;

julia&gt; A = [1.0, 2.0, 3.0];

julia&gt; B = [4.0, 5.0, 6.0];

julia&gt; f.(pi, A)
3-element Array{Float64,1}:
 13.42477796076938
 17.42477796076938
 21.42477796076938

julia&gt; f.(A, B)
3-element Array{Float64,1}:
 19.0
 26.0
 33.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; f(x,y) = x + y
f (generic function with 1 method)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025509Z" creationid="hsugawa8651" creationdate="20181110T025509Z">
        <seg>julia&gt; f(x,y) = x + y
f (generic function with 1 method)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; f(x,y) = x + y
f (generic function with 1 method)

julia&gt; function g(x,y)
           return x * y
           x + y
       end
g (generic function with 1 method)

julia&gt; f(2,3)
5

julia&gt; g(2,3)
6</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025743Z" creationid="hsugawa8651" creationdate="20181110T025743Z">
        <seg>julia&gt; f(x,y) = x + y
f (generic function with 1 method)

julia&gt; function g(x,y)
           return x * y
           x + y
       end
g (generic function with 1 method)

julia&gt; f(2,3)
5

julia&gt; g(2,3)
6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; foo(2,3)
(5, 6)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030031Z" creationid="hsugawa8651" creationdate="20181110T030031Z">
        <seg>julia&gt; foo(2,3)
(5, 6)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; for i = 1:5
           println(i)
       end
1
2
3
4
5</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T231134Z" creationid="hsugawa8651" creationdate="20181109T231134Z">
        <seg>julia&gt; for i = 1:5
           println(i)
       end
1
2
3
4
5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; for j = 1:5
           println(j)
       end
1
2
3
4
5

julia&gt; j
ERROR: UndefVarError: j not defined</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T231206Z" creationid="hsugawa8651" creationdate="20181109T231206Z">
        <seg>julia&gt; for j = 1:5
           println(j)
       end
1
2
3
4
5

julia&gt; j
ERROR: UndefVarError: j not defined</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; function f(x,y)
           x + y
       end
f (generic function with 1 method)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025459Z" creationid="hsugawa8651" creationdate="20181110T025459Z">
        <seg>julia&gt; function f(x,y)
           x + y
       end
f (generic function with 1 method)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; function fact(n::Int)
           n &gt;= 0 || error("n must be non-negative")
           n == 0 &amp;&amp; return 1
           n * fact(n-1)
       end
fact (generic function with 1 method)

julia&gt; fact(5)
120

julia&gt; fact(0)
1

julia&gt; fact(-1)
ERROR: n must be non-negative
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] fact(::Int64) at ./none:2
 [3] top-level scope</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230447Z" creationid="hsugawa8651" creationdate="20181109T230447Z">
        <seg>julia&gt; function fact(n::Int)
           n &gt;= 0 || error("n must be non-negative")
           n == 0 &amp;&amp; return 1
           n * fact(n-1)
       end
fact (generic function with 1 method)

julia&gt; fact(5)
120

julia&gt; fact(0)
1

julia&gt; fact(-1)
ERROR: n must be non-negative
Stacktrace:
 [1] error at ./error.jl:33 [inlined]
 [2] fact(::Int64) at ./none:2
 [3] top-level scope</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; function foo(a,b)
           a+b, a*b
       end
foo (generic function with 1 method)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030028Z" creationid="hsugawa8651" creationdate="20181110T030028Z">
        <seg>julia&gt; function foo(a,b)
           a+b, a*b
       end
foo (generic function with 1 method)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; function g(x, y)::Int8
           return x * y
       end;

julia&gt; typeof(g(1, 2))
Int8</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025812Z" creationid="hsugawa8651" creationdate="20181110T025812Z">
        <seg>julia&gt; function g(x, y)::Int8
           return x * y
       end;

julia&gt; typeof(g(1, 2))
Int8</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; function hypot(x,y)
           x = abs(x)
           y = abs(y)
           if x &gt; y
               r = y/x
               return x*sqrt(1+r*r)
           end
           if y == 0
               return zero(x)
           end
           r = x/y
           return y*sqrt(1+r*r)
       end
hypot (generic function with 1 method)

julia&gt; hypot(3, 4)
5.0</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025759Z" creationid="hsugawa8651" creationdate="20181110T025759Z">
        <seg>julia&gt; function hypot(x,y)
           x = abs(x)
           y = abs(y)
           if x &gt; y
               r = y/x
               return x*sqrt(1+r*r)
           end
           if y == 0
               return zero(x)
           end
           r = x/y
           return y*sqrt(1+r*r)
       end
hypot (generic function with 1 method)

julia&gt; hypot(3, 4)
5.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; function printargs(args...)
           println(typeof(args))
           for (i, arg) in enumerate(args)
               println("Arg &lt;x1/&gt;$i = $arg")
           end
       end
printargs (generic function with 1 method)

julia&gt; printargs(1, 2, 3)
Tuple{Int64,Int64,Int64}
Arg &lt;x2/&gt;1 = 1
Arg &lt;x3/&gt;2 = 2
Arg &lt;x4/&gt;3 = 3</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025242Z" creationid="hsugawa8651" creationdate="20181110T025242Z">
        <seg>julia&gt; function printargs(args...)
           println(typeof(args))
           for (i, arg) in enumerate(args)
               println("Arg &lt;x1/&gt;$i = $arg")
           end
       end
printargs (generic function with 1 method)

julia&gt; printargs(1, 2, 3)
Tuple{Int64,Int64,Int64}
Arg &lt;x2/&gt;1 = 1
Arg &lt;x3/&gt;2 = 2
Arg &lt;x4/&gt;3 = 3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; function test(x, y)
           if x &lt; y
               println("x is less than y")
           elseif x &gt; y
               println("x is greater than y")
           else
               println("x is equal to y")
           end
       end
test (generic function with 1 method)

julia&gt; test(1, 2)
x is less than y

julia&gt; test(2, 1)
x is greater than y

julia&gt; test(1, 1)
x is equal to y</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225852Z" creationid="hsugawa8651" creationdate="20181109T225852Z">
        <seg>julia&gt; function test(x, y)
           if x &lt; y
               println("x is less than y")
           elseif x &gt; y
               println("x is greater than y")
           else
               println("x is equal to y")
           end
       end
test (generic function with 1 method)

julia&gt; test(1, 2)
x is less than y

julia&gt; test(2, 1)
x is greater than y

julia&gt; test(1, 1)
x is equal to y</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; function test(x,y)
           if x &lt; y
               relation = "less than"
           elseif x == y
               relation = "equal to"
           else
               relation = "greater than"
           end
           println("x is ", relation, " y.")
       end
test (generic function with 1 method)

julia&gt; test(2, 1)
x is greater than y.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225926Z" creationid="hsugawa8651" creationdate="20181109T225926Z">
        <seg>julia&gt; function test(x,y)
           if x &lt; y
               relation = "less than"
           elseif x == y
               relation = "equal to"
           else
               relation = "greater than"
           end
           println("x is ", relation, " y.")
       end
test (generic function with 1 method)

julia&gt; test(2, 1)
x is greater than y.</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; g = f;

julia&gt; g(2,3)
5</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025635Z" creationid="hsugawa8651" creationdate="20181110T025635Z">
        <seg>julia&gt; g = f;

julia&gt; g(2,3)
5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; getenv("SHELL")
"/bin/bash"

julia&gt; getenv("FOOBAR")
getenv: undefined variable: FOOBAR</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224135Z" creationid="hsugawa8651" creationdate="20181109T224135Z">
        <seg>julia&gt; getenv("SHELL")
"/bin/bash"

julia&gt; getenv("FOOBAR")
getenv: undefined variable: FOOBAR</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; i = 1;

julia&gt; while i &lt;= 5
           println(i)
           global i += 1
       end
1
2
3
4
5</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230848Z" creationid="hsugawa8651" creationdate="20181109T230848Z">
        <seg>julia&gt; i = 1;

julia&gt; while i &lt;= 5
           println(i)
           global i += 1
       end
1
2
3
4
5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; if 1
           println("true")
       end
ERROR: TypeError: non-boolean (Int64) used in boolean context</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230038Z" creationid="hsugawa8651" creationdate="20181109T230038Z">
        <seg>julia&gt; if 1
           println("true")
       end
ERROR: TypeError: non-boolean (Int64) used in boolean context</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; map(round, [1.2,3.5,1.7])
3-element Array{Float64,1}:
 1.0
 4.0
 2.0</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030004Z" creationid="hsugawa8651" creationdate="20181110T030004Z">
        <seg>julia&gt; map(round, [1.2,3.5,1.7])
3-element Array{Float64,1}:
 1.0
 4.0
 2.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; map(tuple, (1/(i+j) for i=1:2, j=1:2), [1 3; 2 4])
2×2 Array{Tuple{Float64,Int64},2}:
 (0.5, 1)       (0.333333, 3)
 (0.333333, 2)  (0.25, 4)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155000Z" creationid="hsugawa8651" creationdate="20181109T155000Z">
        <seg>julia&gt; map(tuple, (1/(i+j) for i=1:2, j=1:2), [1 3; 2 4])
2×2 Array{Tuple{Float64,Int64},2}:
 (0.5, 1)       (0.333333, 3)
 (0.333333, 2)  (0.25, 4)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; map(tuple, 1/(i+j) for i=1:2, j=1:2, [1:4;])
ERROR: syntax: invalid iteration specification</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154944Z" creationid="hsugawa8651" creationdate="20181109T154944Z">
        <seg>julia&gt; map(tuple, 1/(i+j) for i=1:2, j=1:2, [1:4;])
ERROR: syntax: invalid iteration specification</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; map(x -&gt; x^2 + 2x - 1, [1,3,-1])
3-element Array{Int64,1}:
  2
 14
 -2</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030009Z" creationid="hsugawa8651" creationdate="20181110T030009Z">
        <seg>julia&gt; map(x -&gt; x^2 + 2x - 1, [1,3,-1])
3-element Array{Int64,1}:
  2
 14
 -2</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; minmax(x, y) = (y &lt; x) ?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030048Z" creationid="hsugawa8651" creationdate="20181110T030048Z">
        <seg>julia&gt; minmax(x, y) = (y &lt; x) ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; page = A[:,:,1]
4×4 Array{Int64,2}:
 1  5   9  13
 2  6  10  14
 3  7  11  15
 4  8  12  16

julia&gt; page[[CartesianIndex(1,1),
             CartesianIndex(2,2),
             CartesianIndex(3,3),
             CartesianIndex(4,4)]]
4-element Array{Int64,1}:
  1
  6
 11
 16</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155657Z" creationid="hsugawa8651" creationdate="20181109T155657Z">
        <seg>julia&gt; page = A[:,:,1]
4×4 Array{Int64,2}:
 1  5   9  13
 2  6  10  14
 3  7  11  15
 4  8  12  16

julia&gt; page[[CartesianIndex(1,1),
             CartesianIndex(2,2),
             CartesianIndex(3,3),
             CartesianIndex(4,4)]]
4-element Array{Int64,1}:
  1
  6
 11
 16</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; path = ccall((:getenv, "libc"), Cstring, (Cstring,), "SHELL")
Cstring(@0x00007fff5fbffc45)

julia&gt; unsafe_string(path)
"/bin/bash"</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224044Z" creationid="hsugawa8651" creationdate="20181109T224044Z">
        <seg>julia&gt; path = ccall((:getenv, "libc"), Cstring, (Cstring,), "SHELL")
Cstring(@0x00007fff5fbffc45)

julia&gt; unsafe_string(path)
"/bin/bash"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; sum(1/n^2 for n=1:1000)
1.6439345666815615</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154933Z" creationid="hsugawa8651" creationdate="20181109T154933Z">
        <seg>julia&gt; sum(1/n^2 for n=1:1000)
1.6439345666815615</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; t = ccall((:clock, "libc"), Int32, ())
2292761

julia&gt; t
2292761

julia&gt; typeof(ans)
Int32</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224025Z" creationid="hsugawa8651" creationdate="20181109T224025Z">
        <seg>julia&gt; t = ccall((:clock, "libc"), Int32, ())
2292761

julia&gt; t
2292761

julia&gt; typeof(ans)
Int32</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; t(x) = (println(x); true)
t (generic function with 1 method)

julia&gt; f(x) = (println(x); false)
f (generic function with 1 method)

julia&gt; t(1) &amp;&amp; t(2)
1
2
true

julia&gt; t(1) &amp;&amp; f(2)
1
2
false

julia&gt; f(1) &amp;&amp; t(2)
1
false

julia&gt; f(1) &amp;&amp; f(2)
1
false

julia&gt; t(1) || t(2)
1
true

julia&gt; t(1) || f(2)
1
true

julia&gt; f(1) || t(2)
1
2
true

julia&gt; f(1) || f(2)
1
2
false</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230250Z" creationid="hsugawa8651" creationdate="20181109T230250Z">
        <seg>julia&gt; t(x) = (println(x); true)
t (generic function with 1 method)

julia&gt; f(x) = (println(x); false)
f (generic function with 1 method)

julia&gt; t(1) &amp;&amp; t(2)
1
2
true

julia&gt; t(1) &amp;&amp; f(2)
1
2
false

julia&gt; f(1) &amp;&amp; t(2)
1
false

julia&gt; f(1) &amp;&amp; f(2)
1
false

julia&gt; t(1) || t(2)
1
true

julia&gt; t(1) || f(2)
1
true

julia&gt; f(1) || t(2)
1
2
true

julia&gt; f(1) || f(2)
1
2
false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; test(x, y) = println(x &lt; y ?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230142Z" creationid="hsugawa8651" creationdate="20181109T230142Z">
        <seg>julia&gt; test(x, y) = println(x &lt; y ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; true &amp;&amp; (x = (1, 2, 3))
(1, 2, 3)

julia&gt; false &amp;&amp; (x = (1, 2, 3))
false</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230829Z" creationid="hsugawa8651" creationdate="20181109T230829Z">
        <seg>julia&gt; true &amp;&amp; (x = (1, 2, 3))
(1, 2, 3)

julia&gt; false &amp;&amp; (x = (1, 2, 3))
false</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; using Dates

julia&gt; Date(2000, 12, 12)
2000-12-12

julia&gt; Date(2000, 12)
2000-12-01

julia&gt; Date(2000)
2000-01-01</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030125Z" creationid="hsugawa8651" creationdate="20181110T030125Z">
        <seg>julia&gt; using Dates

julia&gt; Date(2000, 12, 12)
2000-12-12

julia&gt; Date(2000, 12)
2000-12-01

julia&gt; Date(2000)
2000-01-01</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; v(x) = (println(x); x)
v (generic function with 1 method)

julia&gt; 1 &lt; 2 ?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230204Z" creationid="hsugawa8651" creationdate="20181109T230204Z">
        <seg>julia&gt; v(x) = (println(x); x)
v (generic function with 1 method)

julia&gt; 1 &lt; 2 ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; vcat([1, 2], 3)
3-element Array{Int64,1}:
 1
 2
 3

julia&gt; hcat([1 2], 3)
1×3 Array{Int64,2}:
 1  2  3</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154606Z" creationid="hsugawa8651" creationdate="20181109T154606Z">
        <seg>julia&gt; vcat([1, 2], 3)
3-element Array{Int64,1}:
 1
 2
 3

julia&gt; hcat([1 2], 3)
1×3 Array{Int64,2}:
 1  2  3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x -&gt; x^2 + 2x - 1
&lt;x1/&gt;1 (generic function with 1 method)

julia&gt; function (x)
           x^2 + 2x - 1
       end
&lt;x2/&gt;3 (generic function with 1 method)</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025957Z" creationid="hsugawa8651" creationdate="20181110T025957Z">
        <seg>julia&gt; x -&gt; x^2 + 2x - 1
&lt;x1/&gt;1 (generic function with 1 method)

julia&gt; function (x)
           x^2 + 2x - 1
       end
&lt;x2/&gt;3 (generic function with 1 method)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = (2, 3, 4)
(2, 3, 4)

julia&gt; bar(1,x...)
(1, 2, (3, 4))

julia&gt; x = (1, 2, 3, 4)
(1, 2, 3, 4)

julia&gt; bar(x...)
(1, 2, (3, 4))</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030107Z" creationid="hsugawa8651" creationdate="20181110T030107Z">
        <seg>julia&gt; x = (2, 3, 4)
(2, 3, 4)

julia&gt; bar(1,x...)
(1, 2, (3, 4))

julia&gt; x = (1, 2, 3, 4)
(1, 2, 3, 4)

julia&gt; bar(x...)
(1, 2, (3, 4))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = (3, 4)
(3, 4)

julia&gt; bar(1,2,x...)
(1, 2, (3, 4))</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030104Z" creationid="hsugawa8651" creationdate="20181110T030104Z">
        <seg>julia&gt; x = (3, 4)
(3, 4)

julia&gt; bar(1,2,x...)
(1, 2, (3, 4))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = (a=1, b=1+1)
(a = 1, b = 2)

julia&gt; x.a
1</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030023Z" creationid="hsugawa8651" creationdate="20181110T030023Z">
        <seg>julia&gt; x = (a=1, b=1+1)
(a = 1, b = 2)

julia&gt; x.a
1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = 10
10

julia&gt; function change_value!(y)
           y = 17
       end
change_value!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025000Z" creationid="hsugawa8651" creationdate="20181110T025000Z">
        <seg>julia&gt; x = 10
10

julia&gt; function change_value!(y)
           y = 17
       end
change_value!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = 1; y = 2;

julia&gt; println(x &lt; y ?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230124Z" creationid="hsugawa8651" creationdate="20181109T230124Z">
        <seg>julia&gt; x = 1; y = 2;

julia&gt; println(x &lt; y ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = 3
3

julia&gt; if x &gt; 0
           "positive!"
       else
           "negative..."
       end
"positive!"</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230026Z" creationid="hsugawa8651" creationdate="20181109T230026Z">
        <seg>julia&gt; x = 3
3

julia&gt; if x &gt; 0
           "positive!"
       else
           "negative..."
       end
"positive!"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = [1,2,3]
3-element Array{Int64,1}:
 1
 2
 3

julia&gt; function change_array!(A)
           A[1] = 5
       end
change_array!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025049Z" creationid="hsugawa8651" creationdate="20181110T025049Z">
        <seg>julia&gt; x = [1,2,3]
3-element Array{Int64,1}:
 1
 2
 3

julia&gt; function change_array!(A)
           A[1] = 5
       end
change_array!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = [3,4]
2-element Array{Int64,1}:
 3
 4

julia&gt; bar(1,2,x...)
(1, 2, (3, 4))

julia&gt; x = [1,2,3,4]
4-element Array{Int64,1}:
 1
 2
 3
 4

julia&gt; bar(x...)
(1, 2, (3, 4))</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030112Z" creationid="hsugawa8651" creationdate="20181110T030112Z">
        <seg>julia&gt; x = [3,4]
2-element Array{Int64,1}:
 3
 4

julia&gt; bar(1,2,x...)
(1, 2, (3, 4))

julia&gt; x = [1,2,3,4]
4-element Array{Int64,1}:
 1
 2
 3
 4

julia&gt; bar(x...)
(1, 2, (3, 4))</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = collect(reshape(1:9, 3, 3))
3×3 Array{Int64,2}:
 1  4  7
 2  5  8
 3  6  9

julia&gt; x[3, 3] = -9;

julia&gt; x[1:2, 1:2] = [-1 -4; -2 -5];

julia&gt; x
3×3 Array{Int64,2}:
 -1  -4   7
 -2  -5   8
  3   6  -9</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155453Z" creationid="hsugawa8651" creationdate="20181109T155453Z">
        <seg>julia&gt; x = collect(reshape(1:9, 3, 3))
3×3 Array{Int64,2}:
 1  4  7
 2  5  8
 3  6  9

julia&gt; x[3, 3] = -9;

julia&gt; x[1:2, 1:2] = [-1 -4; -2 -5];

julia&gt; x
3×3 Array{Int64,2}:
 -1  -4   7
 -2  -5   8
  3   6  -9</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = rand(8)
8-element Array{Float64,1}:
 0.843025
 0.869052
 0.365105
 0.699456
 0.977653
 0.994953
 0.41084
 0.809411

julia&gt; [ 0.25*x[i-1] + 0.5*x[i] + 0.25*x[i+1] for i=2:length(x)-1 ]
6-element Array{Float64,1}:
 0.736559
 0.57468
 0.685417
 0.912429
 0.8446
 0.656511</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154823Z" creationid="hsugawa8651" creationdate="20181109T154823Z">
        <seg>julia&gt; x = rand(8)
8-element Array{Float64,1}:
 0.843025
 0.869052
 0.365105
 0.699456
 0.977653
 0.994953
 0.41084
 0.809411

julia&gt; [ 0.25*x[i-1] + 0.5*x[i] + 0.25*x[i+1] for i=2:length(x)-1 ]
6-element Array{Float64,1}:
 0.736559
 0.57468
 0.685417
 0.912429
 0.8446
 0.656511</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = reshape(1:16, 4, 4)
4×4 reshape(::UnitRange{Int64}, 4, 4) with eltype Int64:
 1  5   9  13
 2  6  10  14
 3  7  11  15
 4  8  12  16

julia&gt; x[2:3, 2:end-1]
2×2 Array{Int64,2}:
 6  10
 7  11

julia&gt; x[1, [2 3; 4 1]]
2×2 Array{Int64,2}:
  5  9
 13  1</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155304Z" creationid="hsugawa8651" creationdate="20181109T155304Z">
        <seg>julia&gt; x = reshape(1:16, 4, 4)
4×4 reshape(::UnitRange{Int64}, 4, 4) with eltype Int64:
 1  5   9  13
 2  6  10  14
 3  7  11  15
 4  8  12  16

julia&gt; x[2:3, 2:end-1]
2×2 Array{Int64,2}:
 6  10
 7  11

julia&gt; x[1, [2 3; 4 1]]
2×2 Array{Int64,2}:
  5  9
 13  1</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = reshape(1:16, 4, 4)
4×4 reshape(::UnitRange{Int64}, 4, 4) with eltype Int64:
 1  5   9  13
 2  6  10  14
 3  7  11  15
 4  8  12  16

julia&gt; x[[false, true, true, false], :]
2×4 Array{Int64,2}:
 2  6  10  14
 3  7  11  15

julia&gt; mask = map(ispow2, x)
4×4 Array{Bool,2}:
  true  false  false  false
  true  false  false  false
 false  false  false  false
  true   true  false   true

julia&gt; x[mask]
5-element Array{Int64,1}:
  1
  2
  4
  8
 16</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155818Z" creationid="hsugawa8651" creationdate="20181109T155818Z">
        <seg>julia&gt; x = reshape(1:16, 4, 4)
4×4 reshape(::UnitRange{Int64}, 4, 4) with eltype Int64:
 1  5   9  13
 2  6  10  14
 3  7  11  15
 4  8  12  16

julia&gt; x[[false, true, true, false], :]
2×4 Array{Int64,2}:
 2  6  10  14
 3  7  11  15

julia&gt; mask = map(ispow2, x)
4×4 Array{Bool,2}:
  true  false  false  false
  true  false  false  false
 false  false  false  false
  true   true  false   true

julia&gt; x[mask]
5-element Array{Int64,1}:
  1
  2
  4
  8
 16</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x = typemax(Int64)
9223372036854775807

julia&gt; x + 1
-9223372036854775808

julia&gt; x + 1 == typemin(Int64)
true</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225616Z" creationid="hsugawa8651" creationdate="20181109T225616Z">
        <seg>julia&gt; x = typemax(Int64)
9223372036854775807

julia&gt; x + 1
-9223372036854775808

julia&gt; x + 1 == typemin(Int64)
true</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; x, y = foo(2,3)
(5, 6)

julia&gt; x
5

julia&gt; y
6</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030035Z" creationid="hsugawa8651" creationdate="20181110T030035Z">
        <seg>julia&gt; x, y = foo(2,3)
(5, 6)

julia&gt; x
5

julia&gt; y
6</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; z = (x = 1; y = 2; x + y)
3</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225811Z" creationid="hsugawa8651" creationdate="20181109T225811Z">
        <seg>julia&gt; z = (x = 1; y = 2; x + y)
3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; z = begin
           x = 1
           y = 2
           x + y
       end
3</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T225805Z" creationid="hsugawa8651" creationdate="20181109T225805Z">
        <seg>julia&gt; z = begin
           x = 1
           y = 2
           x + y
       end
3</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; zeros(Int8, 2, 3)
2×3 Array{Int8,2}:
 0  0  0
 0  0  0

julia&gt; zeros(Int8, (2, 3))
2×3 Array{Int8,2}:
 0  0  0
 0  0  0

julia&gt; zeros((2, 3))
2×3 Array{Float64,2}:
 0.0  0.0  0.0
 0.0  0.0  0.0</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154527Z" creationid="hsugawa8651" creationdate="20181109T154527Z">
        <seg>julia&gt; zeros(Int8, 2, 3)
2×3 Array{Int8,2}:
 0  0  0
 0  0  0

julia&gt; zeros(Int8, (2, 3))
2×3 Array{Int8,2}:
 0  0  0
 0  0  0

julia&gt; zeros((2, 3))
2×3 Array{Float64,2}:
 0.0  0.0  0.0
 0.0  0.0  0.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>julia&gt; ∑(x,y) = x + y
∑ (generic function with 1 method)

julia&gt; ∑(2, 3)
5</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025648Z" creationid="hsugawa8651" creationdate="20181110T025648Z">
        <seg>julia&gt; ∑(x,y) = x + y
∑ (generic function with 1 method)

julia&gt; ∑(2, 3)
5</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>m&lt;x1/&gt;-by-&lt;x2/&gt;n&lt;x3/&gt; identity matrix</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154456Z" creationid="hsugawa8651" creationdate="20181109T154456Z">
        <seg>m&lt;x1/&gt;-by-&lt;x2/&gt;n&lt;x3/&gt;識別マトリクス</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>map([A, B, C]) do x
    if x &lt; 0 &amp;&amp; iseven(x)
        return 0
    elseif x == 0
        return 1
    else
        return x
    end
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030213Z" creationid="hsugawa8651" creationdate="20181110T030213Z">
        <seg>map([A, B, C]) do x
    if x &lt; 0 &amp;&amp; iseven(x)
        return 0
    elseif x == 0
        return 1
    else
        return x
    end
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>map(x-&gt;begin
           if x &lt; 0 &amp;&amp; iseven(x)
               return 0
           elseif x == 0
               return 1
           else
               return x
           end
       end,
    [A, B, C])</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030210Z" creationid="hsugawa8651" creationdate="20181110T030210Z">
        <seg>map(x-&gt;begin
           if x &lt; 0 &amp;&amp; iseven(x)
               return 0
           elseif x == 0
               return 1
           else
               return x
           end
       end,
    [A, B, C])</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>module
export
import
using
baremodule
function
macro
return
do
begin
end
let
if
for
while
break
continue
try
finally
quote
local
global
const
struct
mutable struct
abstract type
primitive type
where
...
;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T041812Z" creationid="hsugawa8651" creationdate="20181110T041812Z">
        <seg>module
export
import
using
baremodule
function
macro
return
do
begin
end
let
if
for
while
break
continue
try
finally
quote
local
global
const
struct
mutable struct
abstract type
primitive type
where
...
;</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>module Bar
export bar
using Foo
function bar(...)
    &lt;x1/&gt; ... refer to Foo.baz as simply baz ....</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025158Z" creationid="hsugawa8651" creationdate="20181110T025158Z">
        <seg>module Bar
export bar
using Foo
function bar(...)
    &lt;x1/&gt; ... refer to Foo.baz as simply baz ....</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>n&lt;x1/&gt; worker processes, while &lt;x2/&gt;--machine-file file&lt;x3/&gt; will launch a worker
for each line in file &lt;x4/&gt;file&lt;x5/&gt;.</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224417Z" creationid="hsugawa8651" creationdate="20181109T224417Z">
        <seg>n&lt;x1/&gt;worker processes while&lt;x2/&gt;--machine file file&lt;x3/&gt;はワーカーを起動します。 ファイル&lt;x4/&gt;ファイル&lt;x5/&gt;の各行に対して実行されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>next = iterate(iter)
while next !== nothing
    (i, state) = next
    &lt;x1/&gt; body
    next = iterate(iter, state)
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T042115Z" creationid="hsugawa8651" creationdate="20181110T042115Z">
        <seg>next = iterate(iter)
while next !== nothing
    (i, state) = next
    &lt;x1/&gt; body
    next = iterate(iter, state)
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>obj3 = MyModule.someotherfunction(obj2, c)
...</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T024805Z" creationid="hsugawa8651" creationdate="20181110T024805Z">
        <seg>obj3 = MyModule.someotherfunction(obj2, c)
...</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>open("outfile", "w") do io
    write(io, data)
end</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T030218Z" creationid="hsugawa8651" creationdate="20181110T030218Z">
        <seg>open("outfile", "w") do io
    write(io, data)
end</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>range of &lt;x1/&gt;n&lt;x2/&gt; linearly spaced elements from &lt;x3/&gt;start&lt;x4/&gt; to &lt;x5/&gt;stop&lt;x6/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154500Z" creationid="hsugawa8651" creationdate="20181109T154500Z">
        <seg>&lt;x1/&gt;n&lt;x2/&gt;の範囲で、&lt;x3/&gt;開始&lt;x4/&gt;から&lt;x5/&gt;&lt;x6/&gt;までの直線的に間隔をあけた要素の範囲</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shorthand for &lt;x1/&gt;cat(A...; dims=1)&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154553Z" creationid="hsugawa8651" creationdate="20181109T154553Z">
        <seg>&lt;x1/&gt;cat(A.…;dims=1)&lt;x2/&gt;の短縮形</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>shorthand for &lt;x1/&gt;cat(A...; dims=2)&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154557Z" creationid="hsugawa8651" creationdate="20181109T154557Z">
        <seg>&lt;x1/&gt;cat(A.…;dims=2)&lt;x2/&gt;の短縮形</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the number of dimensions of &lt;x1/&gt;A&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154242Z" creationid="hsugawa8651" creationdate="20181109T154242Z">
        <seg>&lt;x1/&gt;A&lt;x2/&gt;の次元数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the number of elements in &lt;x1/&gt;A&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154235Z" creationid="hsugawa8651" creationdate="20181109T154235Z">
        <seg>&lt;x1/&gt;A&lt;x2/&gt;のエレメント数</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the size of &lt;x1/&gt;A&lt;x2/&gt; along dimension &lt;x3/&gt;n&lt;x4/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154250Z" creationid="hsugawa8651" creationdate="20181109T154250Z">
        <seg>&lt;x3/&gt;n&lt;x4/&gt;の寸法に沿って&lt;x1/&gt;A&lt;x2/&gt;の大きさ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the stride (linear index distance between adjacent elements) along dimension &lt;x1/&gt;k&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154305Z" creationid="hsugawa8651" creationdate="20181109T154305Z">
        <seg>寸法&lt;x1/&gt;k&lt;x2/&gt;に沿っての歩幅(隣接する要素間の線形指数の距離)</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>the type of the elements contained in &lt;x1/&gt;A&lt;x2/&gt;</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T154231Z" creationid="hsugawa8651" creationdate="20181109T154231Z">
        <seg>&lt;x1/&gt;A&lt;x2/&gt;に含まれるエレメントのタイプ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>v("yes") : v("no")
no
"no"</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230210Z" creationid="hsugawa8651" creationdate="20181109T230210Z">
        <seg>v("yes") : v("no")
no
"no"</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>v("yes") : v("no")
yes
"yes"

julia&gt; 1 &gt; 2 ?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T230206Z" creationid="hsugawa8651" creationdate="20181109T230206Z">
        <seg>v("yes") : v("no")
yes
"yes"

julia&gt; 1 &gt; 2 ?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>warning</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155745Z" creationid="hsugawa8651" creationdate="20181109T155745Z">
        <seg>warning</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>where each &lt;x1/&gt;I_k&lt;x2/&gt; may be a scalar integer, an array of integers, or any other
&lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref man-supported-index-types).</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T155358Z" creationid="hsugawa8651" creationdate="20181109T155116Z">
        <seg>where each &lt;x1/&gt;I_k&lt;x2/&gt; may be a scalar integer, an array of integers, or any other
&lt;x3/&gt;&lt;x4/&gt;&lt;x5/&gt;(@ref man-supported-index-types).</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>x&lt;x1/&gt; and &lt;x2/&gt;y&lt;x3/&gt;, avoiding overflow:</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181110T025755Z" creationid="hsugawa8651" creationdate="20181110T025755Z">
        <seg>x&lt;x1/&gt;と&lt;x2/&gt;y&lt;x3/&gt;はオーバーフローを回避します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>你好!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224500Z" creationid="hsugawa8651" creationdate="20181109T224500Z">
        <seg>你好!</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>안녕하세요?</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224507Z" creationid="hsugawa8651" creationdate="20181109T224507Z">
        <seg>안녕하세요?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv lang="EN-US">
        <seg>안녕하세요?")' &gt; &lt;x1/&gt;/.julia/config/startup.jl
$ julia
Greetings!</seg>
      </tuv>
      <tuv lang="JA" changeid="hsugawa8651" changedate="20181109T224503Z" creationid="hsugawa8651" creationdate="20181109T224503Z">
        <seg>안녕하세요?")' &gt; &lt;x1/&gt;/.julia/config/startup.jl
$ julia
Greetings!</seg>
      </tuv>
    </tu>
<!-- Alternative translations -->
  </body>
</tmx>
